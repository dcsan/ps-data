{
  "episodeId": "6GvB5lZJqcE",
  "channelSlug": "@howardjeremyp",
  "title": "Jeremy Howard demo for Mojo launch",
  "publishedAt": "2023-05-03T06:32:09.000Z",
  "rawLines": [
    {
      "lang": "en",
      "text": "but instead of telling you all this now",
      "offset": 0.84,
      "duration": 3.72
    },
    {
      "lang": "en",
      "text": "I'd love to introduce Jeremy Howard who",
      "offset": 2.52,
      "duration": 4.76
    },
    {
      "lang": "en",
      "text": "will show you how Mojo Works in practice",
      "offset": 4.56,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "[Music]",
      "offset": 7.28,
      "duration": 5.56
    },
    {
      "lang": "en",
      "text": "thanks Chris you know I realized it's",
      "offset": 10.08,
      "duration": 5.4
    },
    {
      "lang": "en",
      "text": "been 30 years since I first trained a",
      "offset": 12.84,
      "duration": 4.98
    },
    {
      "lang": "en",
      "text": "neural network and to be honest I",
      "offset": 15.48,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "haven't been that satisfied with any of",
      "offset": 17.82,
      "duration": 4.02
    },
    {
      "lang": "en",
      "text": "the languages that I've been able to use",
      "offset": 19.56,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "throughout that time in fact I",
      "offset": 21.84,
      "duration": 4.74
    },
    {
      "lang": "en",
      "text": "complained to Chris about this when I",
      "offset": 24.6,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "first met him years ago and Chris has",
      "offset": 26.58,
      "duration": 4.74
    },
    {
      "lang": "en",
      "text": "been telling me ever since don't worry",
      "offset": 29.16,
      "duration": 5.1
    },
    {
      "lang": "en",
      "text": "Jeremy one day we are going to fix this",
      "offset": 31.32,
      "duration": 6.3
    },
    {
      "lang": "en",
      "text": "the thing that I really want to fix is",
      "offset": 34.26,
      "duration": 6.38
    },
    {
      "lang": "en",
      "text": "to see a language where I can write",
      "offset": 37.62,
      "duration": 7.68
    },
    {
      "lang": "en",
      "text": "performant flexible hardcore code but it",
      "offset": 40.64,
      "duration": 6.64
    },
    {
      "lang": "en",
      "text": "should also be concise readable",
      "offset": 45.3,
      "duration": 5.34
    },
    {
      "lang": "en",
      "text": "understandable code and I think that",
      "offset": 47.28,
      "duration": 5.939
    },
    {
      "lang": "en",
      "text": "actually Chris and his team here have",
      "offset": 50.64,
      "duration": 4.62
    },
    {
      "lang": "en",
      "text": "done it with this new language called",
      "offset": 53.219,
      "duration": 4.98
    },
    {
      "lang": "en",
      "text": "Mojo Mojo is actually a super set of",
      "offset": 55.26,
      "duration": 6.119
    },
    {
      "lang": "en",
      "text": "python so I can use my python code here",
      "offset": 58.199,
      "duration": 5.16
    },
    {
      "lang": "en",
      "text": "check this out I'll show you what I mean",
      "offset": 61.379,
      "duration": 4.981
    },
    {
      "lang": "en",
      "text": "so here is a notebook right but this",
      "offset": 63.359,
      "duration": 4.981
    },
    {
      "lang": "en",
      "text": "notebook is no normal notebook this is a",
      "offset": 66.36,
      "duration": 4.02
    },
    {
      "lang": "en",
      "text": "Mojo notebook and",
      "offset": 68.34,
      "duration": 4.74
    },
    {
      "lang": "en",
      "text": "by way of demonstration because this is",
      "offset": 70.38,
      "duration": 4.2
    },
    {
      "lang": "en",
      "text": "the most fundamental foundational",
      "offset": 73.08,
      "duration": 3.719
    },
    {
      "lang": "en",
      "text": "algorithm in deep learning we're going",
      "offset": 74.58,
      "duration": 4.079
    },
    {
      "lang": "en",
      "text": "to look at matrix multiplication now of",
      "offset": 76.799,
      "duration": 3.421
    },
    {
      "lang": "en",
      "text": "course Mojo's got its own we don't need",
      "offset": 78.659,
      "duration": 3.061
    },
    {
      "lang": "en",
      "text": "to write our own but we're just showing",
      "offset": 80.22,
      "duration": 3.539
    },
    {
      "lang": "en",
      "text": "who we can actually write our own Hive",
      "offset": 81.72,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "performance matrix multiplication let's",
      "offset": 83.759,
      "duration": 4.5
    },
    {
      "lang": "en",
      "text": "start by comparing to python that's very",
      "offset": 86.52,
      "duration": 3.12
    },
    {
      "lang": "en",
      "text": "easy to do because we can just type",
      "offset": 88.259,
      "duration": 3.601
    },
    {
      "lang": "en",
      "text": "percent python in a Mojo notebook and",
      "offset": 89.64,
      "duration": 3.78
    },
    {
      "lang": "en",
      "text": "then it actually is going to run it on",
      "offset": 91.86,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "the C python interpreter so here's our",
      "offset": 93.42,
      "duration": 4.379
    },
    {
      "lang": "en",
      "text": "basic matrix multiplication go across",
      "offset": 95.46,
      "duration": 3.78
    },
    {
      "lang": "en",
      "text": "the rows and the columns multiply",
      "offset": 97.799,
      "duration": 4.081
    },
    {
      "lang": "en",
      "text": "together add it up let's write little",
      "offset": 99.24,
      "duration": 5.339
    },
    {
      "lang": "en",
      "text": "Matrix and a little Benchmark and try it",
      "offset": 101.88,
      "duration": 7.08
    },
    {
      "lang": "en",
      "text": "out and odia 0.005 gigaflops that's not",
      "offset": 104.579,
      "duration": 6.661
    },
    {
      "lang": "en",
      "text": "great how do we speed it up well",
      "offset": 108.96,
      "duration": 3.839
    },
    {
      "lang": "en",
      "text": "actually believe it or not we just take",
      "offset": 111.24,
      "duration": 3.72
    },
    {
      "lang": "en",
      "text": "that code we copy and paste it into a",
      "offset": 112.799,
      "duration": 5.1
    },
    {
      "lang": "en",
      "text": "new cell without the percent Python and",
      "offset": 114.96,
      "duration": 5.4
    },
    {
      "lang": "en",
      "text": "because Mojo is a superset of python",
      "offset": 117.899,
      "duration": 5.101
    },
    {
      "lang": "en",
      "text": "this runs two but this times it runs in",
      "offset": 120.36,
      "duration": 6.24
    },
    {
      "lang": "en",
      "text": "Mojo not in Python and immediately we",
      "offset": 123,
      "duration": 6.42
    },
    {
      "lang": "en",
      "text": "get an eight and a half times beta",
      "offset": 126.6,
      "duration": 5.76
    },
    {
      "lang": "en",
      "text": "now there's a lot of performance left on",
      "offset": 129.42,
      "duration": 5.16
    },
    {
      "lang": "en",
      "text": "the table here and to go faster we're",
      "offset": 132.36,
      "duration": 4.98
    },
    {
      "lang": "en",
      "text": "going to want a nice fast compact Matrix",
      "offset": 134.58,
      "duration": 3.9
    },
    {
      "lang": "en",
      "text": "tape",
      "offset": 137.34,
      "duration": 3.06
    },
    {
      "lang": "en",
      "text": "of course we can use the one that Mojo",
      "offset": 138.48,
      "duration": 3.72
    },
    {
      "lang": "en",
      "text": "provides for us but just to show you",
      "offset": 140.4,
      "duration": 3.66
    },
    {
      "lang": "en",
      "text": "that we can here we've implemented it",
      "offset": 142.2,
      "duration": 3.72
    },
    {
      "lang": "en",
      "text": "from scratch so we're actually creating",
      "offset": 144.06,
      "duration": 4.14
    },
    {
      "lang": "en",
      "text": "a struct here so this is nice compact in",
      "offset": 145.92,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "memory and it's got the normal things",
      "offset": 148.2,
      "duration": 3.72
    },
    {
      "lang": "en",
      "text": "we're used to done to get item and under",
      "offset": 150,
      "duration": 3.959
    },
    {
      "lang": "en",
      "text": "set item and stuff you don't expect to",
      "offset": 151.92,
      "duration": 5.16
    },
    {
      "lang": "en",
      "text": "see in Python like Alec and like simdi",
      "offset": 153.959,
      "duration": 4.86
    },
    {
      "lang": "en",
      "text": "and as you can see the whole thing fits",
      "offset": 157.08,
      "duration": 4.019
    },
    {
      "lang": "en",
      "text": "in about a page of code a screen of code",
      "offset": 158.819,
      "duration": 4.321
    },
    {
      "lang": "en",
      "text": "so that's our Matrix",
      "offset": 161.099,
      "duration": 4.621
    },
    {
      "lang": "en",
      "text": "and so to use it we take copy and paste",
      "offset": 163.14,
      "duration": 4.2
    },
    {
      "lang": "en",
      "text": "the code again but this time just added",
      "offset": 165.72,
      "duration": 4.2
    },
    {
      "lang": "en",
      "text": "type annotation these are matrices and",
      "offset": 167.34,
      "duration": 5.46
    },
    {
      "lang": "en",
      "text": "now it's a 300 times better suddenly",
      "offset": 169.92,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "things are looking pretty amazing but",
      "offset": 172.8,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "there's a lot more we can do",
      "offset": 174.72,
      "duration": 4.62
    },
    {
      "lang": "en",
      "text": "we can look at doing if our CPU supports",
      "offset": 176.64,
      "duration": 6.3
    },
    {
      "lang": "en",
      "text": "it say eight elements at a time using",
      "offset": 179.34,
      "duration": 6.6
    },
    {
      "lang": "en",
      "text": "simd instructions it's a bit of a mess",
      "offset": 182.94,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "to do that manually there's quite a bit",
      "offset": 185.94,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "of code but we can do it manually and we",
      "offset": 187.5,
      "duration": 6.18
    },
    {
      "lang": "en",
      "text": "get a 570 times beat up but better still",
      "offset": 190.5,
      "duration": 5.58
    },
    {
      "lang": "en",
      "text": "we can just call vectorize so just write",
      "offset": 193.68,
      "duration": 4.919
    },
    {
      "lang": "en",
      "text": "a DOT product operation call vectorize",
      "offset": 196.08,
      "duration": 4.439
    },
    {
      "lang": "en",
      "text": "and it'll automatically handle it on",
      "offset": 198.599,
      "duration": 4.14
    },
    {
      "lang": "en",
      "text": "simdi for us with the same performance",
      "offset": 200.519,
      "duration": 4.44
    },
    {
      "lang": "en",
      "text": "speed up so that's going to be happening",
      "offset": 202.739,
      "duration": 3.541
    },
    {
      "lang": "en",
      "text": "in the innermost loop we're going to be",
      "offset": 204.959,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "using simdi and in the outermost Loop",
      "offset": 206.28,
      "duration": 5.459
    },
    {
      "lang": "en",
      "text": "what if we just call paralyze this is",
      "offset": 208.879,
      "duration": 4.421
    },
    {
      "lang": "en",
      "text": "something we can do and now suddenly the",
      "offset": 211.739,
      "duration": 2.881
    },
    {
      "lang": "en",
      "text": "rows are going to be done on separate",
      "offset": 213.3,
      "duration": 2.34
    },
    {
      "lang": "en",
      "text": "cores",
      "offset": 214.62,
      "duration": 3.479
    },
    {
      "lang": "en",
      "text": "for a 2000 time speed up so we've only",
      "offset": 215.64,
      "duration": 4.2
    },
    {
      "lang": "en",
      "text": "got four calls going on here so it's not",
      "offset": 218.099,
      "duration": 3.36
    },
    {
      "lang": "en",
      "text": "huge if you've got more cores it'll be",
      "offset": 219.84,
      "duration": 3.479
    },
    {
      "lang": "en",
      "text": "much bigger this is something you",
      "offset": 221.459,
      "duration": 4.381
    },
    {
      "lang": "en",
      "text": "absolutely can't do with python you can",
      "offset": 223.319,
      "duration": 4.441
    },
    {
      "lang": "en",
      "text": "do some very very basic parallel",
      "offset": 225.84,
      "duration": 3.959
    },
    {
      "lang": "en",
      "text": "processing with python but it's",
      "offset": 227.76,
      "duration": 4.259
    },
    {
      "lang": "en",
      "text": "literally creating separate processes",
      "offset": 229.799,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "and having to move memory around and",
      "offset": 232.019,
      "duration": 3.961
    },
    {
      "lang": "en",
      "text": "it's pretty nasty there's all kinds of",
      "offset": 233.879,
      "duration": 3.36
    },
    {
      "lang": "en",
      "text": "complexities around the global",
      "offset": 235.98,
      "duration": 2.94
    },
    {
      "lang": "en",
      "text": "interpreter like and so forth as well",
      "offset": 237.239,
      "duration": 4.321
    },
    {
      "lang": "en",
      "text": "this is how easy it is in Mojo and so",
      "offset": 238.92,
      "duration": 4.44
    },
    {
      "lang": "en",
      "text": "suddenly we've got a 2000 times faster",
      "offset": 241.56,
      "duration": 3.539
    },
    {
      "lang": "en",
      "text": "matrix multiplication written from",
      "offset": 243.36,
      "duration": 2.7
    },
    {
      "lang": "en",
      "text": "scratch",
      "offset": 245.099,
      "duration": 3.661
    },
    {
      "lang": "en",
      "text": "we can also make sure that we're using",
      "offset": 246.06,
      "duration": 4.679
    },
    {
      "lang": "en",
      "text": "the cache really effectively by doing",
      "offset": 248.76,
      "duration": 4.259
    },
    {
      "lang": "en",
      "text": "tailings so doing a few bits of memory",
      "offset": 250.739,
      "duration": 3.961
    },
    {
      "lang": "en",
      "text": "that's close to each other at a time and",
      "offset": 253.019,
      "duration": 4.021
    },
    {
      "lang": "en",
      "text": "reusing them tiling is as easy as",
      "offset": 254.7,
      "duration": 3.779
    },
    {
      "lang": "en",
      "text": "creating this little tailing function",
      "offset": 257.04,
      "duration": 6
    },
    {
      "lang": "en",
      "text": "and then calling it to tile our function",
      "offset": 258.479,
      "duration": 6.301
    },
    {
      "lang": "en",
      "text": "so now we've got something that is",
      "offset": 263.04,
      "duration": 5.3
    },
    {
      "lang": "en",
      "text": "paralyzed tiled and vectorized for a",
      "offset": 264.78,
      "duration": 6.96
    },
    {
      "lang": "en",
      "text": "2170 times speed up over python we can",
      "offset": 268.34,
      "duration": 7.24
    },
    {
      "lang": "en",
      "text": "also add unrolling for a 2200 time speed",
      "offset": 271.74,
      "duration": 6.36
    },
    {
      "lang": "en",
      "text": "up so vectorize unroll is already built",
      "offset": 275.58,
      "duration": 4.5
    },
    {
      "lang": "en",
      "text": "into Mojo so we don't even have to write",
      "offset": 278.1,
      "duration": 5.099
    },
    {
      "lang": "en",
      "text": "that now there's a lot of complexity",
      "offset": 280.08,
      "duration": 5.28
    },
    {
      "lang": "en",
      "text": "here though like what tile size do we",
      "offset": 283.199,
      "duration": 5.401
    },
    {
      "lang": "en",
      "text": "use how many processors what's in these",
      "offset": 285.36,
      "duration": 6
    },
    {
      "lang": "en",
      "text": "size all this mess to worry about and",
      "offset": 288.6,
      "duration": 4.68
    },
    {
      "lang": "en",
      "text": "each different person you deploy to is",
      "offset": 291.36,
      "duration": 3.059
    },
    {
      "lang": "en",
      "text": "going to have different versions of",
      "offset": 293.28,
      "duration": 2.639
    },
    {
      "lang": "en",
      "text": "these or have different memory they're",
      "offset": 294.419,
      "duration": 4.021
    },
    {
      "lang": "en",
      "text": "going to have different CPUs and so",
      "offset": 295.919,
      "duration": 5.581
    },
    {
      "lang": "en",
      "text": "forth no worries look at what you can do",
      "offset": 298.44,
      "duration": 5.819
    },
    {
      "lang": "en",
      "text": "we can create an auto-tuned version by",
      "offset": 301.5,
      "duration": 4.919
    },
    {
      "lang": "en",
      "text": "simply calling auto-tune so if we want",
      "offset": 304.259,
      "duration": 4.561
    },
    {
      "lang": "en",
      "text": "an auto-tune tail size we just say hey",
      "offset": 306.419,
      "duration": 4.381
    },
    {
      "lang": "en",
      "text": "Mojo try these different tail sizes for",
      "offset": 308.82,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "us figure out which one's the fastest",
      "offset": 310.8,
      "duration": 5.399
    },
    {
      "lang": "en",
      "text": "compile the fastest version for us cache",
      "offset": 312.9,
      "duration": 5.7
    },
    {
      "lang": "en",
      "text": "it for this individual computer and then",
      "offset": 316.199,
      "duration": 5.761
    },
    {
      "lang": "en",
      "text": "use that paralyzed tiled unrolled",
      "offset": 318.6,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "vectorized",
      "offset": 321.96,
      "duration": 6
    },
    {
      "lang": "en",
      "text": "for a 4164 times better so this is",
      "offset": 324.12,
      "duration": 6.54
    },
    {
      "lang": "en",
      "text": "pretty remarkable right now it's not",
      "offset": 327.96,
      "duration": 4.98
    },
    {
      "lang": "en",
      "text": "just linear algebra stuff we can do",
      "offset": 330.66,
      "duration": 4.86
    },
    {
      "lang": "en",
      "text": "really iterative stuff like calculating",
      "offset": 332.94,
      "duration": 4.62
    },
    {
      "lang": "en",
      "text": "mandelbrot so we could create our own",
      "offset": 335.52,
      "duration": 3.78
    },
    {
      "lang": "en",
      "text": "complex number type and it's going to be",
      "offset": 337.56,
      "duration": 3
    },
    {
      "lang": "en",
      "text": "a strat so again it's going to be",
      "offset": 339.3,
      "duration": 3.239
    },
    {
      "lang": "en",
      "text": "compact in memory it looks like",
      "offset": 340.56,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "absolutely standard python as you can",
      "offset": 342.539,
      "duration": 5.041
    },
    {
      "lang": "en",
      "text": "see multiplying subtracting using the",
      "offset": 345.36,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "operations",
      "offset": 347.58,
      "duration": 4.2
    },
    {
      "lang": "en",
      "text": "and to create the mandelbrook kernel we",
      "offset": 348.96,
      "duration": 5.4
    },
    {
      "lang": "en",
      "text": "just take the classic mandelbrot set the",
      "offset": 351.78,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "equation iterative equation and pop it",
      "offset": 354.36,
      "duration": 4.44
    },
    {
      "lang": "en",
      "text": "in Python here",
      "offset": 357.3,
      "duration": 3.42
    },
    {
      "lang": "en",
      "text": "and then we can call it a bunch of times",
      "offset": 358.8,
      "duration": 3.679
    },
    {
      "lang": "en",
      "text": "in a loop",
      "offset": 360.72,
      "duration": 4.259
    },
    {
      "lang": "en",
      "text": "returning at the appropriate time to",
      "offset": 362.479,
      "duration": 4.841
    },
    {
      "lang": "en",
      "text": "compute the mandelbrot set that's all",
      "offset": 364.979,
      "duration": 4.681
    },
    {
      "lang": "en",
      "text": "very well and good did it work it'd be",
      "offset": 367.32,
      "duration": 4.2
    },
    {
      "lang": "en",
      "text": "nice to look at it so how would you look",
      "offset": 369.66,
      "duration": 4.259
    },
    {
      "lang": "en",
      "text": "at it would be nice to use matplotlib",
      "offset": 371.52,
      "duration": 5.399
    },
    {
      "lang": "en",
      "text": "oh no worries every single python",
      "offset": 373.919,
      "duration": 4.021
    },
    {
      "lang": "en",
      "text": "Library",
      "offset": 376.919,
      "duration": 3.481
    },
    {
      "lang": "en",
      "text": "Works in Mojo and you can import it",
      "offset": 377.94,
      "duration": 4.979
    },
    {
      "lang": "en",
      "text": "check this out plot is import the python",
      "offset": 380.4,
      "duration": 5.579
    },
    {
      "lang": "en",
      "text": "module matplotlib NP is import the",
      "offset": 382.919,
      "duration": 6
    },
    {
      "lang": "en",
      "text": "module numpy and the rest of it",
      "offset": 385.979,
      "duration": 6.181
    },
    {
      "lang": "en",
      "text": "this is actually Mojo code but it's also",
      "offset": 388.919,
      "duration": 5.821
    },
    {
      "lang": "en",
      "text": "python code and",
      "offset": 392.16,
      "duration": 4.979
    },
    {
      "lang": "en",
      "text": "it works and I don't know if you",
      "offset": 394.74,
      "duration": 3.899
    },
    {
      "lang": "en",
      "text": "remember but Chris actually said the",
      "offset": 397.139,
      "duration": 3.961
    },
    {
      "lang": "en",
      "text": "mandelbrot set is 35 000 times faster",
      "offset": 398.639,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "than Python and that's because we could",
      "offset": 401.1,
      "duration": 4.379
    },
    {
      "lang": "en",
      "text": "also do our even faster version where",
      "offset": 403.199,
      "duration": 4.681
    },
    {
      "lang": "en",
      "text": "we're handling it with simdi and we can",
      "offset": 405.479,
      "duration": 4.621
    },
    {
      "lang": "en",
      "text": "actually create the kind of iterative",
      "offset": 407.88,
      "duration": 5.58
    },
    {
      "lang": "en",
      "text": "algorithm that you just can't do in",
      "offset": 410.1,
      "duration": 5.939
    },
    {
      "lang": "en",
      "text": "Python even with the help of stuff like",
      "offset": 413.46,
      "duration": 5.459
    },
    {
      "lang": "en",
      "text": "numpy this is something which is really",
      "offset": 416.039,
      "duration": 5.041
    },
    {
      "lang": "en",
      "text": "unique to Mojo",
      "offset": 418.919,
      "duration": 4.981
    },
    {
      "lang": "en",
      "text": "so we now have something here which is",
      "offset": 421.08,
      "duration": 5.7
    },
    {
      "lang": "en",
      "text": "incredibly flexible incredibly fast can",
      "offset": 423.9,
      "duration": 4.919
    },
    {
      "lang": "en",
      "text": "utilize the hardware you have no matter",
      "offset": 426.78,
      "duration": 5.1
    },
    {
      "lang": "en",
      "text": "what it is and is really understandable",
      "offset": 428.819,
      "duration": 6.121
    },
    {
      "lang": "en",
      "text": "to python programmers like you and me I",
      "offset": 431.88,
      "duration": 5.159
    },
    {
      "lang": "en",
      "text": "think finally we're at a point where we",
      "offset": 434.94,
      "duration": 3.72
    },
    {
      "lang": "en",
      "text": "are going to have something where I",
      "offset": 437.039,
      "duration": 6.5
    },
    {
      "lang": "en",
      "text": "actually enjoy writing neural networks",
      "offset": 438.66,
      "duration": 4.879
    },
    {
      "lang": "en",
      "text": "wow how awesome was that",
      "offset": 444.44,
      "duration": 4.44
    }
  ],
  "cleanText": null,
  "dumpedAt": "2025-07-21T18:43:25.108Z"
}