{
  "episodeId": "dWkTSjYco_g",
  "channelSlug": "@datacamp",
  "title": "Docker and Kubernetes Crash Course | Containerization, Virtualization & More",
  "publishedAt": "2025-05-07T12:10:13.000Z",
  "rawLines": [
    {
      "lang": "en",
      "text": "Hi data scamps and data champs. Today",
      "offset": 0.16,
      "duration": 5.679
    },
    {
      "lang": "en",
      "text": "we're kicking off a crash course on",
      "offset": 3.439,
      "duration": 5.521
    },
    {
      "lang": "en",
      "text": "Docker and Kubernetes, two essential",
      "offset": 5.839,
      "duration": 5.361
    },
    {
      "lang": "en",
      "text": "tools for modern DevOps and scalable",
      "offset": 8.96,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "software development. This video is",
      "offset": 11.2,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "taken from a series of courses on data",
      "offset": 12.96,
      "duration": 4.159
    },
    {
      "lang": "en",
      "text": "camp. You'll learn the foundations of",
      "offset": 15.12,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "containerization and virtualization, how",
      "offset": 17.119,
      "duration": 4.401
    },
    {
      "lang": "en",
      "text": "to build and manage containers with",
      "offset": 19.84,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "Docker, and how to orchestrate the",
      "offset": 21.52,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "containers at scale using Kubernetes.",
      "offset": 23.92,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "You'll cover everything from Docker",
      "offset": 26.4,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "files to multicontainer setups using",
      "offset": 28.08,
      "duration": 4.319
    },
    {
      "lang": "en",
      "text": "Docker Compose and see how these fit",
      "offset": 30.32,
      "duration": 4.239
    },
    {
      "lang": "en",
      "text": "into data engineering and MLOps",
      "offset": 32.399,
      "duration": 3.921
    },
    {
      "lang": "en",
      "text": "workflows. If you're ready to take your",
      "offset": 34.559,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "DevOps skills to the next level, please",
      "offset": 36.32,
      "duration": 3.919
    },
    {
      "lang": "en",
      "text": "like, subscribe, and check out the full",
      "offset": 38.239,
      "duration": 4.561
    },
    {
      "lang": "en",
      "text": "track in the description below. Happy",
      "offset": 40.239,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "learning.",
      "offset": 42.8,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "Hi, my name is Julia and I will be your",
      "offset": 44.559,
      "duration": 5.121
    },
    {
      "lang": "en",
      "text": "course instructor as we dive into the",
      "offset": 47.52,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "conceptual foundations of the modern",
      "offset": 49.68,
      "duration": 3.96
    },
    {
      "lang": "en",
      "text": "text stack of Docker and",
      "offset": 51.68,
      "duration": 4.28
    },
    {
      "lang": "en",
      "text": "Kubernetes. Virtualization and",
      "offset": 53.64,
      "duration": 4.12
    },
    {
      "lang": "en",
      "text": "containerization are important",
      "offset": 55.96,
      "duration": 3.88
    },
    {
      "lang": "en",
      "text": "technologies that I use in my",
      "offset": 57.76,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "professional life as a consultant in",
      "offset": 59.84,
      "duration": 4.639
    },
    {
      "lang": "en",
      "text": "artificial intelligence and I'm excited",
      "offset": 61.76,
      "duration": 5.679
    },
    {
      "lang": "en",
      "text": "to introduce them to you.",
      "offset": 64.479,
      "duration": 5.201
    },
    {
      "lang": "en",
      "text": "While the first chapter focuses on",
      "offset": 67.439,
      "duration": 4.561
    },
    {
      "lang": "en",
      "text": "defining and comparing containerization",
      "offset": 69.68,
      "duration": 3.16
    },
    {
      "lang": "en",
      "text": "and",
      "offset": 72,
      "duration": 3.119
    },
    {
      "lang": "en",
      "text": "virtualization, the second chapter",
      "offset": 72.84,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "focuses on the application of both",
      "offset": 75.119,
      "duration": 4.401
    },
    {
      "lang": "en",
      "text": "technologies and how they relate to",
      "offset": 77.24,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "Docker and",
      "offset": 79.52,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "Kubernetes. As a teaser, we might even",
      "offset": 81,
      "duration": 6.28
    },
    {
      "lang": "en",
      "text": "get our hands a little dirty. Let's dive",
      "offset": 84.24,
      "duration": 5.16
    },
    {
      "lang": "en",
      "text": "right in by defining",
      "offset": 87.28,
      "duration": 4.799
    },
    {
      "lang": "en",
      "text": "virtualization. In our daily lives, we",
      "offset": 89.4,
      "duration": 5.16
    },
    {
      "lang": "en",
      "text": "use personal computers such as laptops",
      "offset": 92.079,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "and smartphones.",
      "offset": 94.56,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "Since both examples are tangible",
      "offset": 96.479,
      "duration": 5.481
    },
    {
      "lang": "en",
      "text": "devices, we can also call them physical",
      "offset": 98.72,
      "duration": 6.079
    },
    {
      "lang": "en",
      "text": "machines. In the world of technology,",
      "offset": 101.96,
      "duration": 5.96
    },
    {
      "lang": "en",
      "text": "servers play an important role. Servers",
      "offset": 104.799,
      "duration": 5.521
    },
    {
      "lang": "en",
      "text": "are specialized computers that serve",
      "offset": 107.92,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "other computers, also called clients, on",
      "offset": 110.32,
      "duration": 5.68
    },
    {
      "lang": "en",
      "text": "a network, performing tasks such as",
      "offset": 113.36,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "hosting websites, or running data",
      "offset": 116,
      "duration": 5.28
    },
    {
      "lang": "en",
      "text": "analytics. Just to refresh our memories,",
      "offset": 118,
      "duration": 6
    },
    {
      "lang": "en",
      "text": "a computer system consists of hardware",
      "offset": 121.28,
      "duration": 5.72
    },
    {
      "lang": "en",
      "text": "such as the central processing unit,",
      "offset": 124,
      "duration": 6.16
    },
    {
      "lang": "en",
      "text": "storage, motherboard, and software such",
      "offset": 127,
      "duration": 5.76
    },
    {
      "lang": "en",
      "text": "as the operating system and application",
      "offset": 130.16,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "software. Things get a little tricky",
      "offset": 132.76,
      "duration": 4.44
    },
    {
      "lang": "en",
      "text": "when we need our computers to do more",
      "offset": 135.28,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "than one thing at a time. That's where",
      "offset": 137.2,
      "duration": 5.56
    },
    {
      "lang": "en",
      "text": "physical machines have the following",
      "offset": 139.92,
      "duration": 6.24
    },
    {
      "lang": "en",
      "text": "limitations. They can be expensive. More",
      "offset": 142.76,
      "duration": 5.96
    },
    {
      "lang": "en",
      "text": "tasks often mean more hardware, which",
      "offset": 146.16,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "means a bigger investment in buying and",
      "offset": 148.72,
      "duration": 3.48
    },
    {
      "lang": "en",
      "text": "maintaining the",
      "offset": 150.72,
      "duration": 4.159
    },
    {
      "lang": "en",
      "text": "equipment. Maintaining multiple physical",
      "offset": 152.2,
      "duration": 5.56
    },
    {
      "lang": "en",
      "text": "machines can be a hassle. Updates or",
      "offset": 154.879,
      "duration": 5.281
    },
    {
      "lang": "en",
      "text": "repairs require downtime, which can",
      "offset": 157.76,
      "duration": 4.44
    },
    {
      "lang": "en",
      "text": "interrupt important",
      "offset": 160.16,
      "duration": 5
    },
    {
      "lang": "en",
      "text": "work. Physical machines can be",
      "offset": 162.2,
      "duration": 5.319
    },
    {
      "lang": "en",
      "text": "inflexible, especially when it comes to",
      "offset": 165.16,
      "duration": 5.079
    },
    {
      "lang": "en",
      "text": "scaling. When a machine needs more",
      "offset": 167.519,
      "duration": 5.121
    },
    {
      "lang": "en",
      "text": "resources, you have to replace entire",
      "offset": 170.239,
      "duration": 4.401
    },
    {
      "lang": "en",
      "text": "hardware components which can be a",
      "offset": 172.64,
      "duration": 5.239
    },
    {
      "lang": "en",
      "text": "complex and timeconuming",
      "offset": 174.64,
      "duration": 5.84
    },
    {
      "lang": "en",
      "text": "process. This is where virtual machines",
      "offset": 177.879,
      "duration": 5.561
    },
    {
      "lang": "en",
      "text": "come in. Instead of adding more physical",
      "offset": 180.48,
      "duration": 5.399
    },
    {
      "lang": "en",
      "text": "hardware, we can create virtual",
      "offset": 183.44,
      "duration": 6.879
    },
    {
      "lang": "en",
      "text": "machines. A virtual machine or short VM",
      "offset": 185.879,
      "duration": 7.161
    },
    {
      "lang": "en",
      "text": "is a simulated computer system inside",
      "offset": 190.319,
      "duration": 5.121
    },
    {
      "lang": "en",
      "text": "another computer that has its own",
      "offset": 193.04,
      "duration": 5.839
    },
    {
      "lang": "en",
      "text": "operating system and applications.",
      "offset": 195.44,
      "duration": 6.079
    },
    {
      "lang": "en",
      "text": "Multiple VMs can run on the same host",
      "offset": 198.879,
      "duration": 4.881
    },
    {
      "lang": "en",
      "text": "machine. This is the physical computer",
      "offset": 201.519,
      "duration": 4.881
    },
    {
      "lang": "en",
      "text": "that hosts multiple VMs. And each",
      "offset": 203.76,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "virtual machine operates independently",
      "offset": 206.4,
      "duration": 5
    },
    {
      "lang": "en",
      "text": "without interfering with other",
      "offset": 208.8,
      "duration": 7.079
    },
    {
      "lang": "en",
      "text": "VMs. VMs offer advantages over physical",
      "offset": 211.4,
      "duration": 7
    },
    {
      "lang": "en",
      "text": "machines. We can get the most out of our",
      "offset": 215.879,
      "duration": 4.841
    },
    {
      "lang": "en",
      "text": "hardware by running multiple VMs on a",
      "offset": 218.4,
      "duration": 5.28
    },
    {
      "lang": "en",
      "text": "single host machine. This maximizes",
      "offset": 220.72,
      "duration": 5.92
    },
    {
      "lang": "en",
      "text": "resource utilization, resulting in cost",
      "offset": 223.68,
      "duration": 5.479
    },
    {
      "lang": "en",
      "text": "efficiencies and sustainable",
      "offset": 226.64,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "usage. VMs can upgrade their hardware",
      "offset": 229.159,
      "duration": 4.921
    },
    {
      "lang": "en",
      "text": "without having to purchase additional",
      "offset": 232,
      "duration": 4.239
    },
    {
      "lang": "en",
      "text": "physical hardware as long as the host",
      "offset": 234.08,
      "duration": 4.519
    },
    {
      "lang": "en",
      "text": "machine has sufficient",
      "offset": 236.239,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "resources. VMs on the same host are",
      "offset": 238.599,
      "duration": 5.081
    },
    {
      "lang": "en",
      "text": "completely isolated from each other,",
      "offset": 241.439,
      "duration": 3.761
    },
    {
      "lang": "en",
      "text": "preventing the spread of potential",
      "offset": 243.68,
      "duration": 3.759
    },
    {
      "lang": "en",
      "text": "threats between them and increasing",
      "offset": 245.2,
      "duration": 3.88
    },
    {
      "lang": "en",
      "text": "security and",
      "offset": 247.439,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "stability. With VMs, different operating",
      "offset": 249.08,
      "duration": 5.56
    },
    {
      "lang": "en",
      "text": "systems can run seamlessly on the same",
      "offset": 252.239,
      "duration": 3.4
    },
    {
      "lang": "en",
      "text": "host",
      "offset": 254.64,
      "duration": 4.719
    },
    {
      "lang": "en",
      "text": "machine. Simply put, virtualization is",
      "offset": 255.639,
      "duration": 5.72
    },
    {
      "lang": "en",
      "text": "the process of creating a virtual",
      "offset": 259.359,
      "duration": 4.801
    },
    {
      "lang": "en",
      "text": "version of a computing resource. There",
      "offset": 261.359,
      "duration": 4.601
    },
    {
      "lang": "en",
      "text": "are different levels of",
      "offset": 264.16,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "virtualization. The most advanced level",
      "offset": 265.96,
      "duration": 5
    },
    {
      "lang": "en",
      "text": "is the virtualization of an entire",
      "offset": 268.56,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "computer system, including both hardware",
      "offset": 270.96,
      "duration": 4.799
    },
    {
      "lang": "en",
      "text": "and software.",
      "offset": 273.68,
      "duration": 4.959
    },
    {
      "lang": "en",
      "text": "This results in a VM and is also called",
      "offset": 275.759,
      "duration": 4.44
    },
    {
      "lang": "en",
      "text": "full",
      "offset": 278.639,
      "duration": 3.361
    },
    {
      "lang": "en",
      "text": "virtualization. Other levels of",
      "offset": 280.199,
      "duration": 4.121
    },
    {
      "lang": "en",
      "text": "virtualization include virtualizing a",
      "offset": 282,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "specific computer component such as the",
      "offset": 284.32,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "operating system or storage which does",
      "offset": 286.8,
      "duration": 4.679
    },
    {
      "lang": "en",
      "text": "not result in a virtual",
      "offset": 289.68,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "machine. Next, we will explore another",
      "offset": 291.479,
      "duration": 5.601
    },
    {
      "lang": "en",
      "text": "level of virtualization. Stay",
      "offset": 294.16,
      "duration": 5.84
    },
    {
      "lang": "en",
      "text": "tuned. As we learned earlier, there are",
      "offset": 297.08,
      "duration": 4.559
    },
    {
      "lang": "en",
      "text": "different levels of",
      "offset": 300,
      "duration": 3.759
    },
    {
      "lang": "en",
      "text": "virtualization. In addition to",
      "offset": 301.639,
      "duration": 4.921
    },
    {
      "lang": "en",
      "text": "virtualizing an entire computer, we can",
      "offset": 303.759,
      "duration": 5.241
    },
    {
      "lang": "en",
      "text": "also virtualize certain computer",
      "offset": 306.56,
      "duration": 4.52
    },
    {
      "lang": "en",
      "text": "components. Let's learn about",
      "offset": 309,
      "duration": 4.6
    },
    {
      "lang": "en",
      "text": "virtualization at the operating system",
      "offset": 311.08,
      "duration": 5.76
    },
    {
      "lang": "en",
      "text": "level, also known as",
      "offset": 313.6,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "containerization. Since we will be using",
      "offset": 316.84,
      "duration": 4.52
    },
    {
      "lang": "en",
      "text": "the term environment a lot throughout",
      "offset": 318.96,
      "duration": 5.16
    },
    {
      "lang": "en",
      "text": "this course, let's get our definitions",
      "offset": 321.36,
      "duration": 5.76
    },
    {
      "lang": "en",
      "text": "straight. In this course, environment",
      "offset": 324.12,
      "duration": 5.32
    },
    {
      "lang": "en",
      "text": "refers to the system that surrounds an",
      "offset": 327.12,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "IT application, including the operating",
      "offset": 329.44,
      "duration": 7.52
    },
    {
      "lang": "en",
      "text": "system or short OS, hardware, software,",
      "offset": 332.08,
      "duration": 6.52
    },
    {
      "lang": "en",
      "text": "and other",
      "offset": 336.96,
      "duration": 4.799
    },
    {
      "lang": "en",
      "text": "resources. OS level virtualization",
      "offset": 338.6,
      "duration": 5.48
    },
    {
      "lang": "en",
      "text": "involves virtualizing the operating",
      "offset": 341.759,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "system itself rather than the entire",
      "offset": 344.08,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "computer. This means that we don't",
      "offset": 346.639,
      "duration": 4.881
    },
    {
      "lang": "en",
      "text": "virtualize the underlying hardware or",
      "offset": 349.44,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "the OS kernel which is the core",
      "offset": 351.52,
      "duration": 5.119
    },
    {
      "lang": "en",
      "text": "component that facilitates communication",
      "offset": 354,
      "duration": 4.44
    },
    {
      "lang": "en",
      "text": "between software and",
      "offset": 356.639,
      "duration": 5.441
    },
    {
      "lang": "en",
      "text": "hardware. Instead, we create virtualized",
      "offset": 358.44,
      "duration": 6.599
    },
    {
      "lang": "en",
      "text": "isolated user spaces that interact with",
      "offset": 362.08,
      "duration": 7.119
    },
    {
      "lang": "en",
      "text": "the hosts nonverirtualized OS kernel.",
      "offset": 365.039,
      "duration": 7.201
    },
    {
      "lang": "en",
      "text": "These user spaces are dynamic areas",
      "offset": 369.199,
      "duration": 6.081
    },
    {
      "lang": "en",
      "text": "where user level applications operate",
      "offset": 372.24,
      "duration": 5.84
    },
    {
      "lang": "en",
      "text": "and the OS kernel allocates hardware",
      "offset": 375.28,
      "duration": 4.68
    },
    {
      "lang": "en",
      "text": "resources to them as",
      "offset": 378.08,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "needed. As briefly mentioned previously,",
      "offset": 379.96,
      "duration": 7.12
    },
    {
      "lang": "en",
      "text": "OS level virtualization is also called",
      "offset": 383.52,
      "duration": 5.76
    },
    {
      "lang": "en",
      "text": "containerization because the isolated",
      "offset": 387.08,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "user spaces are also known as",
      "offset": 389.28,
      "duration": 4.28
    },
    {
      "lang": "en",
      "text": "containers.",
      "offset": 391.88,
      "duration": 4.039
    },
    {
      "lang": "en",
      "text": "Containers provide an isolated",
      "offset": 393.56,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "environment in which to run an",
      "offset": 395.919,
      "duration": 5.28
    },
    {
      "lang": "en",
      "text": "application. It contains everything",
      "offset": 398.6,
      "duration": 4.439
    },
    {
      "lang": "en",
      "text": "needed for the application to run",
      "offset": 401.199,
      "duration": 5
    },
    {
      "lang": "en",
      "text": "smoothly such as the source code,",
      "offset": 403.039,
      "duration": 5.801
    },
    {
      "lang": "en",
      "text": "dependencies, and",
      "offset": 406.199,
      "duration": 4.961
    },
    {
      "lang": "en",
      "text": "configurations. So the definition of",
      "offset": 408.84,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "containerization is",
      "offset": 411.16,
      "duration": 5.159
    },
    {
      "lang": "en",
      "text": "twofold. First, containerization is",
      "offset": 413.08,
      "duration": 5.48
    },
    {
      "lang": "en",
      "text": "virtualization at the operating system",
      "offset": 416.319,
      "duration": 6.081
    },
    {
      "lang": "en",
      "text": "level. Second, containerization is the",
      "offset": 418.56,
      "duration": 6.8
    },
    {
      "lang": "en",
      "text": "process of packaging an application and",
      "offset": 422.4,
      "duration": 5.84
    },
    {
      "lang": "en",
      "text": "its dependencies into a container with",
      "offset": 425.36,
      "duration": 6.119
    },
    {
      "lang": "en",
      "text": "its own environment managed by the OS",
      "offset": 428.24,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "kernel. Let's consider the",
      "offset": 431.479,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "characteristics of",
      "offset": 433.68,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "containers. Containers allow multiple",
      "offset": 436.039,
      "duration": 5.56
    },
    {
      "lang": "en",
      "text": "applications to run reliably on a single",
      "offset": 438.72,
      "duration": 5.759
    },
    {
      "lang": "en",
      "text": "host operating system without requiring",
      "offset": 441.599,
      "duration": 5.361
    },
    {
      "lang": "en",
      "text": "a dedicated operating system for each",
      "offset": 444.479,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "application.",
      "offset": 446.96,
      "duration": 4.76
    },
    {
      "lang": "en",
      "text": "Each application is packaged in its own",
      "offset": 449.199,
      "duration": 4.961
    },
    {
      "lang": "en",
      "text": "container which means that each",
      "offset": 451.72,
      "duration": 5.16
    },
    {
      "lang": "en",
      "text": "application has its own environment and",
      "offset": 454.16,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "does not interfere with the dependencies",
      "offset": 456.88,
      "duration": 3.719
    },
    {
      "lang": "en",
      "text": "of another",
      "offset": 458.96,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "application. Developing applications in",
      "offset": 460.599,
      "duration": 5.16
    },
    {
      "lang": "en",
      "text": "containers also makes it easy to keep",
      "offset": 463.36,
      "duration": 4.559
    },
    {
      "lang": "en",
      "text": "track of which dependencies are needed",
      "offset": 465.759,
      "duration": 4.681
    },
    {
      "lang": "en",
      "text": "for an application and which are",
      "offset": 467.919,
      "duration": 5.361
    },
    {
      "lang": "en",
      "text": "not. When comparing application",
      "offset": 470.44,
      "duration": 5.4
    },
    {
      "lang": "en",
      "text": "development in containers to physical",
      "offset": 473.28,
      "duration": 5.639
    },
    {
      "lang": "en",
      "text": "machines, containers offer the following",
      "offset": 475.84,
      "duration": 5.88
    },
    {
      "lang": "en",
      "text": "advantages. First, they provide",
      "offset": 478.919,
      "duration": 5.4
    },
    {
      "lang": "en",
      "text": "isolation, meaning they do not interfere",
      "offset": 481.72,
      "duration": 4.52
    },
    {
      "lang": "en",
      "text": "with other processes running on the same",
      "offset": 484.319,
      "duration": 4.961
    },
    {
      "lang": "en",
      "text": "host machine. For example, if one",
      "offset": 486.24,
      "duration": 5.28
    },
    {
      "lang": "en",
      "text": "application crashes, it won't affect",
      "offset": 489.28,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "others running in separate containers on",
      "offset": 491.52,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "the same host.",
      "offset": 493.84,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "Second, containers are highly portable",
      "offset": 496,
      "duration": 3.72
    },
    {
      "lang": "en",
      "text": "and",
      "offset": 498.8,
      "duration": 2.959
    },
    {
      "lang": "en",
      "text": "reproducible because they contain",
      "offset": 499.72,
      "duration": 4.199
    },
    {
      "lang": "en",
      "text": "everything needed for the application.",
      "offset": 501.759,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "They're easy to move and behave",
      "offset": 503.919,
      "duration": 4.601
    },
    {
      "lang": "en",
      "text": "identically when run on different host",
      "offset": 505.919,
      "duration": 5.68
    },
    {
      "lang": "en",
      "text": "machines. Finally, containers have fast",
      "offset": 508.52,
      "duration": 5.639
    },
    {
      "lang": "en",
      "text": "startup times. Unlike applications",
      "offset": 511.599,
      "duration": 4.961
    },
    {
      "lang": "en",
      "text": "running on physical machines, containers",
      "offset": 514.159,
      "duration": 4.481
    },
    {
      "lang": "en",
      "text": "don't need to load an entire operating",
      "offset": 516.56,
      "duration": 4.959
    },
    {
      "lang": "en",
      "text": "system. This is critical for highly",
      "offset": 518.64,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "available applications or deployments",
      "offset": 521.519,
      "duration": 4.281
    },
    {
      "lang": "en",
      "text": "that need to scale",
      "offset": 524,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "quickly. Now, let's compare",
      "offset": 525.8,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "virtualization and",
      "offset": 527.92,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "containerization. First, let's review",
      "offset": 530.36,
      "duration": 5.8
    },
    {
      "lang": "en",
      "text": "both terms. Virtualization is the",
      "offset": 532.8,
      "duration": 5.76
    },
    {
      "lang": "en",
      "text": "process of creating a virtual version of",
      "offset": 536.16,
      "duration": 5
    },
    {
      "lang": "en",
      "text": "a computing resource. Full",
      "offset": 538.56,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "virtualization creates a virtual",
      "offset": 541.16,
      "duration": 4.76
    },
    {
      "lang": "en",
      "text": "machine, a simulated computer system",
      "offset": 543.12,
      "duration": 5.88
    },
    {
      "lang": "en",
      "text": "inside another computer.",
      "offset": 545.92,
      "duration": 5.84
    },
    {
      "lang": "en",
      "text": "Containerization is virtualization at",
      "offset": 549,
      "duration": 6.12
    },
    {
      "lang": "en",
      "text": "the OS level. It packages an application",
      "offset": 551.76,
      "duration": 6.16
    },
    {
      "lang": "en",
      "text": "and its necessary dependencies into a",
      "offset": 555.12,
      "duration": 5.6
    },
    {
      "lang": "en",
      "text": "container, an isolated environment with",
      "offset": 557.92,
      "duration": 5.32
    },
    {
      "lang": "en",
      "text": "everything needed to run the",
      "offset": 560.72,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "application. There are several software",
      "offset": 563.24,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "tools available for both",
      "offset": 565.44,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "technologies. One of the most popular",
      "offset": 567.64,
      "duration": 5.16
    },
    {
      "lang": "en",
      "text": "tools for building, distributing, and",
      "offset": 569.92,
      "duration": 5.4
    },
    {
      "lang": "en",
      "text": "running containers is the Docker",
      "offset": 572.8,
      "duration": 5.599
    },
    {
      "lang": "en",
      "text": "platform. for orchestrating containers",
      "offset": 575.32,
      "duration": 5.639
    },
    {
      "lang": "en",
      "text": "that is automatically managing and",
      "offset": 578.399,
      "duration": 4.801
    },
    {
      "lang": "en",
      "text": "coordinating multiple containers.",
      "offset": 580.959,
      "duration": 5.281
    },
    {
      "lang": "en",
      "text": "Kubernetes is a common choice. We will",
      "offset": 583.2,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "talk more about container orchestration",
      "offset": 586.24,
      "duration": 4.52
    },
    {
      "lang": "en",
      "text": "in the next chapter. So stay",
      "offset": 588.24,
      "duration": 6
    },
    {
      "lang": "en",
      "text": "tuned. Virtualization software such as",
      "offset": 590.76,
      "duration": 7.639
    },
    {
      "lang": "en",
      "text": "Oracle VM virtual box or VMware helps",
      "offset": 594.24,
      "duration": 6.279
    },
    {
      "lang": "en",
      "text": "create and manage virtual",
      "offset": 598.399,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "machines. Let's dive into use cases of",
      "offset": 600.519,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "full",
      "offset": 603.519,
      "duration": 4.161
    },
    {
      "lang": "en",
      "text": "virtualization. Full virtualization is",
      "offset": 604.839,
      "duration": 5
    },
    {
      "lang": "en",
      "text": "often used to make better use of",
      "offset": 607.68,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "existing servers by running multiple",
      "offset": 609.839,
      "duration": 5.401
    },
    {
      "lang": "en",
      "text": "virtual machines on a single physical",
      "offset": 612.32,
      "duration": 6.24
    },
    {
      "lang": "en",
      "text": "server. Organizations have a variety of",
      "offset": 615.24,
      "duration": 6.32
    },
    {
      "lang": "en",
      "text": "reasons for keeping legacy applications",
      "offset": 618.56,
      "duration": 6.16
    },
    {
      "lang": "en",
      "text": "alive. With virtualization, legacy",
      "offset": 621.56,
      "duration": 5.959
    },
    {
      "lang": "en",
      "text": "hardware and software can be emulated by",
      "offset": 624.72,
      "duration": 5.359
    },
    {
      "lang": "en",
      "text": "virtual machines even when running on",
      "offset": 627.519,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "modern infrastructure.",
      "offset": 630.079,
      "duration": 5.081
    },
    {
      "lang": "en",
      "text": "Let's take a look at some use cases for",
      "offset": 632.399,
      "duration": 6.041
    },
    {
      "lang": "en",
      "text": "containerization OS level",
      "offset": 635.16,
      "duration": 5.799
    },
    {
      "lang": "en",
      "text": "virtualization. Containers provide a way",
      "offset": 638.44,
      "duration": 4.92
    },
    {
      "lang": "en",
      "text": "to isolate an application from its",
      "offset": 640.959,
      "duration": 4.641
    },
    {
      "lang": "en",
      "text": "environment by packaging the application",
      "offset": 643.36,
      "duration": 3.32
    },
    {
      "lang": "en",
      "text": "in a",
      "offset": 645.6,
      "duration": 3.679
    },
    {
      "lang": "en",
      "text": "container. In addition to packaging an",
      "offset": 646.68,
      "duration": 5
    },
    {
      "lang": "en",
      "text": "application, an organization may be",
      "offset": 649.279,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "interested in packaging each service or",
      "offset": 651.68,
      "duration": 5.279
    },
    {
      "lang": "en",
      "text": "component of an application into its own",
      "offset": 654.399,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "container.",
      "offset": 656.959,
      "duration": 4.081
    },
    {
      "lang": "en",
      "text": "Structuring an application as a",
      "offset": 658.959,
      "duration": 4.761
    },
    {
      "lang": "en",
      "text": "collection of services is known as a",
      "offset": 661.04,
      "duration": 4.359
    },
    {
      "lang": "en",
      "text": "microservices",
      "offset": 663.72,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "architecture. The benefits of",
      "offset": 665.399,
      "duration": 5.081
    },
    {
      "lang": "en",
      "text": "microservices include the ability to use",
      "offset": 667.72,
      "duration": 4.76
    },
    {
      "lang": "en",
      "text": "different technology stacks for each",
      "offset": 670.48,
      "duration": 5.56
    },
    {
      "lang": "en",
      "text": "service and to scale services",
      "offset": 672.48,
      "duration": 6
    },
    {
      "lang": "en",
      "text": "independently. As we briefly mentioned",
      "offset": 676.04,
      "duration": 5.4
    },
    {
      "lang": "en",
      "text": "earlier, container orchestration is the",
      "offset": 678.48,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "technology for managing and coordinating",
      "offset": 681.44,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "the deployment, scaling, and management",
      "offset": 683.92,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "of multiple containers.",
      "offset": 686.16,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "Orchestrating containers is similar to",
      "offset": 688.8,
      "duration": 5.279
    },
    {
      "lang": "en",
      "text": "conducting an orchestra. We direct",
      "offset": 691.6,
      "duration": 5.359
    },
    {
      "lang": "en",
      "text": "containers to perform different tasks",
      "offset": 694.079,
      "duration": 5.041
    },
    {
      "lang": "en",
      "text": "just as we direct musicians to play",
      "offset": 696.959,
      "duration": 3.801
    },
    {
      "lang": "en",
      "text": "different",
      "offset": 699.12,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "instruments. This table provides an",
      "offset": 700.76,
      "duration": 4.759
    },
    {
      "lang": "en",
      "text": "overview of where containers or virtual",
      "offset": 703.12,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "machines outperform physical machines.",
      "offset": 705.519,
      "duration": 6.121
    },
    {
      "lang": "en",
      "text": "Let's take a closer look at some of the",
      "offset": 708.56,
      "duration": 5.76
    },
    {
      "lang": "en",
      "text": "advantages. Because virtual machines",
      "offset": 711.64,
      "duration": 5.56
    },
    {
      "lang": "en",
      "text": "emulate the entire hardware, a VM",
      "offset": 714.32,
      "duration": 5.199
    },
    {
      "lang": "en",
      "text": "provides stronger and more secure",
      "offset": 717.2,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "isolation than a container that shares",
      "offset": 719.519,
      "duration": 5.161
    },
    {
      "lang": "en",
      "text": "the host OS kernel with other",
      "offset": 722,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "containers. In the event of an attack,",
      "offset": 724.68,
      "duration": 5.399
    },
    {
      "lang": "en",
      "text": "access to the host OS kernel results in",
      "offset": 727.36,
      "duration": 6.159
    },
    {
      "lang": "en",
      "text": "access to all containers on that host.",
      "offset": 730.079,
      "duration": 5.361
    },
    {
      "lang": "en",
      "text": "Because containers share the same",
      "offset": 733.519,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "operating system and therefore take up",
      "offset": 735.44,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "less space than virtual machines,",
      "offset": 737.839,
      "duration": 5
    },
    {
      "lang": "en",
      "text": "containers can result in lower overhead",
      "offset": 740.16,
      "duration": 5.679
    },
    {
      "lang": "en",
      "text": "costs. Because of their lightweight,",
      "offset": 742.839,
      "duration": 4.841
    },
    {
      "lang": "en",
      "text": "containers are more portable and",
      "offset": 745.839,
      "duration": 3.641
    },
    {
      "lang": "en",
      "text": "scalable than virtual",
      "offset": 747.68,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "machines. On the other hand, virtual",
      "offset": 749.48,
      "duration": 5.24
    },
    {
      "lang": "en",
      "text": "machines provide the flexibility to run",
      "offset": 752.24,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "multiple operating systems on the same",
      "offset": 754.72,
      "duration": 5.359
    },
    {
      "lang": "en",
      "text": "host machine and even support legacy",
      "offset": 757.12,
      "duration": 6.32
    },
    {
      "lang": "en",
      "text": "applications on modern hardware. As you",
      "offset": 760.079,
      "duration": 6.721
    },
    {
      "lang": "en",
      "text": "can see, each has its own advantages. So",
      "offset": 763.44,
      "duration": 5.28
    },
    {
      "lang": "en",
      "text": "depending on the use case, we need to",
      "offset": 766.8,
      "duration": 3.64
    },
    {
      "lang": "en",
      "text": "choose the appropriate",
      "offset": 768.72,
      "duration": 4.799
    },
    {
      "lang": "en",
      "text": "approach. Let's continue with chapter 2",
      "offset": 770.44,
      "duration": 5.68
    },
    {
      "lang": "en",
      "text": "and start with containerization with",
      "offset": 773.519,
      "duration": 6.32
    },
    {
      "lang": "en",
      "text": "Docker. To recap, containers provide an",
      "offset": 776.12,
      "duration": 6.2
    },
    {
      "lang": "en",
      "text": "isolated environment in which to run an",
      "offset": 779.839,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "application.",
      "offset": 782.32,
      "duration": 3.519
    },
    {
      "lang": "en",
      "text": "They contain everything needed for the",
      "offset": 783.839,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "application to run smoothly, such as",
      "offset": 785.839,
      "duration": 5.641
    },
    {
      "lang": "en",
      "text": "source code, dependencies, and",
      "offset": 788.079,
      "duration": 5.841
    },
    {
      "lang": "en",
      "text": "configurations. Docker is the go-to",
      "offset": 791.48,
      "duration": 5.08
    },
    {
      "lang": "en",
      "text": "choice for containerization and is open",
      "offset": 793.92,
      "duration": 5.039
    },
    {
      "lang": "en",
      "text": "source, meaning its code is freely",
      "offset": 796.56,
      "duration": 5.88
    },
    {
      "lang": "en",
      "text": "available for anyone to use, modify, and",
      "offset": 798.959,
      "duration": 6.481
    },
    {
      "lang": "en",
      "text": "distribute. Docker has a large user base",
      "offset": 802.44,
      "duration": 5.32
    },
    {
      "lang": "en",
      "text": "because it has revolutionized and",
      "offset": 805.44,
      "duration": 4.519
    },
    {
      "lang": "en",
      "text": "standardized the way we use",
      "offset": 807.76,
      "duration": 5.28
    },
    {
      "lang": "en",
      "text": "containers. According to Stack Overflow,",
      "offset": 809.959,
      "duration": 5.32
    },
    {
      "lang": "en",
      "text": "Docker is one of the most used and",
      "offset": 813.04,
      "duration": 4.2
    },
    {
      "lang": "en",
      "text": "popular tools out",
      "offset": 815.279,
      "duration": 4.521
    },
    {
      "lang": "en",
      "text": "there. Managing the life cycle of",
      "offset": 817.24,
      "duration": 4.599
    },
    {
      "lang": "en",
      "text": "containers. Docker is a software",
      "offset": 819.8,
      "duration": 4.039
    },
    {
      "lang": "en",
      "text": "platform that provides tools for",
      "offset": 821.839,
      "duration": 4.321
    },
    {
      "lang": "en",
      "text": "building, distributing, and running",
      "offset": 823.839,
      "duration": 5.24
    },
    {
      "lang": "en",
      "text": "applications using",
      "offset": 826.16,
      "duration": 5.679
    },
    {
      "lang": "en",
      "text": "containers. Here's a brief overview of",
      "offset": 829.079,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "important components of Docker's",
      "offset": 831.839,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "architecture. Let's go through each of",
      "offset": 834.519,
      "duration": 5.481
    },
    {
      "lang": "en",
      "text": "them one by one. To get started with",
      "offset": 836.639,
      "duration": 5.961
    },
    {
      "lang": "en",
      "text": "Docker, you'll want to install Docker",
      "offset": 840,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "Desktop. It's a desktop application",
      "offset": 842.6,
      "duration": 6.679
    },
    {
      "lang": "en",
      "text": "available for Mac, Linux, and Windows.",
      "offset": 845.36,
      "duration": 6.159
    },
    {
      "lang": "en",
      "text": "Docker Desktop provides a simple",
      "offset": 849.279,
      "duration": 5.56
    },
    {
      "lang": "en",
      "text": "graphical user interface, also called a",
      "offset": 851.519,
      "duration": 6.081
    },
    {
      "lang": "en",
      "text": "GUI, for managing your containers,",
      "offset": 854.839,
      "duration": 5.56
    },
    {
      "lang": "en",
      "text": "applications, and images. It also",
      "offset": 857.6,
      "duration": 4.359
    },
    {
      "lang": "en",
      "text": "includes the Docker",
      "offset": 860.399,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "engine. The Docker engine acts as a",
      "offset": 861.959,
      "duration": 5.481
    },
    {
      "lang": "en",
      "text": "client server application.",
      "offset": 864.959,
      "duration": 5.041
    },
    {
      "lang": "en",
      "text": "Users can trigger Docker actions through",
      "offset": 867.44,
      "duration": 5.519
    },
    {
      "lang": "en",
      "text": "the Docker client. The most common way",
      "offset": 870,
      "duration": 5.32
    },
    {
      "lang": "en",
      "text": "to do this is through the command line",
      "offset": 872.959,
      "duration": 4.921
    },
    {
      "lang": "en",
      "text": "interface, also called the",
      "offset": 875.32,
      "duration": 6.12
    },
    {
      "lang": "en",
      "text": "CLI. The CLI is the interface where we",
      "offset": 877.88,
      "duration": 6.48
    },
    {
      "lang": "en",
      "text": "enter text commands for the computer to",
      "offset": 881.44,
      "duration": 5.6
    },
    {
      "lang": "en",
      "text": "process. Certain commands can also be",
      "offset": 884.36,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "invoked through Docker",
      "offset": 887.04,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "Desktop. Client requests are received by",
      "offset": 889,
      "duration": 5.399
    },
    {
      "lang": "en",
      "text": "the Docker demon.",
      "offset": 892.16,
      "duration": 4.799
    },
    {
      "lang": "en",
      "text": "The Docker demon is the core service",
      "offset": 894.399,
      "duration": 5.201
    },
    {
      "lang": "en",
      "text": "responsible for building, running, and",
      "offset": 896.959,
      "duration": 5.521
    },
    {
      "lang": "en",
      "text": "managing Docker objects. It needs to be",
      "offset": 899.6,
      "duration": 5.56
    },
    {
      "lang": "en",
      "text": "running whenever you're using",
      "offset": 902.48,
      "duration": 5.24
    },
    {
      "lang": "en",
      "text": "Docker. There are two main Docker",
      "offset": 905.16,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "objects, images and",
      "offset": 907.72,
      "duration": 5.96
    },
    {
      "lang": "en",
      "text": "containers. To build an image, you start",
      "offset": 910.68,
      "duration": 5.68
    },
    {
      "lang": "en",
      "text": "by writing a text file called a Docker",
      "offset": 913.68,
      "duration": 6.08
    },
    {
      "lang": "en",
      "text": "file. Like a recipe, it contains a",
      "offset": 916.36,
      "duration": 5.719
    },
    {
      "lang": "en",
      "text": "series of instructions for building a",
      "offset": 919.76,
      "duration": 3.759
    },
    {
      "lang": "en",
      "text": "container.",
      "offset": 922.079,
      "duration": 3.681
    },
    {
      "lang": "en",
      "text": "You use the Docker file to build the",
      "offset": 923.519,
      "duration": 4.961
    },
    {
      "lang": "en",
      "text": "blueprint for your container. This",
      "offset": 925.76,
      "duration": 5.079
    },
    {
      "lang": "en",
      "text": "blueprint is called a Docker",
      "offset": 928.48,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "image. Once you have a Docker image, you",
      "offset": 930.839,
      "duration": 5.961
    },
    {
      "lang": "en",
      "text": "can use it to create a container. To",
      "offset": 934,
      "duration": 5.32
    },
    {
      "lang": "en",
      "text": "make this clearer, here is an",
      "offset": 936.8,
      "duration": 5.32
    },
    {
      "lang": "en",
      "text": "analogy. Imagine a company that builds",
      "offset": 939.32,
      "duration": 5.56
    },
    {
      "lang": "en",
      "text": "prefabricated houses, meaning every",
      "offset": 942.12,
      "duration": 5.959
    },
    {
      "lang": "en",
      "text": "house is the same. Their Docker files",
      "offset": 944.88,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "will be the blueprints for different",
      "offset": 948.079,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "houses. Their Docker images will be the",
      "offset": 950,
      "duration": 5.519
    },
    {
      "lang": "en",
      "text": "different house models that a future",
      "offset": 953.519,
      "duration": 4.721
    },
    {
      "lang": "en",
      "text": "homeowner can choose from. And their",
      "offset": 955.519,
      "duration": 5.361
    },
    {
      "lang": "en",
      "text": "Docker container will be a constructed",
      "offset": 958.24,
      "duration": 5.76
    },
    {
      "lang": "en",
      "text": "building based on a house model. Because",
      "offset": 960.88,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "this company builds many of the same",
      "offset": 964,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "houses, the same house models, the",
      "offset": 965.92,
      "duration": 6.08
    },
    {
      "lang": "en",
      "text": "Docker images are used multiple times to",
      "offset": 968.88,
      "duration": 5.92
    },
    {
      "lang": "en",
      "text": "create multiple houses, multiple Docker",
      "offset": 972,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "containers.",
      "offset": 974.8,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "Finally, Docker registries are",
      "offset": 976.8,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "centralized locations for storing and",
      "offset": 979.36,
      "duration": 5.76
    },
    {
      "lang": "en",
      "text": "managing container images. For example,",
      "offset": 982,
      "duration": 6.16
    },
    {
      "lang": "en",
      "text": "Docker Hub is a popular public registry",
      "offset": 985.12,
      "duration": 5
    },
    {
      "lang": "en",
      "text": "provided by",
      "offset": 988.16,
      "duration": 4.479
    },
    {
      "lang": "en",
      "text": "Docker. Now that we're familiar with",
      "offset": 990.12,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "Docker and managing individual",
      "offset": 992.639,
      "duration": 4.241
    },
    {
      "lang": "en",
      "text": "containers, what if we're dealing with",
      "offset": 994.68,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "applications that require multiple",
      "offset": 996.88,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "containers? This is where container",
      "offset": 999.16,
      "duration": 4.479
    },
    {
      "lang": "en",
      "text": "orchestration comes in.",
      "offset": 1001.279,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "Orchestration is the automated",
      "offset": 1003.639,
      "duration": 4.681
    },
    {
      "lang": "en",
      "text": "management and coordination of multiple",
      "offset": 1005.759,
      "duration": 5.32
    },
    {
      "lang": "en",
      "text": "components or services such as",
      "offset": 1008.32,
      "duration": 4.959
    },
    {
      "lang": "en",
      "text": "containers. The tool used for",
      "offset": 1011.079,
      "duration": 4.481
    },
    {
      "lang": "en",
      "text": "orchestration is called an",
      "offset": 1013.279,
      "duration": 4.201
    },
    {
      "lang": "en",
      "text": "orchestrator. And container",
      "offset": 1015.56,
      "duration": 4.68
    },
    {
      "lang": "en",
      "text": "orchestration is the orchestration of",
      "offset": 1017.48,
      "duration": 4.599
    },
    {
      "lang": "en",
      "text": "containers.",
      "offset": 1020.24,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "To use an analogy, container",
      "offset": 1022.079,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "orchestration is like having a conductor",
      "offset": 1024.4,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "to keep an orchestra in harmony, except",
      "offset": 1026.799,
      "duration": 6.12
    },
    {
      "lang": "en",
      "text": "that the orchestra is made up of",
      "offset": 1029.6,
      "duration": 5.839
    },
    {
      "lang": "en",
      "text": "containers. Container orchestration",
      "offset": 1032.919,
      "duration": 4.601
    },
    {
      "lang": "en",
      "text": "simplifies the management of large",
      "offset": 1035.439,
      "duration": 5.281
    },
    {
      "lang": "en",
      "text": "numbers of containers. It ensures that",
      "offset": 1037.52,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "multiple containers work together",
      "offset": 1040.72,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "effectively to do what they are supposed",
      "offset": 1042.72,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "to do and efficiently with the least",
      "offset": 1044.64,
      "duration": 5.919
    },
    {
      "lang": "en",
      "text": "amount of resources. Container",
      "offset": 1047.36,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "orchestration uses declarative",
      "offset": 1050.559,
      "duration": 4.721
    },
    {
      "lang": "en",
      "text": "programming, a style in which we define",
      "offset": 1052.72,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "the desired output rather than",
      "offset": 1055.28,
      "duration": 4.44
    },
    {
      "lang": "en",
      "text": "describing the steps to achieve",
      "offset": 1057.6,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "it. Developers write a configuration",
      "offset": 1059.72,
      "duration": 5.72
    },
    {
      "lang": "en",
      "text": "file that specifies details such as",
      "offset": 1062.72,
      "duration": 5.6
    },
    {
      "lang": "en",
      "text": "where to locate container images, how to",
      "offset": 1065.44,
      "duration": 4.479
    },
    {
      "lang": "en",
      "text": "establish communication between",
      "offset": 1068.32,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "containers, and how to allocate",
      "offset": 1069.919,
      "duration": 4.081
    },
    {
      "lang": "en",
      "text": "container storage.",
      "offset": 1072,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "The container orchestrator uses this",
      "offset": 1074,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "config file to automatically achieve the",
      "offset": 1076.4,
      "duration": 3.8
    },
    {
      "lang": "en",
      "text": "desired",
      "offset": 1078.88,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "setup. So why use container",
      "offset": 1080.2,
      "duration": 4.68
    },
    {
      "lang": "en",
      "text": "orchestration instead of manually",
      "offset": 1082.72,
      "duration": 3.64
    },
    {
      "lang": "en",
      "text": "managing",
      "offset": 1084.88,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "containers? While manual management",
      "offset": 1086.36,
      "duration": 5.48
    },
    {
      "lang": "en",
      "text": "offers full control and customization",
      "offset": 1088.96,
      "duration": 5.079
    },
    {
      "lang": "en",
      "text": "and may be a better choice for small",
      "offset": 1091.84,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "applications, container orchestration",
      "offset": 1094.039,
      "duration": 5.681
    },
    {
      "lang": "en",
      "text": "offers many advantages. Container",
      "offset": 1096.24,
      "duration": 6.08
    },
    {
      "lang": "en",
      "text": "orchestration makes it easy to scale",
      "offset": 1099.72,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "containers on",
      "offset": 1102.32,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "demand. Imagine you've built a web",
      "offset": 1103.72,
      "duration": 4.76
    },
    {
      "lang": "en",
      "text": "application and suddenly the number of",
      "offset": 1106,
      "duration": 3.96
    },
    {
      "lang": "en",
      "text": "visitors",
      "offset": 1108.48,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "increases. You need to quickly scale the",
      "offset": 1109.96,
      "duration": 4.599
    },
    {
      "lang": "en",
      "text": "application to handle the increased",
      "offset": 1112.48,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "traffic.",
      "offset": 1114.559,
      "duration": 4.321
    },
    {
      "lang": "en",
      "text": "This includes both horizontal scaling",
      "offset": 1116.4,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "where containers are added or removed",
      "offset": 1118.88,
      "duration": 5.08
    },
    {
      "lang": "en",
      "text": "and vertical scaling where computing",
      "offset": 1121.44,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "resources such as memory can be",
      "offset": 1123.96,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "dynamically adjusted for specific",
      "offset": 1126.4,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "containers. This flexibility ensures",
      "offset": 1128.84,
      "duration": 5
    },
    {
      "lang": "en",
      "text": "that applications can seamlessly handle",
      "offset": 1131.44,
      "duration": 6.119
    },
    {
      "lang": "en",
      "text": "varying levels of traffic or resource",
      "offset": 1133.84,
      "duration": 6.16
    },
    {
      "lang": "en",
      "text": "requirements. Another key benefit of",
      "offset": 1137.559,
      "duration": 5.641
    },
    {
      "lang": "en",
      "text": "container orchestration is automation.",
      "offset": 1140,
      "duration": 5.919
    },
    {
      "lang": "en",
      "text": "By automating tasks like resource",
      "offset": 1143.2,
      "duration": 5.359
    },
    {
      "lang": "en",
      "text": "allocation, developers can save valuable",
      "offset": 1145.919,
      "duration": 4.521
    },
    {
      "lang": "en",
      "text": "time and improve",
      "offset": 1148.559,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "productivity. This allows teams to focus",
      "offset": 1150.44,
      "duration": 5.08
    },
    {
      "lang": "en",
      "text": "on more strategic initiatives instead of",
      "offset": 1153.039,
      "duration": 6.241
    },
    {
      "lang": "en",
      "text": "repetitive manual tasks. In addition, by",
      "offset": 1155.52,
      "duration": 6.159
    },
    {
      "lang": "en",
      "text": "dynamically allocating resources based",
      "offset": 1159.28,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "on application needs, organizations can",
      "offset": 1161.679,
      "duration": 6.561
    },
    {
      "lang": "en",
      "text": "reduce unnecessary computing costs.",
      "offset": 1164.64,
      "duration": 5.84
    },
    {
      "lang": "en",
      "text": "Finally, container orchestration",
      "offset": 1168.24,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "improves application performance by",
      "offset": 1170.48,
      "duration": 5.48
    },
    {
      "lang": "en",
      "text": "automating scalability and",
      "offset": 1172.96,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "availability. In the event of problems",
      "offset": 1175.96,
      "duration": 5.079
    },
    {
      "lang": "en",
      "text": "or failures, orchestrators can",
      "offset": 1178.4,
      "duration": 4.76
    },
    {
      "lang": "en",
      "text": "automatically restart or replace",
      "offset": 1181.039,
      "duration": 5.201
    },
    {
      "lang": "en",
      "text": "containers, minimizing service downtime,",
      "offset": 1183.16,
      "duration": 5.24
    },
    {
      "lang": "en",
      "text": "and ensuring uninterrupted service",
      "offset": 1186.24,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "delivery to users.",
      "offset": 1188.4,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "However, it's important to note that",
      "offset": 1190.72,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "implementing container orchestration",
      "offset": 1193.28,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "like most technologies comes with its",
      "offset": 1195.76,
      "duration": 3.88
    },
    {
      "lang": "en",
      "text": "own set of",
      "offset": 1198.48,
      "duration": 3.199
    },
    {
      "lang": "en",
      "text": "challenges. One of the primary",
      "offset": 1199.64,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "challenges is the complexity of the",
      "offset": 1201.679,
      "duration": 5.601
    },
    {
      "lang": "en",
      "text": "technology. However, as teams gain",
      "offset": 1204.44,
      "duration": 5.4
    },
    {
      "lang": "en",
      "text": "experience and expertise, they can",
      "offset": 1207.28,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "effectively overcome these challenges",
      "offset": 1209.84,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "and gain the many advantages of",
      "offset": 1212,
      "duration": 4.559
    },
    {
      "lang": "en",
      "text": "container orchestration.",
      "offset": 1214,
      "duration": 5.64
    },
    {
      "lang": "en",
      "text": "So where is container orchestration",
      "offset": 1216.559,
      "duration": 5.681
    },
    {
      "lang": "en",
      "text": "useful? First and foremost, it's",
      "offset": 1219.64,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "valuable in scenarios like microservices",
      "offset": 1222.24,
      "duration": 5.28
    },
    {
      "lang": "en",
      "text": "architecture where large applications",
      "offset": 1225.08,
      "duration": 4.92
    },
    {
      "lang": "en",
      "text": "are broken down into smaller, more",
      "offset": 1227.52,
      "duration": 5.039
    },
    {
      "lang": "en",
      "text": "manageable services, each running in its",
      "offset": 1230,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "own container.",
      "offset": 1232.559,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "It's also critical for handling",
      "offset": 1234.48,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "applications with changing requirements,",
      "offset": 1236.559,
      "duration": 5.201
    },
    {
      "lang": "en",
      "text": "ensuring that peak usage times don't",
      "offset": 1239.36,
      "duration": 4.799
    },
    {
      "lang": "en",
      "text": "result in downtime and automating",
      "offset": 1241.76,
      "duration": 5.039
    },
    {
      "lang": "en",
      "text": "pipelines across domains such as data",
      "offset": 1244.159,
      "duration": 4.721
    },
    {
      "lang": "en",
      "text": "engineering, machine learning or",
      "offset": 1246.799,
      "duration": 3.161
    },
    {
      "lang": "en",
      "text": "software",
      "offset": 1248.88,
      "duration": 3.52
    },
    {
      "lang": "en",
      "text": "development. Finally, there are several",
      "offset": 1249.96,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "tools available for container",
      "offset": 1252.4,
      "duration": 4.759
    },
    {
      "lang": "en",
      "text": "orchestration including Kubernetes,",
      "offset": 1254.2,
      "duration": 6.599
    },
    {
      "lang": "en",
      "text": "Nomad, Redhead Open Shift, and Docker",
      "offset": 1257.159,
      "duration": 7.241
    },
    {
      "lang": "en",
      "text": "Swarm Mode. Each tool has its strengths",
      "offset": 1260.799,
      "duration": 6.081
    },
    {
      "lang": "en",
      "text": "and is suited to different use cases.",
      "offset": 1264.4,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "So, it's essential to choose wisely",
      "offset": 1266.88,
      "duration": 4.76
    },
    {
      "lang": "en",
      "text": "based on specific",
      "offset": 1269.12,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "requirements. Previously, we touched",
      "offset": 1271.64,
      "duration": 5.56
    },
    {
      "lang": "en",
      "text": "upon Kubernetes. Now, let's get a little",
      "offset": 1274,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "more detailed about how container",
      "offset": 1277.2,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "orchestration can be applied and take a",
      "offset": 1279.36,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "close look at Kubernetes, the de facto",
      "offset": 1282.08,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "container orchestrator for many",
      "offset": 1284.88,
      "duration": 4.039
    },
    {
      "lang": "en",
      "text": "organizations.",
      "offset": 1286.64,
      "duration": 6.08
    },
    {
      "lang": "en",
      "text": "Kubernetes, often abbreviated as K8S",
      "offset": 1288.919,
      "duration": 7.161
    },
    {
      "lang": "en",
      "text": "with eight letters between K and S, is a",
      "offset": 1292.72,
      "duration": 5.92
    },
    {
      "lang": "en",
      "text": "software platform that simplifies and",
      "offset": 1296.08,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "automates the deployment, scaling, and",
      "offset": 1298.64,
      "duration": 4.84
    },
    {
      "lang": "en",
      "text": "management of containerized",
      "offset": 1301.28,
      "duration": 4.639
    },
    {
      "lang": "en",
      "text": "applications. Originally developed by",
      "offset": 1303.48,
      "duration": 6.04
    },
    {
      "lang": "en",
      "text": "Google and later open-sourced in 2014,",
      "offset": 1305.919,
      "duration": 6.161
    },
    {
      "lang": "en",
      "text": "it is now maintained by the CloudNative",
      "offset": 1309.52,
      "duration": 5.279
    },
    {
      "lang": "en",
      "text": "Computing Foundation. According to the",
      "offset": 1312.08,
      "duration": 5.92
    },
    {
      "lang": "en",
      "text": "foundation, most organizations nowadays",
      "offset": 1314.799,
      "duration": 6.281
    },
    {
      "lang": "en",
      "text": "use or evaluate using",
      "offset": 1318,
      "duration": 5.679
    },
    {
      "lang": "en",
      "text": "Kubernetes. Kubernetes groups the",
      "offset": 1321.08,
      "duration": 4.68
    },
    {
      "lang": "en",
      "text": "containers that make up an application",
      "offset": 1323.679,
      "duration": 5.401
    },
    {
      "lang": "en",
      "text": "into logical units. More on that",
      "offset": 1325.76,
      "duration": 6.36
    },
    {
      "lang": "en",
      "text": "soon. It's also important to note that",
      "offset": 1329.08,
      "duration": 5.68
    },
    {
      "lang": "en",
      "text": "Kubernetes operates as a distributed",
      "offset": 1332.12,
      "duration": 4.919
    },
    {
      "lang": "en",
      "text": "system, meaning that its various",
      "offset": 1334.76,
      "duration": 4.279
    },
    {
      "lang": "en",
      "text": "components are spread across different",
      "offset": 1337.039,
      "duration": 3.52
    },
    {
      "lang": "en",
      "text": "machines.",
      "offset": 1339.039,
      "duration": 3.961
    },
    {
      "lang": "en",
      "text": "These machines can be virtual or",
      "offset": 1340.559,
      "duration": 5.201
    },
    {
      "lang": "en",
      "text": "physical hosted either in the cloud or",
      "offset": 1343,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "on",
      "offset": 1345.76,
      "duration": 3.919
    },
    {
      "lang": "en",
      "text": "premise. Here's a quick overview of",
      "offset": 1347,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "important components of the Kubernetes",
      "offset": 1349.679,
      "duration": 4.961
    },
    {
      "lang": "en",
      "text": "architecture. Let's go through them one",
      "offset": 1352.36,
      "duration": 3.12
    },
    {
      "lang": "en",
      "text": "by",
      "offset": 1354.64,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "one. A pot is the smallest deployable",
      "offset": 1355.48,
      "duration": 6.52
    },
    {
      "lang": "en",
      "text": "unit in Kubernetes consisting of one or",
      "offset": 1359.039,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "more containers that share the same",
      "offset": 1362,
      "duration": 4.159
    },
    {
      "lang": "en",
      "text": "computing resources.",
      "offset": 1363.919,
      "duration": 4.961
    },
    {
      "lang": "en",
      "text": "Each pot serves as a unique environment",
      "offset": 1366.159,
      "duration": 4.76
    },
    {
      "lang": "en",
      "text": "in which applications",
      "offset": 1368.88,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "run. One or more pots are grouped into a",
      "offset": 1370.919,
      "duration": 6.601
    },
    {
      "lang": "en",
      "text": "node and each node serves as the host on",
      "offset": 1374.24,
      "duration": 5.679
    },
    {
      "lang": "en",
      "text": "which the pots run.",
      "offset": 1377.52,
      "duration": 4.639
    },
    {
      "lang": "en",
      "text": "Nodes are the smallest unit of computing",
      "offset": 1379.919,
      "duration": 5.041
    },
    {
      "lang": "en",
      "text": "hardware in Kubernetes, representing a",
      "offset": 1382.159,
      "duration": 5.281
    },
    {
      "lang": "en",
      "text": "pool of computing resources, whether",
      "offset": 1384.96,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "virtual or physical, hosted in the cloud",
      "offset": 1387.44,
      "duration": 4.04
    },
    {
      "lang": "en",
      "text": "or on",
      "offset": 1390.4,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "premise. Rather than being actual custom",
      "offset": 1391.48,
      "duration": 6.199
    },
    {
      "lang": "en",
      "text": "machines, nodes abstract machines, so",
      "offset": 1394.48,
      "duration": 5.6
    },
    {
      "lang": "en",
      "text": "any node can be easily replaced with",
      "offset": 1397.679,
      "duration": 4.641
    },
    {
      "lang": "en",
      "text": "another node and everything will work",
      "offset": 1400.08,
      "duration": 3.079
    },
    {
      "lang": "en",
      "text": "the",
      "offset": 1402.32,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "same. A specific pot does not always run",
      "offset": 1403.159,
      "duration": 6.121
    },
    {
      "lang": "en",
      "text": "on the same node. This is where the",
      "offset": 1406.72,
      "duration": 5.28
    },
    {
      "lang": "en",
      "text": "control plane comes in. The control",
      "offset": 1409.28,
      "duration": 6.16
    },
    {
      "lang": "en",
      "text": "plane manages nodes and pots and ensures",
      "offset": 1412,
      "duration": 6.32
    },
    {
      "lang": "en",
      "text": "efficient resource allocation by smartly",
      "offset": 1415.44,
      "duration": 6
    },
    {
      "lang": "en",
      "text": "assigning pots to available nodes. The",
      "offset": 1418.32,
      "duration": 5.68
    },
    {
      "lang": "en",
      "text": "control plane is also known as the brain",
      "offset": 1421.44,
      "duration": 3.96
    },
    {
      "lang": "en",
      "text": "of the",
      "offset": 1424,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "cluster. A Kubernetes cluster includes",
      "offset": 1425.4,
      "duration": 6.279
    },
    {
      "lang": "en",
      "text": "all previously mentioned components and",
      "offset": 1428.88,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "is a group of up to multiple thousands",
      "offset": 1431.679,
      "duration": 6.641
    },
    {
      "lang": "en",
      "text": "of nodes. In a cluster, the resources of",
      "offset": 1434.24,
      "duration": 6.88
    },
    {
      "lang": "en",
      "text": "individual nodes are pulled together and",
      "offset": 1438.32,
      "duration": 6
    },
    {
      "lang": "en",
      "text": "form a more powerful super machine. This",
      "offset": 1441.12,
      "duration": 5.48
    },
    {
      "lang": "en",
      "text": "super machine is the",
      "offset": 1444.32,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "cluster. One benefit of the Kubernetes",
      "offset": 1446.6,
      "duration": 5.64
    },
    {
      "lang": "en",
      "text": "architecture is the convenience of not",
      "offset": 1449.52,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "having to worry about which specific",
      "offset": 1452.24,
      "duration": 5.919
    },
    {
      "lang": "en",
      "text": "machine or node in Kubernetes is running",
      "offset": 1454.64,
      "duration": 6.8
    },
    {
      "lang": "en",
      "text": "a particular application. Kubernetes",
      "offset": 1458.159,
      "duration": 5
    },
    {
      "lang": "en",
      "text": "takes care of that for",
      "offset": 1461.44,
      "duration": 4.92
    },
    {
      "lang": "en",
      "text": "you. While Docker is the go-to",
      "offset": 1463.159,
      "duration": 5.361
    },
    {
      "lang": "en",
      "text": "containerization platform for",
      "offset": 1466.36,
      "duration": 5.64
    },
    {
      "lang": "en",
      "text": "developers, Kubernetes actually uses a",
      "offset": 1468.52,
      "duration": 5.8
    },
    {
      "lang": "en",
      "text": "slimmer container engine such as",
      "offset": 1472,
      "duration": 4.799
    },
    {
      "lang": "en",
      "text": "container to efficiently orchestrate",
      "offset": 1474.32,
      "duration": 4.359
    },
    {
      "lang": "en",
      "text": "large numbers of",
      "offset": 1476.799,
      "duration": 5.281
    },
    {
      "lang": "en",
      "text": "containers. Why is that? While Docker is",
      "offset": 1478.679,
      "duration": 5.801
    },
    {
      "lang": "en",
      "text": "optimized for developer experience and",
      "offset": 1482.08,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "ease of use, Kubernetes is optimized for",
      "offset": 1484.48,
      "duration": 5.76
    },
    {
      "lang": "en",
      "text": "efficiency and scalability.",
      "offset": 1487.6,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "So while Docker shines with its user",
      "offset": 1490.24,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "experience when dealing with one or a",
      "offset": 1492.32,
      "duration": 5.28
    },
    {
      "lang": "en",
      "text": "few containers, Kubernetus is optimized",
      "offset": 1494.72,
      "duration": 6.12
    },
    {
      "lang": "en",
      "text": "for speed when dealing with many",
      "offset": 1497.6,
      "duration": 5.92
    },
    {
      "lang": "en",
      "text": "containers. To finish the course, we",
      "offset": 1500.84,
      "duration": 5.4
    },
    {
      "lang": "en",
      "text": "will run our own Docker container.",
      "offset": 1503.52,
      "duration": 5.399
    },
    {
      "lang": "en",
      "text": "First, let's review some key Docker",
      "offset": 1506.24,
      "duration": 6.08
    },
    {
      "lang": "en",
      "text": "terms. The Docker file is a text file",
      "offset": 1508.919,
      "duration": 5.481
    },
    {
      "lang": "en",
      "text": "that defines the contents of a Docker",
      "offset": 1512.32,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "container. The Docker image is the",
      "offset": 1514.4,
      "duration": 5.6
    },
    {
      "lang": "en",
      "text": "blueprint for a Docker container. We use",
      "offset": 1517.44,
      "duration": 5
    },
    {
      "lang": "en",
      "text": "the Docker file to build the Docker",
      "offset": 1520,
      "duration": 5.679
    },
    {
      "lang": "en",
      "text": "image. The Docker container is an actual",
      "offset": 1522.44,
      "duration": 5.56
    },
    {
      "lang": "en",
      "text": "instance of a container based on the",
      "offset": 1525.679,
      "duration": 3.321
    },
    {
      "lang": "en",
      "text": "Docker",
      "offset": 1528,
      "duration": 4.159
    },
    {
      "lang": "en",
      "text": "image. To avoid confusion, let's",
      "offset": 1529,
      "duration": 5.559
    },
    {
      "lang": "en",
      "text": "distinguish between Docker instructions",
      "offset": 1532.159,
      "duration": 3.481
    },
    {
      "lang": "en",
      "text": "and",
      "offset": 1534.559,
      "duration": 3.921
    },
    {
      "lang": "en",
      "text": "commands. Docker instructions are the",
      "offset": 1535.64,
      "duration": 5.159
    },
    {
      "lang": "en",
      "text": "building blocks of a Docker file that",
      "offset": 1538.48,
      "duration": 5.72
    },
    {
      "lang": "en",
      "text": "detail how to build a Docker image. In",
      "offset": 1540.799,
      "duration": 6.48
    },
    {
      "lang": "en",
      "text": "contrast, Docker commands are executed",
      "offset": 1544.2,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "through the",
      "offset": 1547.279,
      "duration": 4.161
    },
    {
      "lang": "en",
      "text": "CLI. They are sent to the Docker demon",
      "offset": 1548.36,
      "duration": 5.199
    },
    {
      "lang": "en",
      "text": "to manage Docker",
      "offset": 1551.44,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "objects. Let's examine the format of a",
      "offset": 1553.559,
      "duration": 4.321
    },
    {
      "lang": "en",
      "text": "Docker",
      "offset": 1556.48,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "file. Each instruction in a Docker file",
      "offset": 1557.88,
      "duration": 6.36
    },
    {
      "lang": "en",
      "text": "can begin with a comment describing the",
      "offset": 1561.44,
      "duration": 5.32
    },
    {
      "lang": "en",
      "text": "details of the",
      "offset": 1564.24,
      "duration": 5.039
    },
    {
      "lang": "en",
      "text": "instruction followed by the instruction",
      "offset": 1566.76,
      "duration": 4.68
    },
    {
      "lang": "en",
      "text": "itself.",
      "offset": 1569.279,
      "duration": 5.121
    },
    {
      "lang": "en",
      "text": "The instruction starts with its command",
      "offset": 1571.44,
      "duration": 5.8
    },
    {
      "lang": "en",
      "text": "and is conventionally written in",
      "offset": 1574.4,
      "duration": 6
    },
    {
      "lang": "en",
      "text": "uppercase then follows the argument that",
      "offset": 1577.24,
      "duration": 6.08
    },
    {
      "lang": "en",
      "text": "is conventionally written in lower",
      "offset": 1580.4,
      "duration": 6.24
    },
    {
      "lang": "en",
      "text": "case. Instructions in a docker file are",
      "offset": 1583.32,
      "duration": 5.92
    },
    {
      "lang": "en",
      "text": "executed in the order in which they are",
      "offset": 1586.64,
      "duration": 5.6
    },
    {
      "lang": "en",
      "text": "written. A docker file can start with",
      "offset": 1589.24,
      "duration": 6.679
    },
    {
      "lang": "en",
      "text": "either metadata comments arguments that",
      "offset": 1592.24,
      "duration": 6.24
    },
    {
      "lang": "en",
      "text": "will be used later in the docker file or",
      "offset": 1595.919,
      "duration": 5.441
    },
    {
      "lang": "en",
      "text": "the from instruction.",
      "offset": 1598.48,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "Here is a quick overview of important",
      "offset": 1601.36,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "Docker instructions. Let's go through",
      "offset": 1603.84,
      "duration": 3.88
    },
    {
      "lang": "en",
      "text": "each",
      "offset": 1606.48,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "one. The from instruction refers to an",
      "offset": 1607.72,
      "duration": 5.64
    },
    {
      "lang": "en",
      "text": "existing image that we want to use for",
      "offset": 1611.2,
      "duration": 3.079
    },
    {
      "lang": "en",
      "text": "our",
      "offset": 1613.36,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "application. The argument defines the",
      "offset": 1614.279,
      "duration": 5.4
    },
    {
      "lang": "en",
      "text": "image to build on and serves as a",
      "offset": 1616.96,
      "duration": 3.64
    },
    {
      "lang": "en",
      "text": "starting",
      "offset": 1619.679,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "point. This image can be further",
      "offset": 1620.6,
      "duration": 5.24
    },
    {
      "lang": "en",
      "text": "customized with subsequent instructions",
      "offset": 1623.279,
      "duration": 4.961
    },
    {
      "lang": "en",
      "text": "in the Docker file.",
      "offset": 1625.84,
      "duration": 5.76
    },
    {
      "lang": "en",
      "text": "The copy instructions copies files or",
      "offset": 1628.24,
      "duration": 7.039
    },
    {
      "lang": "en",
      "text": "folders from a source first argument to",
      "offset": 1631.6,
      "duration": 7.48
    },
    {
      "lang": "en",
      "text": "a destination second argument within the",
      "offset": 1635.279,
      "duration": 6.64
    },
    {
      "lang": "en",
      "text": "container. This is useful for files that",
      "offset": 1639.08,
      "duration": 5.92
    },
    {
      "lang": "en",
      "text": "are needed for subsequent Docker",
      "offset": 1641.919,
      "duration": 6.401
    },
    {
      "lang": "en",
      "text": "instructions. A dot represents the",
      "offset": 1645,
      "duration": 5.96
    },
    {
      "lang": "en",
      "text": "current execution folder.",
      "offset": 1648.32,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "The example shown would copy the",
      "offset": 1650.96,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "contents of the folder where the Docker",
      "offset": 1653.36,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "file is being executed to the",
      "offset": 1655.44,
      "duration": 4.359
    },
    {
      "lang": "en",
      "text": "container's main",
      "offset": 1657.76,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "folder. The run instruction runs a",
      "offset": 1659.799,
      "duration": 6.801
    },
    {
      "lang": "en",
      "text": "command specified as argument within the",
      "offset": 1662.96,
      "duration": 6.56
    },
    {
      "lang": "en",
      "text": "container similar to how we would run a",
      "offset": 1666.6,
      "duration": 6.28
    },
    {
      "lang": "en",
      "text": "command in our computer CLI.",
      "offset": 1669.52,
      "duration": 6.159
    },
    {
      "lang": "en",
      "text": "The entry point instruction defines the",
      "offset": 1672.88,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "container's default behavior by",
      "offset": 1675.679,
      "duration": 5.641
    },
    {
      "lang": "en",
      "text": "specifying a command to run at container",
      "offset": 1678,
      "duration": 5.76
    },
    {
      "lang": "en",
      "text": "initiation. It defines the primary",
      "offset": 1681.32,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "purpose of a",
      "offset": 1683.76,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "container. Here's an example of a Docker",
      "offset": 1685.08,
      "duration": 5.76
    },
    {
      "lang": "en",
      "text": "file and how the Docker instructions are",
      "offset": 1688.159,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "assembled. It starts with a from",
      "offset": 1690.84,
      "duration": 4.839
    },
    {
      "lang": "en",
      "text": "instruction by defining an image on",
      "offset": 1693.279,
      "duration": 4.561
    },
    {
      "lang": "en",
      "text": "which to build on.",
      "offset": 1695.679,
      "duration": 4.961
    },
    {
      "lang": "en",
      "text": "It continues by copying some files into",
      "offset": 1697.84,
      "duration": 5.719
    },
    {
      "lang": "en",
      "text": "the container with a copy",
      "offset": 1700.64,
      "duration": 5.919
    },
    {
      "lang": "en",
      "text": "instruction. It uses the run instruction",
      "offset": 1703.559,
      "duration": 5.761
    },
    {
      "lang": "en",
      "text": "to run a command inside the",
      "offset": 1706.559,
      "duration": 5.761
    },
    {
      "lang": "en",
      "text": "container. And finally, the entry point",
      "offset": 1709.32,
      "duration": 5.479
    },
    {
      "lang": "en",
      "text": "instruction executes the primary purpose",
      "offset": 1712.32,
      "duration": 3.719
    },
    {
      "lang": "en",
      "text": "of the",
      "offset": 1714.799,
      "duration": 3.921
    },
    {
      "lang": "en",
      "text": "container. Finally, let's look at two",
      "offset": 1716.039,
      "duration": 5.081
    },
    {
      "lang": "en",
      "text": "essential Docker commands. Docker build",
      "offset": 1718.72,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "and docker run.",
      "offset": 1721.12,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "The docker build command builds a Docker",
      "offset": 1723.52,
      "duration": 6.32
    },
    {
      "lang": "en",
      "text": "image from a Docker file. The argument",
      "offset": 1726.24,
      "duration": 6.799
    },
    {
      "lang": "en",
      "text": "specifies the context. The context is",
      "offset": 1729.84,
      "duration": 5.199
    },
    {
      "lang": "en",
      "text": "the location where the Docker file must",
      "offset": 1733.039,
      "duration": 4.841
    },
    {
      "lang": "en",
      "text": "be when the command is run from the",
      "offset": 1735.039,
      "duration": 6.561
    },
    {
      "lang": "en",
      "text": "CLI. The Docker run command creates and",
      "offset": 1737.88,
      "duration": 6
    },
    {
      "lang": "en",
      "text": "runs a Docker container from a Docker",
      "offset": 1741.6,
      "duration": 6.04
    },
    {
      "lang": "en",
      "text": "image. The argument specifies this",
      "offset": 1743.88,
      "duration": 7.159
    },
    {
      "lang": "en",
      "text": "image. All Docker commands are executed",
      "offset": 1747.64,
      "duration": 5.48
    },
    {
      "lang": "en",
      "text": "through the CLI.",
      "offset": 1751.039,
      "duration": 4.161
    },
    {
      "lang": "en",
      "text": "Don't worry if you're not familiar with",
      "offset": 1753.12,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "the CLI. We'll provide you with the",
      "offset": 1755.2,
      "duration": 6.839
    },
    {
      "lang": "en",
      "text": "necessary commands for the interactive",
      "offset": 1758,
      "duration": 6.88
    },
    {
      "lang": "en",
      "text": "exercises. Congratulations, you have",
      "offset": 1762.039,
      "duration": 6.681
    },
    {
      "lang": "en",
      "text": "completed the course. In chapter 1, we",
      "offset": 1764.88,
      "duration": 5.76
    },
    {
      "lang": "en",
      "text": "learned about the differences between",
      "offset": 1768.72,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "containers, virtual machines, and",
      "offset": 1770.64,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "physical machines.",
      "offset": 1773.12,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "In chapter 2, we delved into the",
      "offset": 1775.039,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "practical applications of containers and",
      "offset": 1777.6,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "their orchestration, focusing on Docker",
      "offset": 1779.919,
      "duration": 3.321
    },
    {
      "lang": "en",
      "text": "and",
      "offset": 1782.48,
      "duration": 2.799
    },
    {
      "lang": "en",
      "text": "Kubernetes. We learned about the",
      "offset": 1783.24,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "differences between",
      "offset": 1785.279,
      "duration": 3.841
    },
    {
      "lang": "en",
      "text": "virtualization, full virtualization",
      "offset": 1786.84,
      "duration": 5.28
    },
    {
      "lang": "en",
      "text": "resulting in a virtual machine and",
      "offset": 1789.12,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "containerization, OS level",
      "offset": 1792.12,
      "duration": 4.919
    },
    {
      "lang": "en",
      "text": "virtualization resulting in a container.",
      "offset": 1794,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "We also looked at containerization with",
      "offset": 1797.039,
      "duration": 4.801
    },
    {
      "lang": "en",
      "text": "Docker and discussed key components of",
      "offset": 1799.44,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "its architecture.",
      "offset": 1801.84,
      "duration": 4.719
    },
    {
      "lang": "en",
      "text": "We learned about container orchestration",
      "offset": 1804.08,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "and its application with Kubernetes",
      "offset": 1806.559,
      "duration": 5.801
    },
    {
      "lang": "en",
      "text": "looking at key components of its",
      "offset": 1809.12,
      "duration": 5.6
    },
    {
      "lang": "en",
      "text": "architecture. Finally, we learned",
      "offset": 1812.36,
      "duration": 4.6
    },
    {
      "lang": "en",
      "text": "important Docker instructions and the",
      "offset": 1814.72,
      "duration": 6.12
    },
    {
      "lang": "en",
      "text": "Docker build and run command. Hungry for",
      "offset": 1816.96,
      "duration": 7.439
    },
    {
      "lang": "en",
      "text": "more virtualization and containerization",
      "offset": 1820.84,
      "duration": 5.8
    },
    {
      "lang": "en",
      "text": "are important technologies used in the",
      "offset": 1824.399,
      "duration": 4.801
    },
    {
      "lang": "en",
      "text": "cloud. If you want to learn more about",
      "offset": 1826.64,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "cloud computing, take the non-coding",
      "offset": 1829.2,
      "duration": 4.44
    },
    {
      "lang": "en",
      "text": "course on cloud",
      "offset": 1831.76,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "computing. Finally, you interacted with",
      "offset": 1833.64,
      "duration": 6.6
    },
    {
      "lang": "en",
      "text": "the CLI. Want to get better at it? Take",
      "offset": 1836.48,
      "duration": 7.199
    },
    {
      "lang": "en",
      "text": "Data Cam's course, Introducing Shell.",
      "offset": 1840.24,
      "duration": 5.88
    },
    {
      "lang": "en",
      "text": "Want to learn more about Docker and",
      "offset": 1843.679,
      "duration": 5.841
    },
    {
      "lang": "en",
      "text": "Kubernetes? Great, we got you covered.",
      "offset": 1846.12,
      "duration": 5.64
    },
    {
      "lang": "en",
      "text": "Continue with Data Camp's interactive",
      "offset": 1849.52,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "courses that further introduce you to",
      "offset": 1851.76,
      "duration": 4.799
    },
    {
      "lang": "en",
      "text": "Docker and Kubernetes.",
      "offset": 1854.24,
      "duration": 6.08
    },
    {
      "lang": "en",
      "text": "I hope. Welcome. My name is Tim and I'm",
      "offset": 1856.559,
      "duration": 6.321
    },
    {
      "lang": "en",
      "text": "a software engineer. In this course,",
      "offset": 1860.32,
      "duration": 5.359
    },
    {
      "lang": "en",
      "text": "we'll give you hands-on experience",
      "offset": 1862.88,
      "duration": 5
    },
    {
      "lang": "en",
      "text": "managing, running, and creating",
      "offset": 1865.679,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "containers. Let's start by seeing how to",
      "offset": 1867.88,
      "duration": 5.88
    },
    {
      "lang": "en",
      "text": "use Docker to start, stop, and inspect",
      "offset": 1870.559,
      "duration": 4.84
    },
    {
      "lang": "en",
      "text": "the output of",
      "offset": 1873.76,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "containers. We'll be using the command",
      "offset": 1875.399,
      "duration": 4.76
    },
    {
      "lang": "en",
      "text": "line extensively, and some familiarity",
      "offset": 1877.44,
      "duration": 6.239
    },
    {
      "lang": "en",
      "text": "is needed. Commands like nano will be",
      "offset": 1880.159,
      "duration": 6.081
    },
    {
      "lang": "en",
      "text": "used with only a brief introduction.",
      "offset": 1883.679,
      "duration": 4.561
    },
    {
      "lang": "en",
      "text": "Therefore, please take the prerequisite",
      "offset": 1886.24,
      "duration": 3.919
    },
    {
      "lang": "en",
      "text": "course if you're not already familiar",
      "offset": 1888.24,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "with most shell commands. Here, the",
      "offset": 1890.159,
      "duration": 5.601
    },
    {
      "lang": "en",
      "text": "Docker command line interface or CLI",
      "offset": 1892.96,
      "duration": 4.559
    },
    {
      "lang": "en",
      "text": "allows to send instructions to the",
      "offset": 1895.76,
      "duration": 3.919
    },
    {
      "lang": "en",
      "text": "Docker demon which manages containers",
      "offset": 1897.519,
      "duration": 6.16
    },
    {
      "lang": "en",
      "text": "and images. The basic command is docker.",
      "offset": 1899.679,
      "duration": 6.561
    },
    {
      "lang": "en",
      "text": "To start a container, we need an image",
      "offset": 1903.679,
      "duration": 4.801
    },
    {
      "lang": "en",
      "text": "which acts as a blueprint defining what",
      "offset": 1906.24,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "will be available in the container. For",
      "offset": 1908.48,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "example, the Ubuntu image contains the",
      "offset": 1911.12,
      "duration": 5.039
    },
    {
      "lang": "en",
      "text": "full Ubuntu OS. When we start a",
      "offset": 1913.84,
      "duration": 4.319
    },
    {
      "lang": "en",
      "text": "container from this image, we get a",
      "offset": 1916.159,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "running instance of Ubuntu that you can",
      "offset": 1918.159,
      "duration": 4.441
    },
    {
      "lang": "en",
      "text": "interact with via a",
      "offset": 1920.399,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "shell. If we want to start a container",
      "offset": 1922.6,
      "duration": 4.76
    },
    {
      "lang": "en",
      "text": "from an image, we can use the docker run",
      "offset": 1925.039,
      "duration": 5.281
    },
    {
      "lang": "en",
      "text": "command followed by the image name. To",
      "offset": 1927.36,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "start a hello world image, we would use",
      "offset": 1930.32,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "docker run hello world. By default,",
      "offset": 1932.32,
      "duration": 5.599
    },
    {
      "lang": "en",
      "text": "docker starts a container and shows you",
      "offset": 1935.84,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "its output while it's running. When we",
      "offset": 1937.919,
      "duration": 4.561
    },
    {
      "lang": "en",
      "text": "run a hello world container, it prints",
      "offset": 1940.32,
      "duration": 3.839
    },
    {
      "lang": "en",
      "text": "an explanation of how the container",
      "offset": 1942.48,
      "duration": 4.799
    },
    {
      "lang": "en",
      "text": "works and then stops. When an image is",
      "offset": 1944.159,
      "duration": 5.601
    },
    {
      "lang": "en",
      "text": "created, the creator can choose what",
      "offset": 1947.279,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "happens when a container is started from",
      "offset": 1949.76,
      "duration": 4.639
    },
    {
      "lang": "en",
      "text": "the image. For example, the creators of",
      "offset": 1951.679,
      "duration": 5.281
    },
    {
      "lang": "en",
      "text": "the hello world image chose to print out",
      "offset": 1954.399,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "text and then make the container stop",
      "offset": 1956.96,
      "duration": 3.04
    },
    {
      "lang": "en",
      "text": "itself.",
      "offset": 1958.799,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "Another example is the Ubuntu image.",
      "offset": 1960,
      "duration": 4.799
    },
    {
      "lang": "en",
      "text": "When starting an Ubuntu container, it",
      "offset": 1962.559,
      "duration": 3.921
    },
    {
      "lang": "en",
      "text": "will start and then shut down",
      "offset": 1964.799,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "immediately without printing any output.",
      "offset": 1966.48,
      "duration": 5.679
    },
    {
      "lang": "en",
      "text": "Its creators decided it didn't make",
      "offset": 1969.679,
      "duration": 5.561
    },
    {
      "lang": "en",
      "text": "sense to output anything specific by",
      "offset": 1972.159,
      "duration": 6.321
    },
    {
      "lang": "en",
      "text": "default. Instead, the Ubuntu image is",
      "offset": 1975.24,
      "duration": 5.72
    },
    {
      "lang": "en",
      "text": "intended to be used with the -ashit",
      "offset": 1978.48,
      "duration": 5.24
    },
    {
      "lang": "en",
      "text": "flag. Using docker",
      "offset": 1980.96,
      "duration": 5.76
    },
    {
      "lang": "en",
      "text": "run-it followed by an image name, we can",
      "offset": 1983.72,
      "duration": 5.48
    },
    {
      "lang": "en",
      "text": "start a container and simultaneously get",
      "offset": 1986.72,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "an interactive shell in this container.",
      "offset": 1989.2,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "If we do this with the Ubuntu image, we",
      "offset": 1992.24,
      "duration": 4.039
    },
    {
      "lang": "en",
      "text": "get a new shell inside the new",
      "offset": 1994.32,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "container. The shell gives us access to",
      "offset": 1996.279,
      "duration": 5.64
    },
    {
      "lang": "en",
      "text": "a clean Ubuntu environment isolated from",
      "offset": 1999.12,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "our host machine because it runs inside",
      "offset": 2001.919,
      "duration": 5.201
    },
    {
      "lang": "en",
      "text": "the container. Once we want to exit a",
      "offset": 2004.24,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "container, we simply use the exit",
      "offset": 2007.12,
      "duration": 4.559
    },
    {
      "lang": "en",
      "text": "command which returns us to the host",
      "offset": 2009.2,
      "duration": 4.52
    },
    {
      "lang": "en",
      "text": "machine and then stops the",
      "offset": 2011.679,
      "duration": 4.801
    },
    {
      "lang": "en",
      "text": "container. We saw a container that just",
      "offset": 2013.72,
      "duration": 4.679
    },
    {
      "lang": "en",
      "text": "prints text and one that makes more",
      "offset": 2016.48,
      "duration": 4.319
    },
    {
      "lang": "en",
      "text": "sense to use interactively. A third type",
      "offset": 2018.399,
      "duration": 4.961
    },
    {
      "lang": "en",
      "text": "of container processes data or can be",
      "offset": 2020.799,
      "duration": 5.521
    },
    {
      "lang": "en",
      "text": "interacted with in some way externally.",
      "offset": 2023.36,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "For example, a container with a database",
      "offset": 2026.32,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "like Postgress.",
      "offset": 2028.88,
      "duration": 6.08
    },
    {
      "lang": "en",
      "text": "These are run using docker run-d for",
      "offset": 2031.84,
      "duration": 5.839
    },
    {
      "lang": "en",
      "text": "detached followed by the image name.",
      "offset": 2034.96,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "These containers run in the background",
      "offset": 2037.679,
      "duration": 4.521
    },
    {
      "lang": "en",
      "text": "without printing their output to our",
      "offset": 2039.6,
      "duration": 6
    },
    {
      "lang": "en",
      "text": "shell. The docker ps command allows us",
      "offset": 2042.2,
      "duration": 6.199
    },
    {
      "lang": "en",
      "text": "to see any running containers. The first",
      "offset": 2045.6,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "column contains the container ID,",
      "offset": 2048.399,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "uniquely identifying each container. The",
      "offset": 2050.8,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "docker stop command can be used to stop",
      "offset": 2053.599,
      "duration": 5.681
    },
    {
      "lang": "en",
      "text": "containers we no longer need. Here is a",
      "offset": 2056,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "summary of the new commands you can",
      "offset": 2059.28,
      "duration": 4.44
    },
    {
      "lang": "en",
      "text": "refer to when completing the",
      "offset": 2060.96,
      "duration": 5.119
    },
    {
      "lang": "en",
      "text": "exercises. Now that we know how to run",
      "offset": 2063.72,
      "duration": 4.119
    },
    {
      "lang": "en",
      "text": "containers in various ways,",
      "offset": 2066.079,
      "duration": 4.241
    },
    {
      "lang": "en",
      "text": "interactively or in the background, it",
      "offset": 2067.839,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "is time to learn some commands that will",
      "offset": 2070.32,
      "duration": 4.039
    },
    {
      "lang": "en",
      "text": "simplify our life when working with",
      "offset": 2072.159,
      "duration": 4.321
    },
    {
      "lang": "en",
      "text": "containers. When there are only a few",
      "offset": 2074.359,
      "duration": 4.441
    },
    {
      "lang": "en",
      "text": "containers, it's easy to find them in",
      "offset": 2076.48,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "the list that Docker PS returns.",
      "offset": 2078.8,
      "duration": 4.879
    },
    {
      "lang": "en",
      "text": "However, if you're working with lots of",
      "offset": 2081.28,
      "duration": 4.68
    },
    {
      "lang": "en",
      "text": "containers, it can quickly become",
      "offset": 2083.679,
      "duration": 5.92
    },
    {
      "lang": "en",
      "text": "challenging to identify the right one.",
      "offset": 2085.96,
      "duration": 5.8
    },
    {
      "lang": "en",
      "text": "To solve this, the docker run command",
      "offset": 2089.599,
      "duration": 4.601
    },
    {
      "lang": "en",
      "text": "has a name flag that allows us to name a",
      "offset": 2091.76,
      "duration": 5.359
    },
    {
      "lang": "en",
      "text": "container. The name then shows up in the",
      "offset": 2094.2,
      "duration": 6.76
    },
    {
      "lang": "en",
      "text": "last column of the docker ps output.",
      "offset": 2097.119,
      "duration": 6.24
    },
    {
      "lang": "en",
      "text": "Here we created a container from the",
      "offset": 2100.96,
      "duration": 7.48
    },
    {
      "lang": "en",
      "text": "Postgress image and called it db",
      "offset": 2103.359,
      "duration": 7.521
    },
    {
      "lang": "en",
      "text": "pipeline_v1. For any commands that",
      "offset": 2108.44,
      "duration": 5
    },
    {
      "lang": "en",
      "text": "require us to specify a container, we",
      "offset": 2110.88,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "can use either the container ID or the",
      "offset": 2113.44,
      "duration": 3.48
    },
    {
      "lang": "en",
      "text": "container",
      "offset": 2115.76,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "name. For example, in exactly the same",
      "offset": 2116.92,
      "duration": 5.08
    },
    {
      "lang": "en",
      "text": "way we could stop containers using their",
      "offset": 2119.92,
      "duration": 4.52
    },
    {
      "lang": "en",
      "text": "ID, we can use their name in Docker",
      "offset": 2122,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "stop. When using Docker PS with so many",
      "offset": 2124.44,
      "duration": 5.399
    },
    {
      "lang": "en",
      "text": "containers that even naming them doesn't",
      "offset": 2127.52,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "allow us to find them, we can use Docker",
      "offset": 2129.839,
      "duration": 5.681
    },
    {
      "lang": "en",
      "text": "PS with the F for filter flag to find a",
      "offset": 2132.4,
      "duration": 5.199
    },
    {
      "lang": "en",
      "text": "specific container.",
      "offset": 2135.52,
      "duration": 4.36
    },
    {
      "lang": "en",
      "text": "For example,",
      "offset": 2137.599,
      "duration": 5.76
    },
    {
      "lang": "en",
      "text": "dockerps-f followed by in quotes name",
      "offset": 2139.88,
      "duration": 6.6
    },
    {
      "lang": "en",
      "text": "equal sign",
      "offset": 2143.359,
      "duration": 3.121
    },
    {
      "lang": "en",
      "text": "db_pipeline_v1. This will show you only",
      "offset": 2147.48,
      "duration": 4.44
    },
    {
      "lang": "en",
      "text": "the details of containers with the name",
      "offset": 2149.839,
      "duration": 4.881
    },
    {
      "lang": "en",
      "text": "you specified in the filter. Now that we",
      "offset": 2151.92,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "know how to find our running containers,",
      "offset": 2154.72,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "it will also be useful to see their",
      "offset": 2156.96,
      "duration": 4.28
    },
    {
      "lang": "en",
      "text": "output. For example, to debug any",
      "offset": 2158.48,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "issues. To look at the output a",
      "offset": 2161.24,
      "duration": 4.359
    },
    {
      "lang": "en",
      "text": "container has generated, we can use the",
      "offset": 2163.52,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "Docker logs command followed by the",
      "offset": 2165.599,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "container ID. Most containers quickly",
      "offset": 2167.44,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "generate a lot of output. So you'll",
      "offset": 2170.079,
      "duration": 4.321
    },
    {
      "lang": "en",
      "text": "often have to scroll through the result",
      "offset": 2172.56,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "of Docker logs to find what you're",
      "offset": 2174.4,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "looking for. If instead you want to",
      "offset": 2176.16,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "follow the logs your container is",
      "offset": 2178.96,
      "duration": 3.44
    },
    {
      "lang": "en",
      "text": "generating in real time, you can use",
      "offset": 2180.4,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "Docker logs together with the F for",
      "offset": 2182.4,
      "duration": 4.719
    },
    {
      "lang": "en",
      "text": "follow flag. You will see any logs the",
      "offset": 2184.56,
      "duration": 5.76
    },
    {
      "lang": "en",
      "text": "container generates live. Even though",
      "offset": 2187.119,
      "duration": 6.081
    },
    {
      "lang": "en",
      "text": "Docker PS also has an F flag, the Docker",
      "offset": 2190.32,
      "duration": 5.84
    },
    {
      "lang": "en",
      "text": "PS flag allows us to filter when working",
      "offset": 2193.2,
      "duration": 5.6
    },
    {
      "lang": "en",
      "text": "with Docker logs instead. The F flag has",
      "offset": 2196.16,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "another effect, allowing us to follow a",
      "offset": 2198.8,
      "duration": 5.039
    },
    {
      "lang": "en",
      "text": "container its logs. After using Docker",
      "offset": 2200.88,
      "duration": 4.959
    },
    {
      "lang": "en",
      "text": "logs, you will see the output of a",
      "offset": 2203.839,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "running container until either the end",
      "offset": 2205.839,
      "duration": 5.121
    },
    {
      "lang": "en",
      "text": "of the logs or until you press Ctrl + C",
      "offset": 2207.839,
      "duration": 4.601
    },
    {
      "lang": "en",
      "text": "to exit the log",
      "offset": 2210.96,
      "duration": 4.639
    },
    {
      "lang": "en",
      "text": "view. Previously, we learned how to stop",
      "offset": 2212.44,
      "duration": 6.28
    },
    {
      "lang": "en",
      "text": "containers. However, a stopped container",
      "offset": 2215.599,
      "duration": 5.681
    },
    {
      "lang": "en",
      "text": "is not fully gone. The stopped container",
      "offset": 2218.72,
      "duration": 5.119
    },
    {
      "lang": "en",
      "text": "still exists and is occupying some space",
      "offset": 2221.28,
      "duration": 5.76
    },
    {
      "lang": "en",
      "text": "on our hard drive. To fully remove an",
      "offset": 2223.839,
      "duration": 6
    },
    {
      "lang": "en",
      "text": "already stopped container, for example,",
      "offset": 2227.04,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "because we want to reuse its name, we",
      "offset": 2229.839,
      "duration": 5.361
    },
    {
      "lang": "en",
      "text": "use docker container rm followed by the",
      "offset": 2232.4,
      "duration": 4.92
    },
    {
      "lang": "en",
      "text": "container ID to remove the",
      "offset": 2235.2,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "container. Here is a summary of the new",
      "offset": 2237.32,
      "duration": 4.6
    },
    {
      "lang": "en",
      "text": "commands we just saw that you can refer",
      "offset": 2239.599,
      "duration": 4.601
    },
    {
      "lang": "en",
      "text": "back to when completing the",
      "offset": 2241.92,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "exercises. Until now, images have been",
      "offset": 2244.2,
      "duration": 4.68
    },
    {
      "lang": "en",
      "text": "made available in the exercises when you",
      "offset": 2246.96,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "need them. In practice, images are",
      "offset": 2248.88,
      "duration": 5.16
    },
    {
      "lang": "en",
      "text": "either custom made or downloaded from",
      "offset": 2251.44,
      "duration": 5.919
    },
    {
      "lang": "en",
      "text": "DockerHub. DockerHub is a registry of",
      "offset": 2254.04,
      "duration": 5.88
    },
    {
      "lang": "en",
      "text": "community-made Docker images. In other",
      "offset": 2257.359,
      "duration": 5.201
    },
    {
      "lang": "en",
      "text": "words, it's a website from which we can",
      "offset": 2259.92,
      "duration": 5.199
    },
    {
      "lang": "en",
      "text": "download thousands of pre-made images",
      "offset": 2262.56,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "for all kinds of use cases. For any",
      "offset": 2265.119,
      "duration": 5.201
    },
    {
      "lang": "en",
      "text": "common use case, we'll find an image on",
      "offset": 2267.92,
      "duration": 3.919
    },
    {
      "lang": "en",
      "text": "DockerHub.",
      "offset": 2270.32,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "Downloading an image from DockerHub is",
      "offset": 2271.839,
      "duration": 4.961
    },
    {
      "lang": "en",
      "text": "called pulling an image. The command to",
      "offset": 2273.92,
      "duration": 5.919
    },
    {
      "lang": "en",
      "text": "pull an image is docker pull followed by",
      "offset": 2276.8,
      "duration": 5.08
    },
    {
      "lang": "en",
      "text": "the name of the image you want to",
      "offset": 2279.839,
      "duration": 4.801
    },
    {
      "lang": "en",
      "text": "download. For example, you can download",
      "offset": 2281.88,
      "duration": 5.8
    },
    {
      "lang": "en",
      "text": "the hello world, Postgress and Ubuntu",
      "offset": 2284.64,
      "duration": 6.64
    },
    {
      "lang": "en",
      "text": "image from DockerHub using Docker pool.",
      "offset": 2287.68,
      "duration": 5.679
    },
    {
      "lang": "en",
      "text": "When pulling an image using just the",
      "offset": 2291.28,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "image name, we will always get the",
      "offset": 2293.359,
      "duration": 5.361
    },
    {
      "lang": "en",
      "text": "latest version available of the image.",
      "offset": 2295.76,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "We can find older versions of an image",
      "offset": 2298.72,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "on",
      "offset": 2300.96,
      "duration": 2.32
    },
    {
      "lang": "en",
      "text": "hub.docker.com. The example you see here",
      "offset": 2303.4,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "is for the Ubuntu",
      "offset": 2305.76,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "image. To pull a specific version, we",
      "offset": 2307.56,
      "duration": 6.279
    },
    {
      "lang": "en",
      "text": "use Docker pool image name followed by a",
      "offset": 2310.56,
      "duration": 6
    },
    {
      "lang": "en",
      "text": "column and then the image version. A",
      "offset": 2313.839,
      "duration": 5.681
    },
    {
      "lang": "en",
      "text": "version can be a number, some text or a",
      "offset": 2316.56,
      "duration": 4.12
    },
    {
      "lang": "en",
      "text": "combination of",
      "offset": 2319.52,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "both. For example, if you want the 22.04",
      "offset": 2320.68,
      "duration": 8.28
    },
    {
      "lang": "en",
      "text": "04 release of Ubuntu, we can use docker",
      "offset": 2325.04,
      "duration": 8.12
    },
    {
      "lang": "en",
      "text": "pull Ubuntu colon",
      "offset": 2328.96,
      "duration": 6.92
    },
    {
      "lang": "en",
      "text": "22.04 or col",
      "offset": 2333.16,
      "duration": 4.959
    },
    {
      "lang": "en",
      "text": "jam. Now that we know how to pull",
      "offset": 2335.88,
      "duration": 5.32
    },
    {
      "lang": "en",
      "text": "images, we need a way to view the images",
      "offset": 2338.119,
      "duration": 5.881
    },
    {
      "lang": "en",
      "text": "we have available on our machine. For",
      "offset": 2341.2,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "this, we have the Docker images command",
      "offset": 2344,
      "duration": 3.839
    },
    {
      "lang": "en",
      "text": "which will give us a list of all",
      "offset": 2346.4,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "available images and tags. It will also",
      "offset": 2347.839,
      "duration": 5.28
    },
    {
      "lang": "en",
      "text": "tell us when the image was created, the",
      "offset": 2350.88,
      "duration": 4.84
    },
    {
      "lang": "en",
      "text": "size of the image on disk, and the image",
      "offset": 2353.119,
      "duration": 6.201
    },
    {
      "lang": "en",
      "text": "ID, which is a unique ID to identify the",
      "offset": 2355.72,
      "duration": 6.359
    },
    {
      "lang": "en",
      "text": "image. Docker only has a limited amount",
      "offset": 2359.32,
      "duration": 4.92
    },
    {
      "lang": "en",
      "text": "of space it can use on our disk.",
      "offset": 2362.079,
      "duration": 4.321
    },
    {
      "lang": "en",
      "text": "Previously, we saw how to remove",
      "offset": 2364.24,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "containers using Docker container RM.",
      "offset": 2366.4,
      "duration": 6.56
    },
    {
      "lang": "en",
      "text": "Similarly, we can use Docker image RM to",
      "offset": 2369.76,
      "duration": 5.72
    },
    {
      "lang": "en",
      "text": "clear space for more containers and",
      "offset": 2372.96,
      "duration": 6
    },
    {
      "lang": "en",
      "text": "images. A container is a running image.",
      "offset": 2375.48,
      "duration": 5.72
    },
    {
      "lang": "en",
      "text": "A side effect of this is that you can",
      "offset": 2378.96,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "only delete an image once there are no",
      "offset": 2381.2,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "more containers based on it. If we try",
      "offset": 2383.28,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "to delete an image for which we still",
      "offset": 2386.72,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "have a container on our system, we'll",
      "offset": 2388.64,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "get the warning you can see at the",
      "offset": 2391.2,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "bottom of the slide. This error message",
      "offset": 2392.64,
      "duration": 5.28
    },
    {
      "lang": "en",
      "text": "also includes a container ID based on",
      "offset": 2395.599,
      "duration": 4.641
    },
    {
      "lang": "en",
      "text": "the image we're trying to remove. We can",
      "offset": 2397.92,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "use the docker container rm command to",
      "offset": 2400.24,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "remove the container after which we can",
      "offset": 2402.32,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "remove the image.",
      "offset": 2404.48,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "It's common to have multiple containers",
      "offset": 2406.32,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "based on a single image which can make",
      "offset": 2408.32,
      "duration": 4.799
    },
    {
      "lang": "en",
      "text": "it a tedious task to one by one remove",
      "offset": 2410.32,
      "duration": 4.799
    },
    {
      "lang": "en",
      "text": "all containers before you can remove an",
      "offset": 2413.119,
      "duration": 4.641
    },
    {
      "lang": "en",
      "text": "image. To more easily clear all stopped",
      "offset": 2415.119,
      "duration": 5.161
    },
    {
      "lang": "en",
      "text": "containers, we can use docker container",
      "offset": 2417.76,
      "duration": 5.28
    },
    {
      "lang": "en",
      "text": "prune. Then we can use docker image",
      "offset": 2420.28,
      "duration": 6.6
    },
    {
      "lang": "en",
      "text": "prune- a to remove all unused images.",
      "offset": 2423.04,
      "duration": 6.72
    },
    {
      "lang": "en",
      "text": "The A flag, which stands for all, makes",
      "offset": 2426.88,
      "duration": 5.68
    },
    {
      "lang": "en",
      "text": "it so that unused containers are removed",
      "offset": 2429.76,
      "duration": 4.68
    },
    {
      "lang": "en",
      "text": "and not only dangling",
      "offset": 2432.56,
      "duration": 5.039
    },
    {
      "lang": "en",
      "text": "images. A dangly image is an image that",
      "offset": 2434.44,
      "duration": 6.28
    },
    {
      "lang": "en",
      "text": "no longer has a name because the name",
      "offset": 2437.599,
      "duration": 5.841
    },
    {
      "lang": "en",
      "text": "has been reused for another image. This",
      "offset": 2440.72,
      "duration": 4.879
    },
    {
      "lang": "en",
      "text": "frequently occurs when creating our own",
      "offset": 2443.44,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "images. For example, if we get an image",
      "offset": 2445.599,
      "duration": 6.321
    },
    {
      "lang": "en",
      "text": "called test SQL, but we find a mistake",
      "offset": 2448.8,
      "duration": 5.76
    },
    {
      "lang": "en",
      "text": "and change our image slightly, the",
      "offset": 2451.92,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "previous test SQL image will then become",
      "offset": 2454.56,
      "duration": 5.039
    },
    {
      "lang": "en",
      "text": "dangling as our new fixed image now has",
      "offset": 2456.8,
      "duration": 6
    },
    {
      "lang": "en",
      "text": "the test SQL name. Here is a summary of",
      "offset": 2459.599,
      "duration": 5.441
    },
    {
      "lang": "en",
      "text": "the new commands we just saw that you",
      "offset": 2462.8,
      "duration": 4.92
    },
    {
      "lang": "en",
      "text": "can refer back to when completing the",
      "offset": 2465.04,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "exercises. In the previous lesson, we",
      "offset": 2467.72,
      "duration": 4.2
    },
    {
      "lang": "en",
      "text": "learned about official Docker images",
      "offset": 2470.24,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "registry and how we can pull images from",
      "offset": 2471.92,
      "duration": 5.24
    },
    {
      "lang": "en",
      "text": "it. This is just one way images are",
      "offset": 2473.92,
      "duration": 5.679
    },
    {
      "lang": "en",
      "text": "distributed. Now we will learn how to",
      "offset": 2477.16,
      "duration": 4.919
    },
    {
      "lang": "en",
      "text": "share images with just a few people or a",
      "offset": 2479.599,
      "duration": 4.881
    },
    {
      "lang": "en",
      "text": "broader community. Either by sending",
      "offset": 2482.079,
      "duration": 4.161
    },
    {
      "lang": "en",
      "text": "Docker images like you would send any",
      "offset": 2484.48,
      "duration": 5.4
    },
    {
      "lang": "en",
      "text": "other file or using a Docker registry",
      "offset": 2486.24,
      "duration": 6.56
    },
    {
      "lang": "en",
      "text": "server. First, we'll have a look at",
      "offset": 2489.88,
      "duration": 5.32
    },
    {
      "lang": "en",
      "text": "private Docker registry servers. The",
      "offset": 2492.8,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "Docker organization maintains the",
      "offset": 2495.2,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "official Docker images registry.",
      "offset": 2496.8,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "Other Docker registries work the same",
      "offset": 2499.599,
      "duration": 4.081
    },
    {
      "lang": "en",
      "text": "way, but are under the control of",
      "offset": 2501.76,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "another person or group. This means",
      "offset": 2503.68,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "there are no guarantees that the images",
      "offset": 2506.64,
      "duration": 5.84
    },
    {
      "lang": "en",
      "text": "will work or are safe to use. Images",
      "offset": 2509.04,
      "duration": 5.6
    },
    {
      "lang": "en",
      "text": "from any registry other than the one",
      "offset": 2512.48,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "from the official Docker organization",
      "offset": 2514.64,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "are easily recognizable because their",
      "offset": 2516.72,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "name starts with the URL of the private",
      "offset": 2518.72,
      "duration": 4.639
    },
    {
      "lang": "en",
      "text": "Docker registry they come from. For",
      "offset": 2520.8,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "example, the image we see here comes",
      "offset": 2523.359,
      "duration": 3.48
    },
    {
      "lang": "en",
      "text": "from",
      "offset": 2525.68,
      "duration": 3.32
    },
    {
      "lang": "en",
      "text": "dockerhub.mmyprivate",
      "offset": 2526.839,
      "duration": 4.361
    },
    {
      "lang": "en",
      "text": "registry.com. Downloading or pulling an",
      "offset": 2529,
      "duration": 4.359
    },
    {
      "lang": "en",
      "text": "image from a private registry is also",
      "offset": 2531.2,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "done using docker pool. Because the",
      "offset": 2533.359,
      "duration": 4.561
    },
    {
      "lang": "en",
      "text": "image name includes a docker registry",
      "offset": 2535.92,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "URL, the image will automatically be",
      "offset": 2537.92,
      "duration": 3.88
    },
    {
      "lang": "en",
      "text": "pulled from the correct",
      "offset": 2539.92,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "registry. For example, to pull the",
      "offset": 2541.8,
      "duration": 4.68
    },
    {
      "lang": "en",
      "text": "previously mentioned image, use docker",
      "offset": 2544.4,
      "duration": 3.919
    },
    {
      "lang": "en",
      "text": "pool followed by the full name of the",
      "offset": 2546.48,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "image. Here too, we can append the colon",
      "offset": 2548.319,
      "duration": 4.361
    },
    {
      "lang": "en",
      "text": "followed by the",
      "offset": 2551.28,
      "duration": 3.52
    },
    {
      "lang": "en",
      "text": "version. Now that we know how to pull",
      "offset": 2552.68,
      "duration": 4.439
    },
    {
      "lang": "en",
      "text": "images from a custom registry, let's",
      "offset": 2554.8,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "look at how to upload or push an image",
      "offset": 2557.119,
      "duration": 5.041
    },
    {
      "lang": "en",
      "text": "to a Docker registry. The command for",
      "offset": 2559.76,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "this is docker image push followed by",
      "offset": 2562.16,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "the image name. To push an image to a",
      "offset": 2564.56,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "specific registry, we only have to make",
      "offset": 2567.68,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "sure the image name starts with the name",
      "offset": 2569.76,
      "duration": 5.359
    },
    {
      "lang": "en",
      "text": "of the registry you want to push to.",
      "offset": 2572,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "We can do this by renaming the image",
      "offset": 2575.119,
      "duration": 5.761
    },
    {
      "lang": "en",
      "text": "using docker tag. For example, if we",
      "offset": 2577.44,
      "duration": 8.399
    },
    {
      "lang": "en",
      "text": "have the image classify spam colon v1",
      "offset": 2580.88,
      "duration": 7.92
    },
    {
      "lang": "en",
      "text": "and we want to push it to docker.my",
      "offset": 2585.839,
      "duration": 4.121
    },
    {
      "lang": "en",
      "text": "private",
      "offset": 2588.8,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "registry.com, we would use docker tag",
      "offset": 2589.96,
      "duration": 4.119
    },
    {
      "lang": "en",
      "text": "followed by the image we'd like to",
      "offset": 2592.56,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "rename and then the desired new name",
      "offset": 2594.079,
      "duration": 4.481
    },
    {
      "lang": "en",
      "text": "including the URL of the private",
      "offset": 2596.64,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "registry. After renaming the image, we",
      "offset": 2598.56,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "can use Docker image push followed by",
      "offset": 2601.68,
      "duration": 4.159
    },
    {
      "lang": "en",
      "text": "the image name to push the image to our",
      "offset": 2603.76,
      "duration": 3.72
    },
    {
      "lang": "en",
      "text": "private",
      "offset": 2605.839,
      "duration": 3.841
    },
    {
      "lang": "en",
      "text": "registry. While the Docker official",
      "offset": 2607.48,
      "duration": 3.599
    },
    {
      "lang": "en",
      "text": "images can be pulled without",
      "offset": 2609.68,
      "duration": 3.36
    },
    {
      "lang": "en",
      "text": "authentication, anybody creating a",
      "offset": 2611.079,
      "duration": 3.961
    },
    {
      "lang": "en",
      "text": "private Docker registry can make it",
      "offset": 2613.04,
      "duration": 3.559
    },
    {
      "lang": "en",
      "text": "private and require",
      "offset": 2615.04,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "authentication. The standard way to",
      "offset": 2616.599,
      "duration": 4.361
    },
    {
      "lang": "en",
      "text": "secure private Docker registries",
      "offset": 2618.96,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "requires users to login. We do this with",
      "offset": 2620.96,
      "duration": 4.879
    },
    {
      "lang": "en",
      "text": "the Docker login command followed by the",
      "offset": 2624,
      "duration": 3.04
    },
    {
      "lang": "en",
      "text": "private registry you want to",
      "offset": 2625.839,
      "duration": 3.28
    },
    {
      "lang": "en",
      "text": "authenticate for.",
      "offset": 2627.04,
      "duration": 6.559
    },
    {
      "lang": "en",
      "text": "For example, docker login",
      "offset": 2629.119,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "dockerhub.mmyprivateregistry.com. The",
      "offset": 2634.599,
      "duration": 3.561
    },
    {
      "lang": "en",
      "text": "URL we authenticate for should be the",
      "offset": 2635.839,
      "duration": 4.401
    },
    {
      "lang": "en",
      "text": "same as the URL we put in front of an",
      "offset": 2638.16,
      "duration": 5.199
    },
    {
      "lang": "en",
      "text": "image name. If instead of using a Docker",
      "offset": 2640.24,
      "duration": 4.879
    },
    {
      "lang": "en",
      "text": "registry, we want to send the Docker",
      "offset": 2643.359,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "image to just a few people, it can be",
      "offset": 2645.119,
      "duration": 5.521
    },
    {
      "lang": "en",
      "text": "easier to send the image as a file, use",
      "offset": 2647.839,
      "duration": 4.801
    },
    {
      "lang": "en",
      "text": "the save command to save a Docker image",
      "offset": 2650.64,
      "duration": 5.199
    },
    {
      "lang": "en",
      "text": "to a file. This will create a minimized",
      "offset": 2652.64,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "file which we can then share like any",
      "offset": 2655.839,
      "duration": 3.161
    },
    {
      "lang": "en",
      "text": "other",
      "offset": 2658,
      "duration": 3.839
    },
    {
      "lang": "en",
      "text": "file. We can pass the desired file name",
      "offset": 2659,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "to the save command using the minus O",
      "offset": 2661.839,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "flag. To load the file, we use the load",
      "offset": 2664.2,
      "duration": 5.8
    },
    {
      "lang": "en",
      "text": "command, passing the file name using the",
      "offset": 2667.359,
      "duration": 4.201
    },
    {
      "lang": "en",
      "text": "minus I",
      "offset": 2670,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "flag. Here is a summary of the new",
      "offset": 2671.56,
      "duration": 4.36
    },
    {
      "lang": "en",
      "text": "commands we just saw that you could",
      "offset": 2673.92,
      "duration": 3.36
    },
    {
      "lang": "en",
      "text": "refer back to when completing the",
      "offset": 2675.92,
      "duration": 3.919
    },
    {
      "lang": "en",
      "text": "exercises.",
      "offset": 2677.28,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "Now that we know how to work with Docker",
      "offset": 2679.839,
      "duration": 3.681
    },
    {
      "lang": "en",
      "text": "images and containers, it's time to",
      "offset": 2681.52,
      "duration": 5.28
    },
    {
      "lang": "en",
      "text": "create our own images. Docker images are",
      "offset": 2683.52,
      "duration": 5.799
    },
    {
      "lang": "en",
      "text": "the recipes or blueprints for Docker",
      "offset": 2686.8,
      "duration": 5.519
    },
    {
      "lang": "en",
      "text": "containers. To create this blueprint, we",
      "offset": 2689.319,
      "duration": 5.481
    },
    {
      "lang": "en",
      "text": "must write down a list of instructions",
      "offset": 2692.319,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "in what is called a Docker file. A",
      "offset": 2694.8,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "Docker file is a text file containing",
      "offset": 2697.359,
      "duration": 4.561
    },
    {
      "lang": "en",
      "text": "all the commands we would run in the",
      "offset": 2699.92,
      "duration": 4.159
    },
    {
      "lang": "en",
      "text": "command line to install the software we",
      "offset": 2701.92,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "need with the addition of some Docker",
      "offset": 2704.079,
      "duration": 5.921
    },
    {
      "lang": "en",
      "text": "specific syntax. Conveniently, this file",
      "offset": 2706.64,
      "duration": 5.28
    },
    {
      "lang": "en",
      "text": "should be called docker file for docker",
      "offset": 2710,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "to be able to find it. Just like when we",
      "offset": 2711.92,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "would follow a recipe, docker runs the",
      "offset": 2714.64,
      "duration": 4.04
    },
    {
      "lang": "en",
      "text": "lines in a docker file from top to",
      "offset": 2716.72,
      "duration": 4.879
    },
    {
      "lang": "en",
      "text": "bottom. The first line in docker file is",
      "offset": 2718.68,
      "duration": 5.08
    },
    {
      "lang": "en",
      "text": "always the from instruction. This",
      "offset": 2721.599,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "instruction indicates to docker which",
      "offset": 2723.76,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "image to start from. We can base our",
      "offset": 2726.079,
      "duration": 5.441
    },
    {
      "lang": "en",
      "text": "images on any other image. Postgress,",
      "offset": 2728.96,
      "duration": 5.359
    },
    {
      "lang": "en",
      "text": "ibuntu, another image you made yourself",
      "offset": 2731.52,
      "duration": 4.44
    },
    {
      "lang": "en",
      "text": "or even the hello world",
      "offset": 2734.319,
      "duration": 4.481
    },
    {
      "lang": "en",
      "text": "image. As with pulling an image, if you",
      "offset": 2735.96,
      "duration": 4.68
    },
    {
      "lang": "en",
      "text": "want to start from a specific version,",
      "offset": 2738.8,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "you can specify the version right after",
      "offset": 2740.64,
      "duration": 4.76
    },
    {
      "lang": "en",
      "text": "the image name, separating both with a",
      "offset": 2742.48,
      "duration": 5.599
    },
    {
      "lang": "en",
      "text": "column. With the from instruction, we",
      "offset": 2745.4,
      "duration": 4.84
    },
    {
      "lang": "en",
      "text": "can create the most basic Docker file.",
      "offset": 2748.079,
      "duration": 4.081
    },
    {
      "lang": "en",
      "text": "We can then create an image from this",
      "offset": 2750.24,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "Docker file using the Docker build",
      "offset": 2752.16,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "command. The Docker build command is",
      "offset": 2754.16,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "followed by the location of the Docker",
      "offset": 2756.64,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "file we want to build. If our Docker",
      "offset": 2758.16,
      "duration": 3.919
    },
    {
      "lang": "en",
      "text": "file is in the current folder, this is",
      "offset": 2760.24,
      "duration": 4.879
    },
    {
      "lang": "en",
      "text": "simply a dot. When running docker build,",
      "offset": 2762.079,
      "duration": 4.881
    },
    {
      "lang": "en",
      "text": "in the last line of the output, we can",
      "offset": 2765.119,
      "duration": 4.161
    },
    {
      "lang": "en",
      "text": "see the ID or hash Docker assigns the",
      "offset": 2766.96,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "new image. The hash starts by indicating",
      "offset": 2769.28,
      "duration": 6.64
    },
    {
      "lang": "en",
      "text": "its type SH 256 in this case. This is",
      "offset": 2772.16,
      "duration": 5.919
    },
    {
      "lang": "en",
      "text": "followed by the unique hash which starts",
      "offset": 2775.92,
      "duration": 7.12
    },
    {
      "lang": "en",
      "text": "with a 67F for the example on the slide.",
      "offset": 2778.079,
      "duration": 6.561
    },
    {
      "lang": "en",
      "text": "If you want to give our image a more",
      "offset": 2783.04,
      "duration": 4.319
    },
    {
      "lang": "en",
      "text": "recognizable name, we can use the T for",
      "offset": 2784.64,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "tag flag followed by the name we want to",
      "offset": 2787.359,
      "duration": 4.881
    },
    {
      "lang": "en",
      "text": "give our image. If you also want to give",
      "offset": 2789.52,
      "duration": 4.799
    },
    {
      "lang": "en",
      "text": "a version to our image, we can add a",
      "offset": 2792.24,
      "duration": 4.359
    },
    {
      "lang": "en",
      "text": "colon and the version after the image",
      "offset": 2794.319,
      "duration": 5.361
    },
    {
      "lang": "en",
      "text": "name. In both cases, we enter docker",
      "offset": 2796.599,
      "duration": 5.561
    },
    {
      "lang": "en",
      "text": "build command with a dot indicating our",
      "offset": 2799.68,
      "duration": 4.919
    },
    {
      "lang": "en",
      "text": "docker file is in the current working",
      "offset": 2802.16,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "directory. Once docker has successfully",
      "offset": 2804.599,
      "duration": 4.921
    },
    {
      "lang": "en",
      "text": "built our image from our docker file, we",
      "offset": 2806.96,
      "duration": 4.639
    },
    {
      "lang": "en",
      "text": "can run and use our image just like the",
      "offset": 2809.52,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "images we downloaded from dockerhub.",
      "offset": 2811.599,
      "duration": 4.881
    },
    {
      "lang": "en",
      "text": "Now that we can create a very basic",
      "offset": 2814.56,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "image from a Docker file, the next step",
      "offset": 2816.48,
      "duration": 4.599
    },
    {
      "lang": "en",
      "text": "is to start customizing our",
      "offset": 2818.8,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "image. To customize our Docker file, we",
      "offset": 2821.079,
      "duration": 4.76
    },
    {
      "lang": "en",
      "text": "will use the run instruction. The run",
      "offset": 2823.92,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "instruction allows us to run any valid",
      "offset": 2825.839,
      "duration": 4.561
    },
    {
      "lang": "en",
      "text": "shell command while building an image.",
      "offset": 2827.92,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "To make an image that runs a Python data",
      "offset": 2830.4,
      "duration": 4.719
    },
    {
      "lang": "en",
      "text": "analysis, we start from the Ubuntu image",
      "offset": 2832.64,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "which has Ubuntu installed by specifying",
      "offset": 2835.119,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "the from Ubuntu instruction followed by",
      "offset": 2837.52,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "the run appget update.",
      "offset": 2839.599,
      "duration": 4.881
    },
    {
      "lang": "en",
      "text": "Optate is a package manager which",
      "offset": 2842.4,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "enables us to install all kinds of",
      "offset": 2844.48,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "software. The appget update command we",
      "offset": 2846.16,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "just added to our docker file will",
      "offset": 2848.72,
      "duration": 5.28
    },
    {
      "lang": "en",
      "text": "update opt so it knows what the most",
      "offset": 2850.96,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "upto-ate version is of all the different",
      "offset": 2854,
      "duration": 4.44
    },
    {
      "lang": "en",
      "text": "software it can install for",
      "offset": 2856.4,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "us. Using another run instruction on the",
      "offset": 2858.44,
      "duration": 5.48
    },
    {
      "lang": "en",
      "text": "following line we download Python using",
      "offset": 2861.28,
      "duration": 3.88
    },
    {
      "lang": "en",
      "text": "run",
      "offset": 2863.92,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "upgy 3. Like you can see at the bottom",
      "offset": 2865.16,
      "duration": 6.28
    },
    {
      "lang": "en",
      "text": "of the slide, some bash commands require",
      "offset": 2868.88,
      "duration": 5.439
    },
    {
      "lang": "en",
      "text": "user input. While a Docker image is",
      "offset": 2871.44,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "building, it is not possible to manually",
      "offset": 2874.319,
      "duration": 4.161
    },
    {
      "lang": "en",
      "text": "give any input to the bash commands",
      "offset": 2876.48,
      "duration": 3
    },
    {
      "lang": "en",
      "text": "Docker",
      "offset": 2878.48,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "runs. Instead, we can pass the dashy",
      "offset": 2879.48,
      "duration": 5.96
    },
    {
      "lang": "en",
      "text": "flag to",
      "offset": 2882.8,
      "duration": 2.64
    },
    {
      "lang": "en",
      "text": "upg run instructions to our Docker",
      "offset": 2887.48,
      "duration": 4.68
    },
    {
      "lang": "en",
      "text": "files. will notice that building a",
      "offset": 2890.16,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "Docker file can take seconds to",
      "offset": 2892.16,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "sometimes tens of minutes because Docker",
      "offset": 2894.16,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "is actually running the commands",
      "offset": 2897.2,
      "duration": 4.879
    },
    {
      "lang": "en",
      "text": "specified with run. For example,",
      "offset": 2898.8,
      "duration": 5.519
    },
    {
      "lang": "en",
      "text": "building a Docker file with from Ubuntu",
      "offset": 2902.079,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "and run appget update will take the same",
      "offset": 2904.319,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "time as us running appget update on",
      "offset": 2907.119,
      "duration": 5.041
    },
    {
      "lang": "en",
      "text": "Ubuntu which is 2 seconds for the",
      "offset": 2909.839,
      "duration": 4.801
    },
    {
      "lang": "en",
      "text": "example on the slide. Here is a summary",
      "offset": 2912.16,
      "duration": 4.959
    },
    {
      "lang": "en",
      "text": "of the new commands and instructions you",
      "offset": 2914.64,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "can refer back to when completing the",
      "offset": 2917.119,
      "duration": 3.841
    },
    {
      "lang": "en",
      "text": "exercises.",
      "offset": 2918.88,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "We've seen the basics of building",
      "offset": 2920.96,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "images. Now, we'll learn how to add",
      "offset": 2922.72,
      "duration": 5.119
    },
    {
      "lang": "en",
      "text": "files to our images. The run instruction",
      "offset": 2924.96,
      "duration": 5.119
    },
    {
      "lang": "en",
      "text": "allowed us to execute bash commands to",
      "offset": 2927.839,
      "duration": 4.961
    },
    {
      "lang": "en",
      "text": "create an image. But we can't use it to",
      "offset": 2930.079,
      "duration": 4.721
    },
    {
      "lang": "en",
      "text": "move files from our local file system",
      "offset": 2932.8,
      "duration": 4.799
    },
    {
      "lang": "en",
      "text": "onto the image we're building. To copy",
      "offset": 2934.8,
      "duration": 5.039
    },
    {
      "lang": "en",
      "text": "local files to our image, we use the",
      "offset": 2937.599,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "copy instruction. The copy instruction",
      "offset": 2939.839,
      "duration": 5.361
    },
    {
      "lang": "en",
      "text": "needs two parameters. First, we pass to",
      "offset": 2942.319,
      "duration": 5.921
    },
    {
      "lang": "en",
      "text": "it the part of the file we want to copy,",
      "offset": 2945.2,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "including the name of the file we want",
      "offset": 2948.24,
      "duration": 4.079
    },
    {
      "lang": "en",
      "text": "to copy. The second parameter is the",
      "offset": 2949.76,
      "duration": 5.599
    },
    {
      "lang": "en",
      "text": "destination path inside the image. We",
      "offset": 2952.319,
      "duration": 4.481
    },
    {
      "lang": "en",
      "text": "can choose whether to end the",
      "offset": 2955.359,
      "duration": 3.441
    },
    {
      "lang": "en",
      "text": "destination path with a file name. If",
      "offset": 2956.8,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "you do not pass a file name, the file",
      "offset": 2958.8,
      "duration": 4.799
    },
    {
      "lang": "en",
      "text": "will get its original name. If you don't",
      "offset": 2960.72,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "specify a file name in the source path,",
      "offset": 2963.599,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "then instead of just a single file, the",
      "offset": 2965.92,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "entire contents of the folder will be",
      "offset": 2968.079,
      "duration": 4.561
    },
    {
      "lang": "en",
      "text": "copied, including subfolders. For",
      "offset": 2969.76,
      "duration": 5.88
    },
    {
      "lang": "en",
      "text": "example, if we have a folder called",
      "offset": 2972.64,
      "duration": 5.439
    },
    {
      "lang": "en",
      "text": "pipeline_v3 with two files and the",
      "offset": 2975.64,
      "duration": 5.16
    },
    {
      "lang": "en",
      "text": "subfolder with one file, we can copy",
      "offset": 2978.079,
      "duration": 4.881
    },
    {
      "lang": "en",
      "text": "both files and the subfolder with its",
      "offset": 2980.8,
      "duration": 4.559
    },
    {
      "lang": "en",
      "text": "file using the copy instruction ending",
      "offset": 2982.96,
      "duration": 4.68
    },
    {
      "lang": "en",
      "text": "in pipeline v3",
      "offset": 2985.359,
      "duration": 5.281
    },
    {
      "lang": "en",
      "text": "slash. It is not possible to copy files",
      "offset": 2987.64,
      "duration": 4.919
    },
    {
      "lang": "en",
      "text": "from a parent directory when building a",
      "offset": 2990.64,
      "duration": 5.28
    },
    {
      "lang": "en",
      "text": "docker file. For example, let's say",
      "offset": 2992.559,
      "duration": 5.201
    },
    {
      "lang": "en",
      "text": "we're in the projects folder when we run",
      "offset": 2995.92,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "docker build. A copy instruction in the",
      "offset": 2997.76,
      "duration": 3.96
    },
    {
      "lang": "en",
      "text": "Docker file that tries to copy the",
      "offset": 3000,
      "duration": 4.319
    },
    {
      "lang": "en",
      "text": "init.py file from the parent directory",
      "offset": 3001.72,
      "duration": 5.08
    },
    {
      "lang": "en",
      "text": "of the current directory into the image",
      "offset": 3004.319,
      "duration": 5.121
    },
    {
      "lang": "en",
      "text": "will fail with a not found message we",
      "offset": 3006.8,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "can see on the slide. Another common way",
      "offset": 3009.44,
      "duration": 4.639
    },
    {
      "lang": "en",
      "text": "to include files in an image is to",
      "offset": 3012.24,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "download them during the image build.",
      "offset": 3014.079,
      "duration": 3.52
    },
    {
      "lang": "en",
      "text": "While there is an instruction that",
      "offset": 3016.16,
      "duration": 3.08
    },
    {
      "lang": "en",
      "text": "allows us to do this, the add",
      "offset": 3017.599,
      "duration": 3.841
    },
    {
      "lang": "en",
      "text": "instruction, best practice is to use",
      "offset": 3019.24,
      "duration": 4.04
    },
    {
      "lang": "en",
      "text": "several run instructions and bash",
      "offset": 3021.44,
      "duration": 5.119
    },
    {
      "lang": "en",
      "text": "commands to download and unzip files.",
      "offset": 3023.28,
      "duration": 5.839
    },
    {
      "lang": "en",
      "text": "First, use curl to download a file to a",
      "offset": 3026.559,
      "duration": 5.201
    },
    {
      "lang": "en",
      "text": "local directory. Then, unzip it using",
      "offset": 3029.119,
      "duration": 5.601
    },
    {
      "lang": "en",
      "text": "the unzip command if it's an archive.",
      "offset": 3031.76,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "Finally, once we don't need the zip file",
      "offset": 3034.72,
      "duration": 4.52
    },
    {
      "lang": "en",
      "text": "anymore, we can remove it with the rm",
      "offset": 3036.72,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "command. Any instruction in docker file",
      "offset": 3039.24,
      "duration": 4.44
    },
    {
      "lang": "en",
      "text": "that downloads files will add to the",
      "offset": 3041.68,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "size of the image. Even if the files are",
      "offset": 3043.68,
      "duration": 4.36
    },
    {
      "lang": "en",
      "text": "removed in a later",
      "offset": 3046.48,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "instruction to ensure images don't",
      "offset": 3048.04,
      "duration": 4.68
    },
    {
      "lang": "en",
      "text": "become unnecessarily big, we should",
      "offset": 3050.48,
      "duration": 5.28
    },
    {
      "lang": "en",
      "text": "download, unzip, and remove the original",
      "offset": 3052.72,
      "duration": 5.16
    },
    {
      "lang": "en",
      "text": "file in a single run",
      "offset": 3055.76,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "instruction. This can be done by",
      "offset": 3057.88,
      "duration": 4.199
    },
    {
      "lang": "en",
      "text": "chaining the commands using a backslash",
      "offset": 3060,
      "duration": 5.119
    },
    {
      "lang": "en",
      "text": "and double amperand. The backslash makes",
      "offset": 3062.079,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "it so bash commands can span multiple",
      "offset": 3065.119,
      "duration": 3.841
    },
    {
      "lang": "en",
      "text": "lines, allowing us to keep our Docker",
      "offset": 3067.119,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "file readable. The double amberand tells",
      "offset": 3068.96,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "the shell to execute the commands one",
      "offset": 3072.319,
      "duration": 5.28
    },
    {
      "lang": "en",
      "text": "after the other. Combining them allows",
      "offset": 3074.4,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "us to create a single run instruction",
      "offset": 3077.599,
      "duration": 4.601
    },
    {
      "lang": "en",
      "text": "that is still easy to read over multiple",
      "offset": 3079.28,
      "duration": 5.68
    },
    {
      "lang": "en",
      "text": "lines. By using this best practice on",
      "offset": 3082.2,
      "duration": 5.08
    },
    {
      "lang": "en",
      "text": "downloading and unpacking archives, we",
      "offset": 3084.96,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "ensure our image is as small as",
      "offset": 3087.28,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "possible, making it easier to share and",
      "offset": 3089.28,
      "duration": 3.48
    },
    {
      "lang": "en",
      "text": "faster to",
      "offset": 3091.68,
      "duration": 3.28
    },
    {
      "lang": "en",
      "text": "run. Here is a summary of the new",
      "offset": 3092.76,
      "duration": 4.12
    },
    {
      "lang": "en",
      "text": "commands and instructions you can refer",
      "offset": 3094.96,
      "duration": 5.359
    },
    {
      "lang": "en",
      "text": "back to when completing the exercises.",
      "offset": 3096.88,
      "duration": 6
    },
    {
      "lang": "en",
      "text": "Up to this point, the images we created",
      "offset": 3100.319,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "don't run anything by default. Now,",
      "offset": 3102.88,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "we'll see how to add a default start",
      "offset": 3105.359,
      "duration": 5.121
    },
    {
      "lang": "en",
      "text": "command to our images and how to",
      "offset": 3107.44,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "override the start command when we start",
      "offset": 3110.48,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "an image. When we start a container from",
      "offset": 3112.24,
      "duration": 5.119
    },
    {
      "lang": "en",
      "text": "the hello world image, the container",
      "offset": 3115.28,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "will start, print text, and then stop.",
      "offset": 3117.359,
      "duration": 6
    },
    {
      "lang": "en",
      "text": "The creators of this image chose a start",
      "offset": 3120.4,
      "duration": 5.679
    },
    {
      "lang": "en",
      "text": "command that prints text and then exits.",
      "offset": 3123.359,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "This makes sense in the context of a",
      "offset": 3126.079,
      "duration": 4.161
    },
    {
      "lang": "en",
      "text": "hello world image. It wouldn't make",
      "offset": 3127.839,
      "duration": 4.161
    },
    {
      "lang": "en",
      "text": "sense for the creators of an image with",
      "offset": 3130.24,
      "duration": 3.72
    },
    {
      "lang": "en",
      "text": "the goal of running Python to do the",
      "offset": 3132,
      "duration": 5.359
    },
    {
      "lang": "en",
      "text": "same. Instead, it would be useful for",
      "offset": 3133.96,
      "duration": 5.56
    },
    {
      "lang": "en",
      "text": "their image to start a Python session",
      "offset": 3137.359,
      "duration": 5.681
    },
    {
      "lang": "en",
      "text": "for the user automatically and also to",
      "offset": 3139.52,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "exit a session once that Python session",
      "offset": 3143.04,
      "duration": 4.76
    },
    {
      "lang": "en",
      "text": "is stopped. Docker images have this",
      "offset": 3145.04,
      "duration": 5.84
    },
    {
      "lang": "en",
      "text": "flexibility. Using the cmd instruction,",
      "offset": 3147.8,
      "duration": 5
    },
    {
      "lang": "en",
      "text": "we can choose any shell command to",
      "offset": 3150.88,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "execute when a container is started from",
      "offset": 3152.8,
      "duration": 5.279
    },
    {
      "lang": "en",
      "text": "the image. Like everything else we add",
      "offset": 3155.28,
      "duration": 5.039
    },
    {
      "lang": "en",
      "text": "to images, we can add a start command",
      "offset": 3158.079,
      "duration": 4.401
    },
    {
      "lang": "en",
      "text": "using an instruction in a docker file.",
      "offset": 3160.319,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "This instruction is cmd. cmd accepts a",
      "offset": 3162.48,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "single parameter, the shell command to",
      "offset": 3165.839,
      "duration": 3.641
    },
    {
      "lang": "en",
      "text": "run when the image",
      "offset": 3167.92,
      "duration": 4.159
    },
    {
      "lang": "en",
      "text": "starts. The shell command runs when",
      "offset": 3169.48,
      "duration": 4.92
    },
    {
      "lang": "en",
      "text": "somebody starts a container. It is not",
      "offset": 3172.079,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "executed when using docker build to",
      "offset": 3174.4,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "create an image from the docker file.",
      "offset": 3176.079,
      "duration": 4.721
    },
    {
      "lang": "en",
      "text": "Adding a cmd instruction to a docker",
      "offset": 3178.72,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "file does not increase the image size",
      "offset": 3180.8,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "and does not add any time to the build.",
      "offset": 3183.119,
      "duration": 6
    },
    {
      "lang": "en",
      "text": "If multiple cmd instruction exist in a",
      "offset": 3186.24,
      "duration": 5.119
    },
    {
      "lang": "en",
      "text": "single docker file, then only the last",
      "offset": 3189.119,
      "duration": 3.881
    },
    {
      "lang": "en",
      "text": "one will have any",
      "offset": 3191.359,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "effect. When building an image for a",
      "offset": 3193,
      "duration": 4.44
    },
    {
      "lang": "en",
      "text": "specific use, it makes sense to set the",
      "offset": 3195.359,
      "duration": 4.161
    },
    {
      "lang": "en",
      "text": "cmd instruction to start an application",
      "offset": 3197.44,
      "duration": 4.879
    },
    {
      "lang": "en",
      "text": "related to this particular use. This",
      "offset": 3199.52,
      "duration": 4.559
    },
    {
      "lang": "en",
      "text": "could be starting a Python based data",
      "offset": 3202.319,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "analysis or starting software like a",
      "offset": 3204.079,
      "duration": 4.441
    },
    {
      "lang": "en",
      "text": "database that accepts outside",
      "offset": 3206.319,
      "duration": 4.721
    },
    {
      "lang": "en",
      "text": "connections. Another typical pattern is",
      "offset": 3208.52,
      "duration": 5
    },
    {
      "lang": "en",
      "text": "to run a script at startup that starts",
      "offset": 3211.04,
      "duration": 4.519
    },
    {
      "lang": "en",
      "text": "multiple other",
      "offset": 3213.52,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "applications. With the cmd instruction,",
      "offset": 3215.559,
      "duration": 4.76
    },
    {
      "lang": "en",
      "text": "we set a shell command to run when a",
      "offset": 3218.4,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "container is started from the image. The",
      "offset": 3220.319,
      "duration": 3.841
    },
    {
      "lang": "en",
      "text": "container will stay running until the",
      "offset": 3222.4,
      "duration": 2.919
    },
    {
      "lang": "en",
      "text": "shell command",
      "offset": 3224.16,
      "duration": 3.919
    },
    {
      "lang": "en",
      "text": "exits. The hello world image only prints",
      "offset": 3225.319,
      "duration": 5.721
    },
    {
      "lang": "en",
      "text": "text and exits right after doing so. An",
      "offset": 3228.079,
      "duration": 5.361
    },
    {
      "lang": "en",
      "text": "image that starts a database by default",
      "offset": 3231.04,
      "duration": 4.68
    },
    {
      "lang": "en",
      "text": "will stop if the database is stopped or",
      "offset": 3233.44,
      "duration": 4.639
    },
    {
      "lang": "en",
      "text": "crashes. The more general the use case",
      "offset": 3235.72,
      "duration": 4.44
    },
    {
      "lang": "en",
      "text": "of the image, the more flexible the",
      "offset": 3238.079,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "start command should be. For example, if",
      "offset": 3240.16,
      "duration": 5.28
    },
    {
      "lang": "en",
      "text": "we make a general usage Ubuntu image,",
      "offset": 3243.119,
      "duration": 4.401
    },
    {
      "lang": "en",
      "text": "simply opening a shell would make sense",
      "offset": 3245.44,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "as a start command. The image will then",
      "offset": 3247.52,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "exit when the user exits the shell.",
      "offset": 3249.839,
      "duration": 4.881
    },
    {
      "lang": "en",
      "text": "While the cmd instruction sets a default",
      "offset": 3252.72,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "start command for the image, this",
      "offset": 3254.72,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "default start command can be overridden",
      "offset": 3256.72,
      "duration": 3.839
    },
    {
      "lang": "en",
      "text": "when starting an image using the docker",
      "offset": 3258.72,
      "duration": 2.76
    },
    {
      "lang": "en",
      "text": "run",
      "offset": 3260.559,
      "duration": 3.28
    },
    {
      "lang": "en",
      "text": "command. Just like we pass the image we",
      "offset": 3261.48,
      "duration": 4.599
    },
    {
      "lang": "en",
      "text": "want to start to docker run, we can pass",
      "offset": 3263.839,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "a second optional argument which will",
      "offset": 3266.079,
      "duration": 4.681
    },
    {
      "lang": "en",
      "text": "override the cmd instruction set in the",
      "offset": 3268.079,
      "duration": 5.28
    },
    {
      "lang": "en",
      "text": "image. Often when replacing the start",
      "offset": 3270.76,
      "duration": 4.44
    },
    {
      "lang": "en",
      "text": "command of an image, we will run the",
      "offset": 3273.359,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "image in interactive mode using the -ash",
      "offset": 3275.2,
      "duration": 5.6
    },
    {
      "lang": "en",
      "text": "it flag using a shell as a new start",
      "offset": 3277.359,
      "duration": 6.321
    },
    {
      "lang": "en",
      "text": "command. For example, bash allows us to",
      "offset": 3280.8,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "look around the image, discover files,",
      "offset": 3283.68,
      "duration": 4.04
    },
    {
      "lang": "en",
      "text": "and see what's",
      "offset": 3286,
      "duration": 3.839
    },
    {
      "lang": "en",
      "text": "installed. Here is a summary of the new",
      "offset": 3287.72,
      "duration": 3.96
    },
    {
      "lang": "en",
      "text": "commands and instructions you can refer",
      "offset": 3289.839,
      "duration": 4.121
    },
    {
      "lang": "en",
      "text": "back to when completing the",
      "offset": 3291.68,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "exercises. Building Docker files can",
      "offset": 3293.96,
      "duration": 4.52
    },
    {
      "lang": "en",
      "text": "take some time. However, building the",
      "offset": 3296.079,
      "duration": 4.561
    },
    {
      "lang": "en",
      "text": "same Docker file a second time is much",
      "offset": 3298.48,
      "duration": 4.639
    },
    {
      "lang": "en",
      "text": "faster. Let's get some insight into why",
      "offset": 3300.64,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "and when this is the case.",
      "offset": 3303.119,
      "duration": 4.321
    },
    {
      "lang": "en",
      "text": "When learning about the run instruction,",
      "offset": 3305.52,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "we saw that building images can take",
      "offset": 3307.44,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "significant time because the shell",
      "offset": 3309.52,
      "duration": 3.839
    },
    {
      "lang": "en",
      "text": "commands are actually run when the image",
      "offset": 3311.44,
      "duration": 5.119
    },
    {
      "lang": "en",
      "text": "is built. This is necessary because what",
      "offset": 3313.359,
      "duration": 5.441
    },
    {
      "lang": "en",
      "text": "is saved in the resulting image is not",
      "offset": 3316.559,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "the instructions in the Docker file, but",
      "offset": 3318.8,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "the changes in the file system the",
      "offset": 3321.119,
      "duration": 4.641
    },
    {
      "lang": "en",
      "text": "instructions make during the build.",
      "offset": 3322.88,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "For example, if you have a run",
      "offset": 3325.76,
      "duration": 3.599
    },
    {
      "lang": "en",
      "text": "instruction with a shell command that",
      "offset": 3327.76,
      "duration": 3.839
    },
    {
      "lang": "en",
      "text": "downloads and opens a zip file with",
      "offset": 3329.359,
      "duration": 4.641
    },
    {
      "lang": "en",
      "text": "several files inside, the resulting",
      "offset": 3331.599,
      "duration": 4.121
    },
    {
      "lang": "en",
      "text": "image will contain those",
      "offset": 3334,
      "duration": 5.119
    },
    {
      "lang": "en",
      "text": "files. During the build, an image keeps",
      "offset": 3335.72,
      "duration": 5.56
    },
    {
      "lang": "en",
      "text": "track of which instructions in our",
      "offset": 3339.119,
      "duration": 4.801
    },
    {
      "lang": "en",
      "text": "Docker file created which change to the",
      "offset": 3341.28,
      "duration": 5.92
    },
    {
      "lang": "en",
      "text": "file system. We can view an image as a",
      "offset": 3343.92,
      "duration": 5.6
    },
    {
      "lang": "en",
      "text": "list of consecutive changes to the file",
      "offset": 3347.2,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "system with every entry in the list",
      "offset": 3349.52,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "corresponding to a specific Docker",
      "offset": 3352,
      "duration": 3.799
    },
    {
      "lang": "en",
      "text": "instruction in the Docker",
      "offset": 3353.92,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "file. Together, all the changes to the",
      "offset": 3355.799,
      "duration": 5.161
    },
    {
      "lang": "en",
      "text": "file system for a single instruction in",
      "offset": 3358.64,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "the Docker file are called the layer of",
      "offset": 3360.96,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "the image. All layers together make up a",
      "offset": 3363.2,
      "duration": 6.24
    },
    {
      "lang": "en",
      "text": "docker image. There's also some metadata",
      "offset": 3366.48,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "like the start command set with the cmd",
      "offset": 3369.44,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "instruction.",
      "offset": 3371.44,
      "duration": 3.679
    },
    {
      "lang": "en",
      "text": "While building a Docker file, we can",
      "offset": 3373.28,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "clearly see when Docker is working on",
      "offset": 3375.119,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "the next layer and on which layer it is",
      "offset": 3377.2,
      "duration": 3.399
    },
    {
      "lang": "en",
      "text": "working from the",
      "offset": 3379.359,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "output. Like at the bottom of the slide,",
      "offset": 3380.599,
      "duration": 4.841
    },
    {
      "lang": "en",
      "text": "Docker will print which step it is",
      "offset": 3383.359,
      "duration": 4.561
    },
    {
      "lang": "en",
      "text": "building of the total amount of steps",
      "offset": 3385.44,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "whenever the next instruction in a",
      "offset": 3387.92,
      "duration": 3.32
    },
    {
      "lang": "en",
      "text": "Docker file starts",
      "offset": 3389.44,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "building. When building a Docker file",
      "offset": 3391.24,
      "duration": 4.44
    },
    {
      "lang": "en",
      "text": "that we have built before, in front of",
      "offset": 3393.44,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "each layer being built, it says cached",
      "offset": 3395.68,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "in capital letters.",
      "offset": 3398.24,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "Docker detects which Docker file",
      "offset": 3400.4,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "instructions have not changed and",
      "offset": 3402.48,
      "duration": 3.8
    },
    {
      "lang": "en",
      "text": "instead of rerunning the Docker file",
      "offset": 3404.48,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "instruction, it uses the known result it",
      "offset": 3406.28,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "has",
      "offset": 3408.96,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "stored. Docker will only use cache",
      "offset": 3410.04,
      "duration": 5.96
    },
    {
      "lang": "en",
      "text": "layers to speed up our builds if the",
      "offset": 3413.68,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "Docker file instruction is exactly the",
      "offset": 3416,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "same and all previous Docker file",
      "offset": 3418.4,
      "duration": 5.28
    },
    {
      "lang": "en",
      "text": "instructions are also identical to when",
      "offset": 3420.72,
      "duration": 6.599
    },
    {
      "lang": "en",
      "text": "it originally created and stored this",
      "offset": 3423.68,
      "duration": 6.56
    },
    {
      "lang": "en",
      "text": "layer. Understanding when Docker layers",
      "offset": 3427.319,
      "duration": 5.321
    },
    {
      "lang": "en",
      "text": "are cached when building images is",
      "offset": 3430.24,
      "duration": 5.599
    },
    {
      "lang": "en",
      "text": "important for two reasons. First, it",
      "offset": 3432.64,
      "duration": 5.679
    },
    {
      "lang": "en",
      "text": "will help us understand why sometimes",
      "offset": 3435.839,
      "duration": 5.921
    },
    {
      "lang": "en",
      "text": "our image stays the same even though we",
      "offset": 3438.319,
      "duration": 5.681
    },
    {
      "lang": "en",
      "text": "change and rebuild it.",
      "offset": 3441.76,
      "duration": 6.079
    },
    {
      "lang": "en",
      "text": "For example, if we have a run aptget",
      "offset": 3444,
      "duration": 7.52
    },
    {
      "lang": "en",
      "text": "update and aptget install python 3",
      "offset": 3447.839,
      "duration": 6.081
    },
    {
      "lang": "en",
      "text": "instruction in our docker file and the",
      "offset": 3451.52,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "new version of python 3 is released,",
      "offset": 3453.92,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "rebuilding our docker file will not",
      "offset": 3456.4,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "change anything in the resulting image.",
      "offset": 3458.319,
      "duration": 5.121
    },
    {
      "lang": "en",
      "text": "Docker will see the same instructions as",
      "offset": 3461.04,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "when it last built this docker file and",
      "offset": 3463.44,
      "duration": 5.359
    },
    {
      "lang": "en",
      "text": "will assume that the result is the same.",
      "offset": 3465.92,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "it cannot know that rerunning appget",
      "offset": 3468.799,
      "duration": 4.921
    },
    {
      "lang": "en",
      "text": "update will give another",
      "offset": 3471.44,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "result. Understanding when docker layers",
      "offset": 3473.72,
      "duration": 5.399
    },
    {
      "lang": "en",
      "text": "are cached is also important because it",
      "offset": 3476.48,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "will help us write docker files which we",
      "offset": 3479.119,
      "duration": 4.881
    },
    {
      "lang": "en",
      "text": "can make changes to without all layers",
      "offset": 3481.28,
      "duration": 3.96
    },
    {
      "lang": "en",
      "text": "having to be",
      "offset": 3484,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "rebuilt. This can be done by ordering",
      "offset": 3485.24,
      "duration": 4.92
    },
    {
      "lang": "en",
      "text": "the instructions in the docker file from",
      "offset": 3487.92,
      "duration": 5.6
    },
    {
      "lang": "en",
      "text": "least changing to most changing.",
      "offset": 3490.16,
      "duration": 5.84
    },
    {
      "lang": "en",
      "text": "This is why we always want to put the",
      "offset": 3493.52,
      "duration": 4.44
    },
    {
      "lang": "en",
      "text": "Docker file instructions to install",
      "offset": 3496,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "packages before instructions to copy",
      "offset": 3497.96,
      "duration": 6.04
    },
    {
      "lang": "en",
      "text": "files into the image. Often we'll change",
      "offset": 3500.88,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "the files when improving our work or",
      "offset": 3504,
      "duration": 4.559
    },
    {
      "lang": "en",
      "text": "fixing bugs, but the packages we need",
      "offset": 3506,
      "duration": 5.92
    },
    {
      "lang": "en",
      "text": "rarely change. This ensures as many",
      "offset": 3508.559,
      "duration": 6.441
    },
    {
      "lang": "en",
      "text": "cache layers as possible can be",
      "offset": 3511.92,
      "duration": 5.6
    },
    {
      "lang": "en",
      "text": "reused. Let's look at a new type of",
      "offset": 3515,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "interaction between Docker file",
      "offset": 3517.52,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "instructions. The from, run, and copy",
      "offset": 3519.72,
      "duration": 5
    },
    {
      "lang": "en",
      "text": "instructions only affect the file",
      "offset": 3522.64,
      "duration": 6.199
    },
    {
      "lang": "en",
      "text": "system, not each other. If we copy a",
      "offset": 3524.72,
      "duration": 6.879
    },
    {
      "lang": "en",
      "text": "start.sh file from our local file system",
      "offset": 3528.839,
      "duration": 5.48
    },
    {
      "lang": "en",
      "text": "into an image, we can then use the run",
      "offset": 3531.599,
      "duration": 5.441
    },
    {
      "lang": "en",
      "text": "instruction to execute this file, the",
      "offset": 3534.319,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "two instructions didn't change each",
      "offset": 3537.04,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "other's behavior directly, but both used",
      "offset": 3538.799,
      "duration": 7.28
    },
    {
      "lang": "en",
      "text": "and changed the file system. However,",
      "offset": 3542.16,
      "duration": 6
    },
    {
      "lang": "en",
      "text": "some instructions can't influence other",
      "offset": 3546.079,
      "duration": 4.401
    },
    {
      "lang": "en",
      "text": "instructions directly.",
      "offset": 3548.16,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "The work there instruction changes the",
      "offset": 3550.48,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "working directory instructions are",
      "offset": 3552.88,
      "duration": 4.479
    },
    {
      "lang": "en",
      "text": "executed in. And the user instruction",
      "offset": 3554.64,
      "duration": 5.679
    },
    {
      "lang": "en",
      "text": "changes which user is executing the",
      "offset": 3557.359,
      "duration": 3.96
    },
    {
      "lang": "en",
      "text": "following",
      "offset": 3560.319,
      "duration": 3.361
    },
    {
      "lang": "en",
      "text": "instructions. When using a Docker file",
      "offset": 3561.319,
      "duration": 4.52
    },
    {
      "lang": "en",
      "text": "instruction where we have to specify a",
      "offset": 3563.68,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "pod, we can always use a full pod. For",
      "offset": 3565.839,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "example, a pod that starts at the root",
      "offset": 3569.2,
      "duration": 4.159
    },
    {
      "lang": "en",
      "text": "of the file system like in the first",
      "offset": 3571.359,
      "duration": 4.401
    },
    {
      "lang": "en",
      "text": "example on the slide. When working with",
      "offset": 3573.359,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "long pods, this can quickly become hard",
      "offset": 3575.76,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "to read. The alternative to using full",
      "offset": 3578.079,
      "duration": 5.681
    },
    {
      "lang": "en",
      "text": "pods is the work der instruction which",
      "offset": 3580.96,
      "duration": 4.639
    },
    {
      "lang": "en",
      "text": "allows us to change the directory inside",
      "offset": 3583.76,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "the image from which all subsequent",
      "offset": 3585.599,
      "duration": 3.641
    },
    {
      "lang": "en",
      "text": "instructions will be",
      "offset": 3587.68,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "executed. For the copy instruction, we",
      "offset": 3589.24,
      "duration": 4.2
    },
    {
      "lang": "en",
      "text": "change the current path on which",
      "offset": 3591.92,
      "duration": 3.72
    },
    {
      "lang": "en",
      "text": "relative paths will be",
      "offset": 3593.44,
      "duration": 4.879
    },
    {
      "lang": "en",
      "text": "based. Like with the copy instruction,",
      "offset": 3595.64,
      "duration": 4.439
    },
    {
      "lang": "en",
      "text": "other docker file instructions are",
      "offset": 3598.319,
      "duration": 3.601
    },
    {
      "lang": "en",
      "text": "influenced when the working directory is",
      "offset": 3600.079,
      "duration": 3.921
    },
    {
      "lang": "en",
      "text": "changed with work deer. This includes",
      "offset": 3601.92,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "the run and cmd instructions.",
      "offset": 3604,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "The effect on the run instruction is",
      "offset": 3606.88,
      "duration": 3.679
    },
    {
      "lang": "en",
      "text": "straightforward. The shell commands",
      "offset": 3608.64,
      "duration": 3.919
    },
    {
      "lang": "en",
      "text": "executed by the run instruction will be",
      "offset": 3610.559,
      "duration": 4.121
    },
    {
      "lang": "en",
      "text": "run in the directory set by",
      "offset": 3612.559,
      "duration": 4.401
    },
    {
      "lang": "en",
      "text": "worker. This allows us to make the run",
      "offset": 3614.68,
      "duration": 4.679
    },
    {
      "lang": "en",
      "text": "instructions more readable and removes",
      "offset": 3616.96,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "any unclarity about where the files we",
      "offset": 3619.359,
      "duration": 5.041
    },
    {
      "lang": "en",
      "text": "are running are located. The work deer",
      "offset": 3621.52,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "instruction also changes the working",
      "offset": 3624.4,
      "duration": 3.919
    },
    {
      "lang": "en",
      "text": "directory in which the shell command of",
      "offset": 3626.16,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "the cmd instruction is run.",
      "offset": 3628.319,
      "duration": 5.561
    },
    {
      "lang": "en",
      "text": "If a user of the image overrides the",
      "offset": 3631.04,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "cmd, their replacement start command",
      "offset": 3633.88,
      "duration": 4.52
    },
    {
      "lang": "en",
      "text": "will also be run in the pod set with",
      "offset": 3636.48,
      "duration": 4.639
    },
    {
      "lang": "en",
      "text": "work deer. What you can do in a Linux",
      "offset": 3638.4,
      "duration": 5.399
    },
    {
      "lang": "en",
      "text": "operating system or OS depends on your",
      "offset": 3641.119,
      "duration": 5.68
    },
    {
      "lang": "en",
      "text": "permissions. Your permissions in turn",
      "offset": 3643.799,
      "duration": 5.881
    },
    {
      "lang": "en",
      "text": "are set by assigning you a user. For",
      "offset": 3646.799,
      "duration": 5.76
    },
    {
      "lang": "en",
      "text": "example, a data science user could be",
      "offset": 3649.68,
      "duration": 4.879
    },
    {
      "lang": "en",
      "text": "allowed to access the data sets folder",
      "offset": 3652.559,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "while other users are not.",
      "offset": 3654.559,
      "duration": 4.961
    },
    {
      "lang": "en",
      "text": "There is a unique user called the root",
      "offset": 3657.119,
      "duration": 5.401
    },
    {
      "lang": "en",
      "text": "user which has all permissions on the",
      "offset": 3659.52,
      "duration": 6.079
    },
    {
      "lang": "en",
      "text": "system. Best practice is to use the root",
      "offset": 3662.52,
      "duration": 6.12
    },
    {
      "lang": "en",
      "text": "user to create one or more new users and",
      "offset": 3665.599,
      "duration": 5.361
    },
    {
      "lang": "en",
      "text": "only give these users the permissions",
      "offset": 3668.64,
      "duration": 4.28
    },
    {
      "lang": "en",
      "text": "required for specific",
      "offset": 3670.96,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "tasks. Then we should stop using the",
      "offset": 3672.92,
      "duration": 5.08
    },
    {
      "lang": "en",
      "text": "root user and use these better scoped",
      "offset": 3675.68,
      "duration": 3.56
    },
    {
      "lang": "en",
      "text": "users",
      "offset": 3678,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "instead. When writing docker files, we",
      "offset": 3679.24,
      "duration": 4.92
    },
    {
      "lang": "en",
      "text": "should follow this best practice and not",
      "offset": 3682,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "run everything as root. The image we",
      "offset": 3684.16,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "start our Docker file from will",
      "offset": 3686.96,
      "duration": 5.119
    },
    {
      "lang": "en",
      "text": "determine the user. For example, the",
      "offset": 3688.88,
      "duration": 5.64
    },
    {
      "lang": "en",
      "text": "Ubuntu image uses the root user by",
      "offset": 3692.079,
      "duration": 5.121
    },
    {
      "lang": "en",
      "text": "default. Any run instructions we put in",
      "offset": 3694.52,
      "duration": 5.319
    },
    {
      "lang": "en",
      "text": "a Docker file starting from Ubuntu will",
      "offset": 3697.2,
      "duration": 5.76
    },
    {
      "lang": "en",
      "text": "be run as root. This has the advantage",
      "offset": 3699.839,
      "duration": 5.921
    },
    {
      "lang": "en",
      "text": "that all folders are accessible and we",
      "offset": 3702.96,
      "duration": 4.879
    },
    {
      "lang": "en",
      "text": "won't get errors about permissions when",
      "offset": 3705.76,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "installing anything. However, it is",
      "offset": 3707.839,
      "duration": 5.601
    },
    {
      "lang": "en",
      "text": "unsafe as all instructions will run with",
      "offset": 3710.64,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "full permissions.",
      "offset": 3713.44,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "The user docker file instruction allows",
      "offset": 3715.44,
      "duration": 5.359
    },
    {
      "lang": "en",
      "text": "us to change the user in the image. Any",
      "offset": 3717.92,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "following instructions will be run as",
      "offset": 3720.799,
      "duration": 4.961
    },
    {
      "lang": "en",
      "text": "the user set by the user instruction. It",
      "offset": 3722.72,
      "duration": 5.119
    },
    {
      "lang": "en",
      "text": "can be used multiple times and the",
      "offset": 3725.76,
      "duration": 3.839
    },
    {
      "lang": "en",
      "text": "latest instruction will determine the",
      "offset": 3727.839,
      "duration": 3.641
    },
    {
      "lang": "en",
      "text": "user executing the following",
      "offset": 3729.599,
      "duration": 4.401
    },
    {
      "lang": "en",
      "text": "instructions. The user instruction",
      "offset": 3731.48,
      "duration": 4.28
    },
    {
      "lang": "en",
      "text": "changes the user with which the",
      "offset": 3734,
      "duration": 3.839
    },
    {
      "lang": "en",
      "text": "following instructions in the image are",
      "offset": 3735.76,
      "duration": 4.799
    },
    {
      "lang": "en",
      "text": "run. The last user instruction in a",
      "offset": 3737.839,
      "duration": 5.681
    },
    {
      "lang": "en",
      "text": "Docker file will also control the user",
      "offset": 3740.559,
      "duration": 5.841
    },
    {
      "lang": "en",
      "text": "in any containers started from the image",
      "offset": 3743.52,
      "duration": 5.839
    },
    {
      "lang": "en",
      "text": "of this Docker file. Here are the two",
      "offset": 3746.4,
      "duration": 4.959
    },
    {
      "lang": "en",
      "text": "new instructions for you to refer back",
      "offset": 3749.359,
      "duration": 4.2
    },
    {
      "lang": "en",
      "text": "to when completing the",
      "offset": 3751.359,
      "duration": 4.561
    },
    {
      "lang": "en",
      "text": "exercises. Using variables in our Docker",
      "offset": 3753.559,
      "duration": 4.04
    },
    {
      "lang": "en",
      "text": "files allows us to make them less",
      "offset": 3755.92,
      "duration": 4.159
    },
    {
      "lang": "en",
      "text": "verbose, safer to change, and easier to",
      "offset": 3757.599,
      "duration": 5.361
    },
    {
      "lang": "en",
      "text": "update. Let's see how that's done.",
      "offset": 3760.079,
      "duration": 4.561
    },
    {
      "lang": "en",
      "text": "First, we will look at the ARC",
      "offset": 3762.96,
      "duration": 4.159
    },
    {
      "lang": "en",
      "text": "instruction. The arc instruction allows",
      "offset": 3764.64,
      "duration": 4.959
    },
    {
      "lang": "en",
      "text": "us to set variables inside a docker file",
      "offset": 3767.119,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "and then use that variable throughout",
      "offset": 3769.599,
      "duration": 4.561
    },
    {
      "lang": "en",
      "text": "the docker file. It is followed by a",
      "offset": 3771.359,
      "duration": 4.881
    },
    {
      "lang": "en",
      "text": "space, then the name of the variable we",
      "offset": 3774.16,
      "duration": 4.959
    },
    {
      "lang": "en",
      "text": "want to create, an equal sign, and the",
      "offset": 3776.24,
      "duration": 3.96
    },
    {
      "lang": "en",
      "text": "value of the",
      "offset": 3779.119,
      "duration": 3.521
    },
    {
      "lang": "en",
      "text": "variable. Later commands can then",
      "offset": 3780.2,
      "duration": 4.44
    },
    {
      "lang": "en",
      "text": "reference this variable using a dollar",
      "offset": 3782.64,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "sign followed by the variable name.",
      "offset": 3784.64,
      "duration": 5.6
    },
    {
      "lang": "en",
      "text": "However, it can only be used in the",
      "offset": 3787.76,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "Docker file. The variable won't be",
      "offset": 3790.24,
      "duration": 5.119
    },
    {
      "lang": "en",
      "text": "accessible after the image is built. In",
      "offset": 3792.64,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "other words, if you define a variable",
      "offset": 3795.359,
      "duration": 4.801
    },
    {
      "lang": "en",
      "text": "with arc in a docker file, build an",
      "offset": 3797.44,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "image from that docker file and then",
      "offset": 3800.16,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "start a container from that image, that",
      "offset": 3802,
      "duration": 5
    },
    {
      "lang": "en",
      "text": "variable will not exist inside the",
      "offset": 3804.559,
      "duration": 5.121
    },
    {
      "lang": "en",
      "text": "container. Typical use cases for the arc",
      "offset": 3807,
      "duration": 4.839
    },
    {
      "lang": "en",
      "text": "instruction are to define a version we",
      "offset": 3809.68,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "need in multiple places throughout the",
      "offset": 3811.839,
      "duration": 3.841
    },
    {
      "lang": "en",
      "text": "docker file. Like in the first example",
      "offset": 3813.44,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "on the slide, we specify a version of",
      "offset": 3815.68,
      "duration": 6.159
    },
    {
      "lang": "en",
      "text": "Python called bionic compiled for iuntu.",
      "offset": 3817.92,
      "duration": 6.399
    },
    {
      "lang": "en",
      "text": "Defining a pod to a project or user",
      "offset": 3821.839,
      "duration": 4.881
    },
    {
      "lang": "en",
      "text": "directory is also helpful as an arc.",
      "offset": 3824.319,
      "duration": 4.321
    },
    {
      "lang": "en",
      "text": "This allows us to make any instructions",
      "offset": 3826.72,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "using this pod less verbose and makes it",
      "offset": 3828.64,
      "duration": 5.6
    },
    {
      "lang": "en",
      "text": "more apparent at a glance that all files",
      "offset": 3831.76,
      "duration": 4.12
    },
    {
      "lang": "en",
      "text": "are going to the same",
      "offset": 3834.24,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "folder. The arc instruction can also be",
      "offset": 3835.88,
      "duration": 4.919
    },
    {
      "lang": "en",
      "text": "set in the docker build command, giving",
      "offset": 3838.64,
      "duration": 3.479
    },
    {
      "lang": "en",
      "text": "us even more",
      "offset": 3840.799,
      "duration": 3.681
    },
    {
      "lang": "en",
      "text": "flexibility. At the top of the slide,",
      "offset": 3842.119,
      "duration": 4.601
    },
    {
      "lang": "en",
      "text": "you see the same example Docker files as",
      "offset": 3844.48,
      "duration": 4.319
    },
    {
      "lang": "en",
      "text": "on the previous slide. By using the",
      "offset": 3846.72,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "build- arc flag when running docker",
      "offset": 3848.799,
      "duration": 4.721
    },
    {
      "lang": "en",
      "text": "build, we can set another value for the",
      "offset": 3851.119,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "project folder variable which overrides",
      "offset": 3853.52,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "the original value during that build.",
      "offset": 3855.839,
      "duration": 4.881
    },
    {
      "lang": "en",
      "text": "The second way to define variables in",
      "offset": 3858.88,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "docker files is by using the n",
      "offset": 3860.72,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "instruction. The syntax is identical to",
      "offset": 3862.64,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "the arc instruction. But unlike the arc",
      "offset": 3865.119,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "instruction, variables set with n are",
      "offset": 3867.2,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "still accessible after the image is",
      "offset": 3869.599,
      "duration": 4.881
    },
    {
      "lang": "en",
      "text": "built. While variables set with arc are",
      "offset": 3871.28,
      "duration": 4.799
    },
    {
      "lang": "en",
      "text": "used to change the behavior of docker",
      "offset": 3874.48,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "files during the build, variables set",
      "offset": 3876.079,
      "duration": 4.841
    },
    {
      "lang": "en",
      "text": "with n are used to change behavior at",
      "offset": 3878.24,
      "duration": 5.359
    },
    {
      "lang": "en",
      "text": "runtime. Typical use cases are setting",
      "offset": 3880.92,
      "duration": 4.919
    },
    {
      "lang": "en",
      "text": "variables used by applications when they",
      "offset": 3883.599,
      "duration": 4.401
    },
    {
      "lang": "en",
      "text": "are starting like database directories",
      "offset": 3885.839,
      "duration": 5.121
    },
    {
      "lang": "en",
      "text": "or users or setting an application to",
      "offset": 3888,
      "duration": 5.92
    },
    {
      "lang": "en",
      "text": "production or development mode. Unlike",
      "offset": 3890.96,
      "duration": 5.359
    },
    {
      "lang": "en",
      "text": "arc variables, it is not possible to",
      "offset": 3893.92,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "override n variables at buildtime.",
      "offset": 3896.319,
      "duration": 4.881
    },
    {
      "lang": "en",
      "text": "However, it is possible to overwrite n",
      "offset": 3898.64,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "variables when starting a container from",
      "offset": 3901.2,
      "duration": 4.879
    },
    {
      "lang": "en",
      "text": "an image. This can be done using the",
      "offset": 3903.039,
      "duration": 5.121
    },
    {
      "lang": "en",
      "text": "-ash parameter of the docker build",
      "offset": 3906.079,
      "duration": 4.401
    },
    {
      "lang": "en",
      "text": "command. For example, in the official",
      "offset": 3908.16,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "Postgress image, there are several n",
      "offset": 3910.48,
      "duration": 4.28
    },
    {
      "lang": "en",
      "text": "variables available to configure the",
      "offset": 3912.559,
      "duration": 5.681
    },
    {
      "lang": "en",
      "text": "container. Both and arc variables seem",
      "offset": 3914.76,
      "duration": 5.96
    },
    {
      "lang": "en",
      "text": "convenient for adding passwords or other",
      "offset": 3918.24,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "secrets to a docker image at build or",
      "offset": 3920.72,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "runtime. However, both are not secure to",
      "offset": 3922.64,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "use for secrets. Anyone can look at the",
      "offset": 3925.52,
      "duration": 4.559
    },
    {
      "lang": "en",
      "text": "variables defined in a Docker file after",
      "offset": 3928,
      "duration": 3.839
    },
    {
      "lang": "en",
      "text": "the image is built with the Docker",
      "offset": 3930.079,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "history command. This command shows all",
      "offset": 3931.839,
      "duration": 4.52
    },
    {
      "lang": "en",
      "text": "the steps that were done to build an",
      "offset": 3934.319,
      "duration": 5.681
    },
    {
      "lang": "en",
      "text": "image. If instead we pass variables at",
      "offset": 3936.359,
      "duration": 6.121
    },
    {
      "lang": "en",
      "text": "built or start time, they can be found",
      "offset": 3940,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "in the bash history of the host or",
      "offset": 3942.48,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "image. The bash history is a list of all",
      "offset": 3944.24,
      "duration": 6.16
    },
    {
      "lang": "en",
      "text": "shell commands executed by a user.",
      "offset": 3947.28,
      "duration": 5.519
    },
    {
      "lang": "en",
      "text": "Keep in mind that if we use secrets to",
      "offset": 3950.4,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "create our image without using more",
      "offset": 3952.799,
      "duration": 4.481
    },
    {
      "lang": "en",
      "text": "advanced techniques to hide them, they",
      "offset": 3954.799,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "will be shared with anybody we share the",
      "offset": 3957.28,
      "duration": 4.559
    },
    {
      "lang": "en",
      "text": "image with. Here is a summary of the new",
      "offset": 3959.119,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "commands and instructions you can refer",
      "offset": 3961.839,
      "duration": 4.041
    },
    {
      "lang": "en",
      "text": "back to when completing the",
      "offset": 3963.599,
      "duration": 4.561
    },
    {
      "lang": "en",
      "text": "exercises. Containers don't make",
      "offset": 3965.88,
      "duration": 4.84
    },
    {
      "lang": "en",
      "text": "everything automatically secure. Let's",
      "offset": 3968.16,
      "duration": 4.639
    },
    {
      "lang": "en",
      "text": "look at what security containers give us",
      "offset": 3970.72,
      "duration": 4.079
    },
    {
      "lang": "en",
      "text": "inherently and where we still need to be",
      "offset": 3972.799,
      "duration": 3.52
    },
    {
      "lang": "en",
      "text": "vigilant.",
      "offset": 3974.799,
      "duration": 3.921
    },
    {
      "lang": "en",
      "text": "Docker inherently provides more security",
      "offset": 3976.319,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "over running applications locally",
      "offset": 3978.72,
      "duration": 3.52
    },
    {
      "lang": "en",
      "text": "because there's an extra layer of",
      "offset": 3980.799,
      "duration": 3.921
    },
    {
      "lang": "en",
      "text": "isolation between the application and",
      "offset": 3982.24,
      "duration": 3.72
    },
    {
      "lang": "en",
      "text": "your operating",
      "offset": 3984.72,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "system. This makes it much safer to open",
      "offset": 3985.96,
      "duration": 5.159
    },
    {
      "lang": "en",
      "text": "application or archive from an unknown",
      "offset": 3988.88,
      "duration": 4.959
    },
    {
      "lang": "en",
      "text": "source in a container in comparison to",
      "offset": 3991.119,
      "duration": 4.601
    },
    {
      "lang": "en",
      "text": "doing the same on your local",
      "offset": 3993.839,
      "duration": 5.441
    },
    {
      "lang": "en",
      "text": "machine. However, that doesn't mean it",
      "offset": 3995.72,
      "duration": 6.2
    },
    {
      "lang": "en",
      "text": "is 100% safe to do so. A malicious",
      "offset": 3999.28,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "payload can escape the container's",
      "offset": 4001.92,
      "duration": 3.96
    },
    {
      "lang": "en",
      "text": "isolation and infect the",
      "offset": 4004,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "host. Attackers breaking out of a",
      "offset": 4005.88,
      "duration": 4.36
    },
    {
      "lang": "en",
      "text": "container to the host operating system",
      "offset": 4008.24,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "is the main risk of using containers.",
      "offset": 4010.24,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "Docker and other container providers",
      "offset": 4012.64,
      "duration": 4.719
    },
    {
      "lang": "en",
      "text": "spent extensive resources on making",
      "offset": 4015.2,
      "duration": 5.119
    },
    {
      "lang": "en",
      "text": "their containers as secure as possible.",
      "offset": 4017.359,
      "duration": 4.641
    },
    {
      "lang": "en",
      "text": "Additionally, there are several things",
      "offset": 4020.319,
      "duration": 4.641
    },
    {
      "lang": "en",
      "text": "we the creators and users of images and",
      "offset": 4022,
      "duration": 5.28
    },
    {
      "lang": "en",
      "text": "containers can do to make both more",
      "offset": 4024.96,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "secure.",
      "offset": 4027.28,
      "duration": 3.279
    },
    {
      "lang": "en",
      "text": "The safety measures we'll be discussing",
      "offset": 4028.72,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "next might seem like they won't do much",
      "offset": 4030.559,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "if we're just sharing images with",
      "offset": 4033.119,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "colleagues or using them to run",
      "offset": 4035.119,
      "duration": 5.361
    },
    {
      "lang": "en",
      "text": "workloads locally. However, a widespread",
      "offset": 4036.799,
      "duration": 6.24
    },
    {
      "lang": "en",
      "text": "use case for images is running them on",
      "offset": 4040.48,
      "duration": 5.16
    },
    {
      "lang": "en",
      "text": "remote machines and allowing external",
      "offset": 4043.039,
      "duration": 5.361
    },
    {
      "lang": "en",
      "text": "access. For example, to run a database",
      "offset": 4045.64,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "or a pipeline in a production",
      "offset": 4048.4,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "environment. It is in those scenarios",
      "offset": 4050.44,
      "duration": 3.879
    },
    {
      "lang": "en",
      "text": "that the following safety measures",
      "offset": 4052.799,
      "duration": 3.441
    },
    {
      "lang": "en",
      "text": "become critical.",
      "offset": 4054.319,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "The first step to creating a secure",
      "offset": 4056.24,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "image is choosing the right image to",
      "offset": 4058.079,
      "duration": 5.361
    },
    {
      "lang": "en",
      "text": "start from. Anybody on the internet can",
      "offset": 4060.64,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "provide images for us to use or build on",
      "offset": 4063.44,
      "duration": 5.84
    },
    {
      "lang": "en",
      "text": "top of. However, using images from an",
      "offset": 4066.16,
      "duration": 6.639
    },
    {
      "lang": "en",
      "text": "untrusted source is a security risk. The",
      "offset": 4069.28,
      "duration": 5.92
    },
    {
      "lang": "en",
      "text": "official DockerHub registry provides",
      "offset": 4072.799,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "thousands of images and allows the",
      "offset": 4075.2,
      "duration": 4.879
    },
    {
      "lang": "en",
      "text": "filtering of trusted content in three",
      "offset": 4077.839,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "different ways. All three trusted",
      "offset": 4080.079,
      "duration": 4.881
    },
    {
      "lang": "en",
      "text": "content filters will give us images we",
      "offset": 4082.559,
      "duration": 4.52
    },
    {
      "lang": "en",
      "text": "consider safe for most use",
      "offset": 4084.96,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "cases. Even images downloaded from the",
      "offset": 4087.079,
      "duration": 4.841
    },
    {
      "lang": "en",
      "text": "official DockerHub repository aren't",
      "offset": 4089.76,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "always up to date. Applications release",
      "offset": 4091.92,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "updates all the time and even operating",
      "offset": 4094.72,
      "duration": 4.479
    },
    {
      "lang": "en",
      "text": "system updates aren't incorporated into",
      "offset": 4096.96,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "images the minute of their release. In",
      "offset": 4099.199,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "the slides, you can see the extremely",
      "offset": 4102,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "popular Docker official images Ubuntu",
      "offset": 4104.159,
      "duration": 5.361
    },
    {
      "lang": "en",
      "text": "and Mariab which were updated two weeks",
      "offset": 4106.56,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "and a month ago. While it could be the",
      "offset": 4109.52,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "case no safety related updates have been",
      "offset": 4112,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "made to anything installed in these",
      "offset": 4113.92,
      "duration": 4.879
    },
    {
      "lang": "en",
      "text": "images since then, best practice is to",
      "offset": 4115.92,
      "duration": 4.799
    },
    {
      "lang": "en",
      "text": "update the software to its latest",
      "offset": 4118.799,
      "duration": 3.88
    },
    {
      "lang": "en",
      "text": "version in images",
      "offset": 4120.719,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "ourselves. What's better than ensuring",
      "offset": 4122.679,
      "duration": 4.441
    },
    {
      "lang": "en",
      "text": "all software in our images is updated",
      "offset": 4124.799,
      "duration": 4.801
    },
    {
      "lang": "en",
      "text": "having less of it. There is no safer",
      "offset": 4127.12,
      "duration": 4.44
    },
    {
      "lang": "en",
      "text": "piece of software than one we haven't",
      "offset": 4129.6,
      "duration": 5.119
    },
    {
      "lang": "en",
      "text": "installed. When creating a secure image,",
      "offset": 4131.56,
      "duration": 5.799
    },
    {
      "lang": "en",
      "text": "ensure you only install the software you",
      "offset": 4134.719,
      "duration": 5.761
    },
    {
      "lang": "en",
      "text": "need for its current use case. This also",
      "offset": 4137.359,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "means we'll have to keep less software",
      "offset": 4140.48,
      "duration": 3.319
    },
    {
      "lang": "en",
      "text": "up to",
      "offset": 4142.719,
      "duration": 3.681
    },
    {
      "lang": "en",
      "text": "date. All previous measures are of",
      "offset": 4143.799,
      "duration": 5.081
    },
    {
      "lang": "en",
      "text": "little use if you allow anybody who gets",
      "offset": 4146.4,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "access to a container to install",
      "offset": 4148.88,
      "duration": 5.68
    },
    {
      "lang": "en",
      "text": "anything they want. The solution is not",
      "offset": 4151.12,
      "duration": 6.159
    },
    {
      "lang": "en",
      "text": "to leave the user in our images as root.",
      "offset": 4154.56,
      "duration": 4.639
    },
    {
      "lang": "en",
      "text": "Often it is needed to install and",
      "offset": 4157.279,
      "duration": 4.161
    },
    {
      "lang": "en",
      "text": "configure applications as root. After",
      "offset": 4159.199,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "that the user in our image should be",
      "offset": 4161.44,
      "duration": 5.08
    },
    {
      "lang": "en",
      "text": "changed to a user with fewer",
      "offset": 4163.759,
      "duration": 5.92
    },
    {
      "lang": "en",
      "text": "permissions. If for example we change",
      "offset": 4166.52,
      "duration": 5.639
    },
    {
      "lang": "en",
      "text": "the user before the cmd instruction that",
      "offset": 4169.679,
      "duration": 5.201
    },
    {
      "lang": "en",
      "text": "starts our pipeline, we ensure that any",
      "offset": 4172.159,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "malicious code in the pipeline does not",
      "offset": 4174.88,
      "duration": 5
    },
    {
      "lang": "en",
      "text": "have root access in our",
      "offset": 4177.679,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "container. Keeping these best practices",
      "offset": 4179.88,
      "duration": 4.359
    },
    {
      "lang": "en",
      "text": "in mind would put you on the right track",
      "offset": 4182.159,
      "duration": 5.361
    },
    {
      "lang": "en",
      "text": "to safely working with Docker. Let's Hi",
      "offset": 4184.239,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "and welcome to the course. I'm Frank,",
      "offset": 4187.52,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "your instructor in this introductory",
      "offset": 4189.759,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "course about Kubernetes. Together we",
      "offset": 4191.44,
      "duration": 3.759
    },
    {
      "lang": "en",
      "text": "will have an exciting journey through",
      "offset": 4193.759,
      "duration": 3.001
    },
    {
      "lang": "en",
      "text": "the world of container",
      "offset": 4195.199,
      "duration": 3.681
    },
    {
      "lang": "en",
      "text": "orchestration. Before we dive into the",
      "offset": 4196.76,
      "duration": 3.959
    },
    {
      "lang": "en",
      "text": "subject, let me briefly introduce",
      "offset": 4198.88,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "myself. I have many years of experience",
      "offset": 4200.719,
      "duration": 4.801
    },
    {
      "lang": "en",
      "text": "as a platform architect and have done a",
      "offset": 4203.04,
      "duration": 4.159
    },
    {
      "lang": "en",
      "text": "lot of projects in different industry",
      "offset": 4205.52,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "sectors. I have been helping to",
      "offset": 4207.199,
      "duration": 4.161
    },
    {
      "lang": "en",
      "text": "implement software using Kubernetes",
      "offset": 4209.52,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "since 2018 and I'm typically involved in",
      "offset": 4211.36,
      "duration": 5.92
    },
    {
      "lang": "en",
      "text": "projects using the software stacks and",
      "offset": 4214.96,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "cloud providers shown on the lower",
      "offset": 4217.28,
      "duration": 5
    },
    {
      "lang": "en",
      "text": "right. So without further ado, let's get",
      "offset": 4218.96,
      "duration": 5.84
    },
    {
      "lang": "en",
      "text": "started to understand the value and",
      "offset": 4222.28,
      "duration": 4.439
    },
    {
      "lang": "en",
      "text": "positioning of Kubernetes in today's",
      "offset": 4224.8,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "software landscape. Let us briefly",
      "offset": 4226.719,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "revisit how software is designed today.",
      "offset": 4228.56,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "Historically software was developed as",
      "offset": 4231.679,
      "duration": 5.281
    },
    {
      "lang": "en",
      "text": "monolithic applications. These are large",
      "offset": 4233.92,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "self-contained units ready to operate",
      "offset": 4236.96,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "independently from other systems. While",
      "offset": 4239.28,
      "duration": 4.959
    },
    {
      "lang": "en",
      "text": "this approach has its merits, it also",
      "offset": 4242.08,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "presents significant challenges.",
      "offset": 4244.239,
      "duration": 4.401
    },
    {
      "lang": "en",
      "text": "Monolithic software can be difficult to",
      "offset": 4246.56,
      "duration": 4.639
    },
    {
      "lang": "en",
      "text": "maintain an update leading to prolonged",
      "offset": 4248.64,
      "duration": 5.92
    },
    {
      "lang": "en",
      "text": "release cycles. In contrast, modern",
      "offset": 4251.199,
      "duration": 5.361
    },
    {
      "lang": "en",
      "text": "software development has shifted towards",
      "offset": 4254.56,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "a more modular approach utilizing what",
      "offset": 4256.56,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "is known as microservices.",
      "offset": 4259.44,
      "duration": 5.279
    },
    {
      "lang": "en",
      "text": "These are smaller independent components",
      "offset": 4261.6,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "that make up an application. This",
      "offset": 4264.719,
      "duration": 4.081
    },
    {
      "lang": "en",
      "text": "architecture greatly simplifies",
      "offset": 4267.04,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "maintenance and updates resulting in",
      "offset": 4268.8,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "shorter release cycles and the ability",
      "offset": 4270.96,
      "duration": 5.68
    },
    {
      "lang": "en",
      "text": "to deploy new features more rapidly.",
      "offset": 4273.199,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "Additionally, this modular design is",
      "offset": 4276.64,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "exceptionally well suited for cloud",
      "offset": 4278.719,
      "duration": 3.161
    },
    {
      "lang": "en",
      "text": "computing",
      "offset": 4280.48,
      "duration": 3.36
    },
    {
      "lang": "en",
      "text": "environments. Nowadays, modern",
      "offset": 4281.88,
      "duration": 3.64
    },
    {
      "lang": "en",
      "text": "applications consist of tens, hundreds,",
      "offset": 4283.84,
      "duration": 3.12
    },
    {
      "lang": "en",
      "text": "if not thousands of these building",
      "offset": 4285.52,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "blocks. This introduces a crucial",
      "offset": 4286.96,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "question. How do we deploy, maintain and",
      "offset": 4289.36,
      "duration": 6.359
    },
    {
      "lang": "en",
      "text": "update them? The answer is of course via",
      "offset": 4292.32,
      "duration": 5.839
    },
    {
      "lang": "en",
      "text": "containers. Each component is deployed",
      "offset": 4295.719,
      "duration": 5.081
    },
    {
      "lang": "en",
      "text": "or delivered in its own container which",
      "offset": 4298.159,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "includes all the prerequisites needed to",
      "offset": 4300.8,
      "duration": 5.359
    },
    {
      "lang": "en",
      "text": "run that component. However, another",
      "offset": 4303.199,
      "duration": 5.361
    },
    {
      "lang": "en",
      "text": "challenge emerges. How do we manage all",
      "offset": 4306.159,
      "duration": 4.481
    },
    {
      "lang": "en",
      "text": "these containers, ensure they operate",
      "offset": 4308.56,
      "duration": 4.2
    },
    {
      "lang": "en",
      "text": "correctly, and keep their versions up to",
      "offset": 4310.64,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "date? This is precisely the role",
      "offset": 4312.76,
      "duration": 5.24
    },
    {
      "lang": "en",
      "text": "Kubernetes plays.",
      "offset": 4315.76,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "Kubernetes is what we call these days",
      "offset": 4318,
      "duration": 4.719
    },
    {
      "lang": "en",
      "text": "cloud native. Let us look into this in",
      "offset": 4320.08,
      "duration": 5.76
    },
    {
      "lang": "en",
      "text": "more detail. Cloud native is a way to",
      "offset": 4322.719,
      "duration": 5.681
    },
    {
      "lang": "en",
      "text": "build, deploy and manage software in",
      "offset": 4325.84,
      "duration": 5.24
    },
    {
      "lang": "en",
      "text": "cloud environments. Clouds provide",
      "offset": 4328.4,
      "duration": 5.4
    },
    {
      "lang": "en",
      "text": "infrastructure like virtual machines for",
      "offset": 4331.08,
      "duration": 5.24
    },
    {
      "lang": "en",
      "text": "computing networks to connect these",
      "offset": 4333.8,
      "duration": 5.24
    },
    {
      "lang": "en",
      "text": "machines and of course storage that all",
      "offset": 4336.32,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "machines can access concurrently.",
      "offset": 4339.04,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "All of this infrastructure can be",
      "offset": 4341.52,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "scaled, which means that we can lease",
      "offset": 4343.28,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "more or less of each component",
      "offset": 4345.76,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "independently of each other. For",
      "offset": 4347.679,
      "duration": 4.721
    },
    {
      "lang": "en",
      "text": "example, if we currently use three",
      "offset": 4349.92,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "virtual machines to run our application,",
      "offset": 4352.4,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "we can add two more machines and use",
      "offset": 4354.8,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "them immediately. We can also purchase",
      "offset": 4357.28,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "more storage for our application without",
      "offset": 4360,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "increasing the number of virtual",
      "offset": 4362.64,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "machines. Now a cloudnative application",
      "offset": 4364,
      "duration": 5.92
    },
    {
      "lang": "en",
      "text": "has been designed to use the scalable",
      "offset": 4367.44,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "infrastructure efficiently. One way to",
      "offset": 4369.92,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "achieve this is using containerization",
      "offset": 4372.48,
      "duration": 5.32
    },
    {
      "lang": "en",
      "text": "and kubernetes. Kubernetes is",
      "offset": 4374.88,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "cloudnative which makes deploying and",
      "offset": 4377.8,
      "duration": 5.32
    },
    {
      "lang": "en",
      "text": "managing our application very simple. It",
      "offset": 4380.4,
      "duration": 5.4
    },
    {
      "lang": "en",
      "text": "also enables easy scaling of",
      "offset": 4383.12,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "applications. Kubernetes is an",
      "offset": 4385.8,
      "duration": 5
    },
    {
      "lang": "en",
      "text": "open-source project invented by Google.",
      "offset": 4387.92,
      "duration": 5.279
    },
    {
      "lang": "en",
      "text": "Everyone can download and use it.",
      "offset": 4390.8,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "However, installing a functional",
      "offset": 4393.199,
      "duration": 4.881
    },
    {
      "lang": "en",
      "text": "Kubernetes may not be easy as it",
      "offset": 4395.28,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "involves a lot of knowledge about",
      "offset": 4398.08,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "distributed computing. While it is not",
      "offset": 4399.84,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "easy to install, almost all cloud",
      "offset": 4402.56,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "providers offer Kubernetes as a managed",
      "offset": 4404.96,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "service which we can use easily. By the",
      "offset": 4406.96,
      "duration": 6.4
    },
    {
      "lang": "en",
      "text": "way, Kubernetes is often abbreviated as",
      "offset": 4410.4,
      "duration": 5.96
    },
    {
      "lang": "en",
      "text": "K8s.",
      "offset": 4413.36,
      "duration": 3
    },
    {
      "lang": "en",
      "text": "After the recap about modern software",
      "offset": 4416.4,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "design, let us dig deeper into the",
      "offset": 4418.08,
      "duration": 4.599
    },
    {
      "lang": "en",
      "text": "relationship between Docker and",
      "offset": 4420.08,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "Kubernetes. Remember, these days typical",
      "offset": 4422.679,
      "duration": 3.881
    },
    {
      "lang": "en",
      "text": "software stacks consist of many",
      "offset": 4425.04,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "individual containers. Numbers can reach",
      "offset": 4426.56,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "up to tens, hundreds, sometimes",
      "offset": 4428.88,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "thousands of individual containers. Now,",
      "offset": 4430.64,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "managing all these containers is known",
      "offset": 4433.36,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "as container orchestration. Nowadays we",
      "offset": 4434.88,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "can choose from many container",
      "offset": 4437.92,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "orchestration tools like docker compose,",
      "offset": 4439.28,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "docker swarm, apache messos, hashi",
      "offset": 4441.92,
      "duration": 6.239
    },
    {
      "lang": "en",
      "text": "corpse nomad and of course kubernetes.",
      "offset": 4444.8,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "Kubernetes has gained a lot of",
      "offset": 4448.159,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "popularity in recent years and it",
      "offset": 4449.76,
      "duration": 4.479
    },
    {
      "lang": "en",
      "text": "dominates the market right now. There",
      "offset": 4452.159,
      "duration": 3.841
    },
    {
      "lang": "en",
      "text": "are many reasons for this and we will",
      "offset": 4454.239,
      "duration": 4.081
    },
    {
      "lang": "en",
      "text": "learn about this in a second but let us",
      "offset": 4456,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "mention a primary reason right now.",
      "offset": 4458.32,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "Kubernetes is available for all",
      "offset": 4460.8,
      "duration": 3.919
    },
    {
      "lang": "en",
      "text": "important environments. You can use it",
      "offset": 4462.64,
      "duration": 5.68
    },
    {
      "lang": "en",
      "text": "in any cloud but also on prem or even in",
      "offset": 4464.719,
      "duration": 6.161
    },
    {
      "lang": "en",
      "text": "hybrid scenarios. That makes it an",
      "offset": 4468.32,
      "duration": 5.24
    },
    {
      "lang": "en",
      "text": "excellent solution for deploying your",
      "offset": 4470.88,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "software. So why has Kubernetes gained",
      "offset": 4473.56,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "so much",
      "offset": 4476.4,
      "duration": 3.279
    },
    {
      "lang": "en",
      "text": "popularity? Well, it makes solving the",
      "offset": 4477.4,
      "duration": 3.64
    },
    {
      "lang": "en",
      "text": "typical challenges of container",
      "offset": 4479.679,
      "duration": 3.921
    },
    {
      "lang": "en",
      "text": "orchestration relatively easy. These",
      "offset": 4481.04,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "challenges are when to deploy your",
      "offset": 4483.6,
      "duration": 3.96
    },
    {
      "lang": "en",
      "text": "containers and on which physical",
      "offset": 4485.76,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "hardware. How to enable networking for",
      "offset": 4487.56,
      "duration": 4.84
    },
    {
      "lang": "en",
      "text": "container communication. what to do when",
      "offset": 4490,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "a container stops working, how to make",
      "offset": 4492.4,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "sure that your containers are started",
      "offset": 4494.64,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "and stopped in the right order, or how",
      "offset": 4496,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "to attach storage. To solve all these",
      "offset": 4498.32,
      "duration": 4.879
    },
    {
      "lang": "en",
      "text": "challenges, Kubernetes interacts with",
      "offset": 4501.04,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "so-called container engines that live on",
      "offset": 4503.199,
      "duration": 4.401
    },
    {
      "lang": "en",
      "text": "each computer you want to run your",
      "offset": 4505.92,
      "duration": 4.239
    },
    {
      "lang": "en",
      "text": "containers on. Kubernetes tells the",
      "offset": 4507.6,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "container engines to start or stop your",
      "offset": 4510.159,
      "duration": 3.761
    },
    {
      "lang": "en",
      "text": "containers in the correct order and in",
      "offset": 4511.92,
      "duration": 4.239
    },
    {
      "lang": "en",
      "text": "the right place. You will learn a lot",
      "offset": 4513.92,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "more about this architecture in the next",
      "offset": 4516.159,
      "duration": 3.201
    },
    {
      "lang": "en",
      "text": "lesson.",
      "offset": 4517.84,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "Docker is indeed the container engine of",
      "offset": 4519.36,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "choice. In many cases, Kubernetes",
      "offset": 4521.44,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "interacts with Docker as the container",
      "offset": 4523.52,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "engine and will instruct it to start or",
      "offset": 4525.04,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "stop your containers. We typically use",
      "offset": 4527.76,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "Docker to create and update Docker",
      "offset": 4530.56,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "images and to create containers from",
      "offset": 4532.08,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "these images. Kubernetes will never",
      "offset": 4534.32,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "create Docker images for you. That is",
      "offset": 4537.12,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "the job of Docker. Kubernetes is an",
      "offset": 4539.28,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "application on top of Docker that",
      "offset": 4541.76,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "orchestrates all your containers.",
      "offset": 4543.679,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "Before getting deeper into the",
      "offset": 4546.88,
      "duration": 3.44
    },
    {
      "lang": "en",
      "text": "architecture of Kubernetes, let's get a",
      "offset": 4548.239,
      "duration": 3.96
    },
    {
      "lang": "en",
      "text": "little more interactive with the next",
      "offset": 4550.32,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "exercise. To prepare that, let's talk",
      "offset": 4552.199,
      "duration": 4.921
    },
    {
      "lang": "en",
      "text": "about how we interact with Kubernetes,",
      "offset": 4554.719,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "especially how we use the command line",
      "offset": 4557.12,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "tool cubectl or how we like to pronounce",
      "offset": 4559.199,
      "duration": 6.081
    },
    {
      "lang": "en",
      "text": "it, cube cuddle. One way to define the",
      "offset": 4562.08,
      "duration": 5.119
    },
    {
      "lang": "en",
      "text": "containers we want to run on Kubernetes",
      "offset": 4565.28,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "are manifests. These are YAML files",
      "offset": 4567.199,
      "duration": 5.361
    },
    {
      "lang": "en",
      "text": "which describe the containers you want,",
      "offset": 4570.08,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "how to configure them, where they should",
      "offset": 4572.56,
      "duration": 5.119
    },
    {
      "lang": "en",
      "text": "run, and a lot more. On the left, you",
      "offset": 4574.96,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "can see an example of such a manifest.",
      "offset": 4577.679,
      "duration": 3.841
    },
    {
      "lang": "en",
      "text": "Don't worry, we will get into the",
      "offset": 4579.92,
      "duration": 4.759
    },
    {
      "lang": "en",
      "text": "details later. These manifests are",
      "offset": 4581.52,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "declarative, which means you describe",
      "offset": 4584.679,
      "duration": 4.921
    },
    {
      "lang": "en",
      "text": "what you want or in other words, the",
      "offset": 4587.04,
      "duration": 5.32
    },
    {
      "lang": "en",
      "text": "state you want to achieve. They are not",
      "offset": 4589.6,
      "duration": 5.84
    },
    {
      "lang": "en",
      "text": "imperative. You do not describe how to",
      "offset": 4592.36,
      "duration": 5.64
    },
    {
      "lang": "en",
      "text": "achieve that state. We will learn a lot",
      "offset": 4595.44,
      "duration": 3.759
    },
    {
      "lang": "en",
      "text": "more about the architecture of",
      "offset": 4598,
      "duration": 3.36
    },
    {
      "lang": "en",
      "text": "Kubernetes later on. But let us",
      "offset": 4599.199,
      "duration": 4.721
    },
    {
      "lang": "en",
      "text": "introduce cube cuddle already here. Cube",
      "offset": 4601.36,
      "duration": 4.319
    },
    {
      "lang": "en",
      "text": "cuddle is a command line tool to",
      "offset": 4603.92,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "interact with kubernetes that comes with",
      "offset": 4605.679,
      "duration": 4.881
    },
    {
      "lang": "en",
      "text": "many commands and options. It reaches",
      "offset": 4607.92,
      "duration": 5.84
    },
    {
      "lang": "en",
      "text": "out to the kubernetes API, sends our",
      "offset": 4610.56,
      "duration": 6
    },
    {
      "lang": "en",
      "text": "manifests to kubernetes and kubernetes",
      "offset": 4613.76,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "will then compute what to do in order to",
      "offset": 4616.56,
      "duration": 4.639
    },
    {
      "lang": "en",
      "text": "achieve the state we want.",
      "offset": 4618.56,
      "duration": 5.119
    },
    {
      "lang": "en",
      "text": "Having explored Kubernetes value, let's",
      "offset": 4621.199,
      "duration": 5.161
    },
    {
      "lang": "en",
      "text": "dive into the core components of its",
      "offset": 4623.679,
      "duration": 4.881
    },
    {
      "lang": "en",
      "text": "architecture. Kubernetes is built from",
      "offset": 4626.36,
      "duration": 4.6
    },
    {
      "lang": "en",
      "text": "many elements, let's cover the most",
      "offset": 4628.56,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "important ones. The largest entity in",
      "offset": 4630.96,
      "duration": 5.08
    },
    {
      "lang": "en",
      "text": "the Kubernetes world are so-called",
      "offset": 4634.08,
      "duration": 5.119
    },
    {
      "lang": "en",
      "text": "clusters with their control planes.",
      "offset": 4636.04,
      "duration": 6.52
    },
    {
      "lang": "en",
      "text": "Clusters are built from nodes and pots",
      "offset": 4639.199,
      "duration": 6.321
    },
    {
      "lang": "en",
      "text": "run on nodes. We will also cover",
      "offset": 4642.56,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "services which are used to establish",
      "offset": 4645.52,
      "duration": 3.56
    },
    {
      "lang": "en",
      "text": "network",
      "offset": 4647.92,
      "duration": 3.36
    },
    {
      "lang": "en",
      "text": "connectivity. A Kubernetes cluster",
      "offset": 4649.08,
      "duration": 4.119
    },
    {
      "lang": "en",
      "text": "consists of network connected computers",
      "offset": 4651.28,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "known as nodes. These nodes can range",
      "offset": 4653.199,
      "duration": 5.121
    },
    {
      "lang": "en",
      "text": "from servers in a data center or virtual",
      "offset": 4655.679,
      "duration": 5.121
    },
    {
      "lang": "en",
      "text": "machines to simpler devices like laptops",
      "offset": 4658.32,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "or even Raspberry Pies. Each node is",
      "offset": 4660.8,
      "duration": 5.6
    },
    {
      "lang": "en",
      "text": "equipped with CPUs, memory, local",
      "offset": 4663.84,
      "duration": 4.879
    },
    {
      "lang": "en",
      "text": "storage and potentially specialized",
      "offset": 4666.4,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "hardware like GPUs. In the Kubernetes",
      "offset": 4668.719,
      "duration": 4.721
    },
    {
      "lang": "en",
      "text": "world, we install a so-called control",
      "offset": 4671.92,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "plane. somewhere in our cluster. We will",
      "offset": 4673.44,
      "duration": 4.759
    },
    {
      "lang": "en",
      "text": "not get into the details of this control",
      "offset": 4676.32,
      "duration": 5.359
    },
    {
      "lang": "en",
      "text": "plane, but remember the control plane",
      "offset": 4678.199,
      "duration": 6.361
    },
    {
      "lang": "en",
      "text": "manages our nodes. It makes sure that",
      "offset": 4681.679,
      "duration": 4.721
    },
    {
      "lang": "en",
      "text": "they fulfill the requirements to",
      "offset": 4684.56,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "participate in our cluster. Kubernetes",
      "offset": 4686.4,
      "duration": 6.08
    },
    {
      "lang": "en",
      "text": "clusters are scalable, ranging from",
      "offset": 4689.6,
      "duration": 6.48
    },
    {
      "lang": "en",
      "text": "small setups of one to three nodes to",
      "offset": 4692.48,
      "duration": 6.88
    },
    {
      "lang": "en",
      "text": "extensive networks of hundreds or even",
      "offset": 4696.08,
      "duration": 5.76
    },
    {
      "lang": "en",
      "text": "thousands of nodes. The nodes of our",
      "offset": 4699.36,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "cluster typically run some version of",
      "offset": 4701.84,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "Linux and a container engine. Nodes are",
      "offset": 4703.36,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "also called worker machines. They run",
      "offset": 4705.84,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "the containers we want to schedule.",
      "offset": 4707.76,
      "duration": 5.32
    },
    {
      "lang": "en",
      "text": "Nodes run the so-called cubernetus",
      "offset": 4710.64,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "cublet. This agent lets our containers",
      "offset": 4713.08,
      "duration": 5.32
    },
    {
      "lang": "en",
      "text": "run in so-called pods and we will learn",
      "offset": 4715.84,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "about these next. By the way, we can add",
      "offset": 4718.4,
      "duration": 5.759
    },
    {
      "lang": "en",
      "text": "or remove nodes from and to our",
      "offset": 4721.36,
      "duration": 6.08
    },
    {
      "lang": "en",
      "text": "Kubernetes cluster at any point in time",
      "offset": 4724.159,
      "duration": 6.121
    },
    {
      "lang": "en",
      "text": "without any downtimes.",
      "offset": 4727.44,
      "duration": 6.32
    },
    {
      "lang": "en",
      "text": "Cool. Now let's talk about ports. A port",
      "offset": 4730.28,
      "duration": 5.24
    },
    {
      "lang": "en",
      "text": "is the smallest computing unit we can",
      "offset": 4733.76,
      "duration": 4.479
    },
    {
      "lang": "en",
      "text": "deploy in Kubernetes. A port is a set of",
      "offset": 4735.52,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "one or more containers. For example,",
      "offset": 4738.239,
      "duration": 4.881
    },
    {
      "lang": "en",
      "text": "Docker containers. The containers of a",
      "offset": 4740.48,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "port belong together. And for that",
      "offset": 4743.12,
      "duration": 4.36
    },
    {
      "lang": "en",
      "text": "reason, they are always deployed",
      "offset": 4745.04,
      "duration": 5.96
    },
    {
      "lang": "en",
      "text": "together. They share local storage and",
      "offset": 4747.48,
      "duration": 6.92
    },
    {
      "lang": "en",
      "text": "network. Remember by design pots are",
      "offset": 4751,
      "duration": 6.12
    },
    {
      "lang": "en",
      "text": "what we call ephemeral.",
      "offset": 4754.4,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "That means they live only for a",
      "offset": 4757.12,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "relatively short time and they can and",
      "offset": 4759.04,
      "duration": 5.679
    },
    {
      "lang": "en",
      "text": "will be terminated and recreated on",
      "offset": 4761.76,
      "duration": 6.56
    },
    {
      "lang": "en",
      "text": "other nodes at any point in time. The",
      "offset": 4764.719,
      "duration": 6.561
    },
    {
      "lang": "en",
      "text": "port's ephemeral nature being terminated",
      "offset": 4768.32,
      "duration": 6.12
    },
    {
      "lang": "en",
      "text": "and recreated frequently might seem",
      "offset": 4771.28,
      "duration": 5.32
    },
    {
      "lang": "en",
      "text": "counterintuitive regarding",
      "offset": 4774.44,
      "duration": 5.16
    },
    {
      "lang": "en",
      "text": "stability. However, this design grants",
      "offset": 4776.6,
      "duration": 5.079
    },
    {
      "lang": "en",
      "text": "Kubernetes the flexibility to manage",
      "offset": 4779.6,
      "duration": 5.119
    },
    {
      "lang": "en",
      "text": "incidents efficiently, enhancing overall",
      "offset": 4781.679,
      "duration": 6.081
    },
    {
      "lang": "en",
      "text": "application reliability.",
      "offset": 4784.719,
      "duration": 5.321
    },
    {
      "lang": "en",
      "text": "Lastly, let's talk about Kubernetes",
      "offset": 4787.76,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "services. A service is a resource to",
      "offset": 4790.04,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "expose network",
      "offset": 4792.4,
      "duration": 3.759
    },
    {
      "lang": "en",
      "text": "connectivity. When we want to connect to",
      "offset": 4793.96,
      "duration": 4.6
    },
    {
      "lang": "en",
      "text": "our pod or when we want to establish",
      "offset": 4796.159,
      "duration": 4.881
    },
    {
      "lang": "en",
      "text": "communication between pods, we need to",
      "offset": 4798.56,
      "duration": 5.119
    },
    {
      "lang": "en",
      "text": "deploy such a service. The reason for",
      "offset": 4801.04,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "this comes from the ephemeral nature of",
      "offset": 4803.679,
      "duration": 5.721
    },
    {
      "lang": "en",
      "text": "the pods. Each pod has its own unique IP",
      "offset": 4805.76,
      "duration": 6.479
    },
    {
      "lang": "en",
      "text": "address which changes anytime our pod",
      "offset": 4809.4,
      "duration": 6.319
    },
    {
      "lang": "en",
      "text": "gets redeployed. Now services are not",
      "offset": 4812.239,
      "duration": 5.881
    },
    {
      "lang": "en",
      "text": "ephemeral. They offer stable",
      "offset": 4815.719,
      "duration": 4.281
    },
    {
      "lang": "en",
      "text": "connectivity. In the picture on the",
      "offset": 4818.12,
      "duration": 4.44
    },
    {
      "lang": "en",
      "text": "left, two services have been deployed.",
      "offset": 4820,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "Service number one has connected all the",
      "offset": 4822.56,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "gray pots to it. So whenever we call",
      "offset": 4825.36,
      "duration": 5.799
    },
    {
      "lang": "en",
      "text": "that service, one of the gray pots will",
      "offset": 4827.92,
      "duration": 5.68
    },
    {
      "lang": "en",
      "text": "respond. Service number two is connected",
      "offset": 4831.159,
      "duration": 5.321
    },
    {
      "lang": "en",
      "text": "to the purple pods. So calling that",
      "offset": 4833.6,
      "duration": 6
    },
    {
      "lang": "en",
      "text": "service gives us a response from one of",
      "offset": 4836.48,
      "duration": 5.679
    },
    {
      "lang": "en",
      "text": "these three pots.",
      "offset": 4839.6,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "Now, here's just a short cheat sheet for",
      "offset": 4842.159,
      "duration": 4.601
    },
    {
      "lang": "en",
      "text": "what we have",
      "offset": 4844.96,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "discussed. Welcome back. Now, we will",
      "offset": 4846.76,
      "duration": 5.08
    },
    {
      "lang": "en",
      "text": "learn how to deploy stateless",
      "offset": 4850.08,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "applications using Kubernetes. Before",
      "offset": 4851.84,
      "duration": 5.359
    },
    {
      "lang": "en",
      "text": "doing so, we will learn more about cube",
      "offset": 4854.32,
      "duration": 4.359
    },
    {
      "lang": "en",
      "text": "cuddle and",
      "offset": 4857.199,
      "duration": 3.841
    },
    {
      "lang": "en",
      "text": "manifests. As we already know, cube",
      "offset": 4858.679,
      "duration": 4.121
    },
    {
      "lang": "en",
      "text": "cuddle is the main tool for interacting",
      "offset": 4861.04,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "with Kubernetes. Here are the important",
      "offset": 4862.8,
      "duration": 5.359
    },
    {
      "lang": "en",
      "text": "cube cuddle commands we will use. We can",
      "offset": 4865.44,
      "duration": 5.6
    },
    {
      "lang": "en",
      "text": "create and change objects such as pots",
      "offset": 4868.159,
      "duration": 5.761
    },
    {
      "lang": "en",
      "text": "or services in Kubernetes using create",
      "offset": 4871.04,
      "duration": 6.36
    },
    {
      "lang": "en",
      "text": "and apply using the command line option",
      "offset": 4873.92,
      "duration": 8.319
    },
    {
      "lang": "en",
      "text": "-f which is short for file. We can see a",
      "offset": 4877.4,
      "duration": 8
    },
    {
      "lang": "en",
      "text": "summary of objects by using the get",
      "offset": 4882.239,
      "duration": 5.281
    },
    {
      "lang": "en",
      "text": "command. Detailed information is",
      "offset": 4885.4,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "available via the command",
      "offset": 4887.52,
      "duration": 4.639
    },
    {
      "lang": "en",
      "text": "describe. Cube cuttle is also a great",
      "offset": 4889.88,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "tool for monitoring the state of",
      "offset": 4892.159,
      "duration": 4.961
    },
    {
      "lang": "en",
      "text": "Kubernetes. It comes with extensive help",
      "offset": 4893.88,
      "duration": 7.359
    },
    {
      "lang": "en",
      "text": "which is available via the command line",
      "offset": 4897.12,
      "duration": 6.4
    },
    {
      "lang": "en",
      "text": "switch-help. Manifests are declarations",
      "offset": 4901.239,
      "duration": 5
    },
    {
      "lang": "en",
      "text": "that come in YAML or in JSON format. On",
      "offset": 4903.52,
      "duration": 4.159
    },
    {
      "lang": "en",
      "text": "the left hand side, we can see an",
      "offset": 4906.239,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "example of a YAML manifest. There are",
      "offset": 4907.679,
      "duration": 5.441
    },
    {
      "lang": "en",
      "text": "two important sections metadata with",
      "offset": 4910.159,
      "duration": 6.161
    },
    {
      "lang": "en",
      "text": "essential meta information and spec to",
      "offset": 4913.12,
      "duration": 5.079
    },
    {
      "lang": "en",
      "text": "declare object",
      "offset": 4916.32,
      "duration": 3.919
    },
    {
      "lang": "en",
      "text": "specifications. These sections can be",
      "offset": 4918.199,
      "duration": 4.52
    },
    {
      "lang": "en",
      "text": "quite deep depending on what is being",
      "offset": 4920.239,
      "duration": 5.521
    },
    {
      "lang": "en",
      "text": "declared. The manifest shown here is",
      "offset": 4922.719,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "complete and fully working. It would",
      "offset": 4925.76,
      "duration": 5.84
    },
    {
      "lang": "en",
      "text": "create five replicas of engine X, a",
      "offset": 4928.159,
      "duration": 6.241
    },
    {
      "lang": "en",
      "text": "well-known web server. Let us explore",
      "offset": 4931.6,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "how we deploy our first application in",
      "offset": 4934.4,
      "duration": 4.68
    },
    {
      "lang": "en",
      "text": "Kubernetes, specifically a stateless",
      "offset": 4936.4,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "application. Stateless applications are",
      "offset": 4939.08,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "a general concept and not specific to",
      "offset": 4941.44,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "Kubernetes, but they fit ideally into",
      "offset": 4943.8,
      "duration": 4.919
    },
    {
      "lang": "en",
      "text": "Kubernetes architecture.",
      "offset": 4946.56,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "Saveless applications do not save any",
      "offset": 4948.719,
      "duration": 5
    },
    {
      "lang": "en",
      "text": "internal state or context of processed",
      "offset": 4950.96,
      "duration": 5.279
    },
    {
      "lang": "en",
      "text": "data. This means that they don't",
      "offset": 4953.719,
      "duration": 5.48
    },
    {
      "lang": "en",
      "text": "remember any previous activity or data",
      "offset": 4956.239,
      "duration": 5.92
    },
    {
      "lang": "en",
      "text": "they've handled. If such an application",
      "offset": 4959.199,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "gets interrupted or stopped, a new",
      "offset": 4962.159,
      "duration": 5.321
    },
    {
      "lang": "en",
      "text": "replica is created and can start working",
      "offset": 4964.639,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "immediately. To give an example,",
      "offset": 4967.48,
      "duration": 3.88
    },
    {
      "lang": "en",
      "text": "consider an application that queries a",
      "offset": 4969.679,
      "duration": 5.441
    },
    {
      "lang": "en",
      "text": "database. Each new query is unrelated to",
      "offset": 4971.36,
      "duration": 6.72
    },
    {
      "lang": "en",
      "text": "the previous query. So no context or",
      "offset": 4975.12,
      "duration": 6.079
    },
    {
      "lang": "en",
      "text": "history is needed. In Kubernetes,",
      "offset": 4978.08,
      "duration": 5.119
    },
    {
      "lang": "en",
      "text": "stateless applications can be realized",
      "offset": 4981.199,
      "duration": 4.281
    },
    {
      "lang": "en",
      "text": "easily with Kubernetes",
      "offset": 4983.199,
      "duration": 4.881
    },
    {
      "lang": "en",
      "text": "deployments. Here you can see a sample",
      "offset": 4985.48,
      "duration": 5.4
    },
    {
      "lang": "en",
      "text": "manifest for such a deployment. Let us",
      "offset": 4988.08,
      "duration": 4.559
    },
    {
      "lang": "en",
      "text": "go through the individual sections of",
      "offset": 4990.88,
      "duration": 2.6
    },
    {
      "lang": "en",
      "text": "this",
      "offset": 4992.639,
      "duration": 4.401
    },
    {
      "lang": "en",
      "text": "manifest. API version defines the",
      "offset": 4993.48,
      "duration": 5.88
    },
    {
      "lang": "en",
      "text": "Kubernetes API and the version to be",
      "offset": 4997.04,
      "duration": 7.639
    },
    {
      "lang": "en",
      "text": "used. For deployments, we use apps",
      "offset": 4999.36,
      "duration": 8
    },
    {
      "lang": "en",
      "text": "slashb1. Kind indicates that we will",
      "offset": 5004.679,
      "duration": 5.56
    },
    {
      "lang": "en",
      "text": "create a kubernetus deployment. The",
      "offset": 5007.36,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "metadata section defines various meta",
      "offset": 5010.239,
      "duration": 5
    },
    {
      "lang": "en",
      "text": "information we will cover later in this",
      "offset": 5012.8,
      "duration": 5.439
    },
    {
      "lang": "en",
      "text": "course. The spec section defines the",
      "offset": 5015.239,
      "duration": 4.721
    },
    {
      "lang": "en",
      "text": "detailed specification of our",
      "offset": 5018.239,
      "duration": 4.641
    },
    {
      "lang": "en",
      "text": "deployment. For example, replicas",
      "offset": 5019.96,
      "duration": 5.64
    },
    {
      "lang": "en",
      "text": "defines the number of replicated ports",
      "offset": 5022.88,
      "duration": 5.6
    },
    {
      "lang": "en",
      "text": "the deployment should consist of.",
      "offset": 5025.6,
      "duration": 5.599
    },
    {
      "lang": "en",
      "text": "Selector is used to define how pots will",
      "offset": 5028.48,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "be managed. Kubernetes will use the",
      "offset": 5031.199,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "selector rule to find individual pots",
      "offset": 5034,
      "duration": 4.12
    },
    {
      "lang": "en",
      "text": "for applying",
      "offset": 5036.639,
      "duration": 4.641
    },
    {
      "lang": "en",
      "text": "changes. We will learn more about that",
      "offset": 5038.12,
      "duration": 6.92
    },
    {
      "lang": "en",
      "text": "later in the course. Finally, template",
      "offset": 5041.28,
      "duration": 7.2
    },
    {
      "lang": "en",
      "text": "defines how new pots are created. If",
      "offset": 5045.04,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "Kubernetes decides to create a new port",
      "offset": 5048.48,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "for the deployment, it uses the defined",
      "offset": 5050.56,
      "duration": 6.84
    },
    {
      "lang": "en",
      "text": "template to add labels, create",
      "offset": 5053.36,
      "duration": 8.6
    },
    {
      "lang": "en",
      "text": "containers with respective name, docker",
      "offset": 5057.4,
      "duration": 7.4
    },
    {
      "lang": "en",
      "text": "image and other details like network",
      "offset": 5061.96,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "ports for",
      "offset": 5064.8,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "communication. We use cube cutter to",
      "offset": 5066.6,
      "duration": 5.16
    },
    {
      "lang": "en",
      "text": "apply the manifest to the cluster. The",
      "offset": 5068.88,
      "duration": 6.759
    },
    {
      "lang": "en",
      "text": "command cubecuddle apply dash",
      "offset": 5071.76,
      "duration": 7.16
    },
    {
      "lang": "en",
      "text": "manifest.yamel will send the manifest to",
      "offset": 5075.639,
      "duration": 5.481
    },
    {
      "lang": "en",
      "text": "kubernetus. The control plane will",
      "offset": 5078.92,
      "duration": 4.36
    },
    {
      "lang": "en",
      "text": "decide on which node to schedule the",
      "offset": 5081.12,
      "duration": 5.4
    },
    {
      "lang": "en",
      "text": "parts and the creation of our ports is",
      "offset": 5083.28,
      "duration": 5.919
    },
    {
      "lang": "en",
      "text": "triggered. Pods in a deployment get a",
      "offset": 5086.52,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "unique but random",
      "offset": 5089.199,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "identifier. In that sense pots are",
      "offset": 5091.56,
      "duration": 5.8
    },
    {
      "lang": "en",
      "text": "treated as completely equal. Each one is",
      "offset": 5094.159,
      "duration": 6
    },
    {
      "lang": "en",
      "text": "as good as any other.",
      "offset": 5097.36,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "In this video, we will learn how to",
      "offset": 5100.159,
      "duration": 3.441
    },
    {
      "lang": "en",
      "text": "scale and monitor stateless applications",
      "offset": 5101.6,
      "duration": 6
    },
    {
      "lang": "en",
      "text": "using Kubernetes. Let's dive in. Scaling",
      "offset": 5103.6,
      "duration": 7.36
    },
    {
      "lang": "en",
      "text": "means to add or remove resources. Adding",
      "offset": 5107.6,
      "duration": 5.92
    },
    {
      "lang": "en",
      "text": "resources is called scaling up. And",
      "offset": 5110.96,
      "duration": 5.92
    },
    {
      "lang": "en",
      "text": "removing them is called scaling down. We",
      "offset": 5113.52,
      "duration": 6.52
    },
    {
      "lang": "en",
      "text": "scale up to react to more demand, for",
      "offset": 5116.88,
      "duration": 5.6
    },
    {
      "lang": "en",
      "text": "example, due to increasing load on our",
      "offset": 5120.04,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "application or because more storage is",
      "offset": 5122.48,
      "duration": 5.679
    },
    {
      "lang": "en",
      "text": "needed. We scale down to save on",
      "offset": 5125.48,
      "duration": 5.56
    },
    {
      "lang": "en",
      "text": "resources. For example, when load on our",
      "offset": 5128.159,
      "duration": 5.921
    },
    {
      "lang": "en",
      "text": "application goes back to normal. Now,",
      "offset": 5131.04,
      "duration": 5.48
    },
    {
      "lang": "en",
      "text": "how do we scale the number of ports in",
      "offset": 5134.08,
      "duration": 6.24
    },
    {
      "lang": "en",
      "text": "Kubernetes? This is very easy. Either we",
      "offset": 5136.52,
      "duration": 6.199
    },
    {
      "lang": "en",
      "text": "change the number of replicas in the",
      "offset": 5140.32,
      "duration": 6.399
    },
    {
      "lang": "en",
      "text": "manifest and reapply it or we use the",
      "offset": 5142.719,
      "duration": 6.92
    },
    {
      "lang": "en",
      "text": "command cube cuttle scale",
      "offset": 5146.719,
      "duration": 5.121
    },
    {
      "lang": "en",
      "text": "deployment with the command line",
      "offset": 5149.639,
      "duration": 6.281
    },
    {
      "lang": "en",
      "text": "argument dash replicas.",
      "offset": 5151.84,
      "duration": 6
    },
    {
      "lang": "en",
      "text": "To be clear, applications need to be",
      "offset": 5155.92,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "designed for scalability in the first",
      "offset": 5157.84,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "place. In fact, many legacy applications",
      "offset": 5159.52,
      "duration": 6.639
    },
    {
      "lang": "en",
      "text": "or in particular monoliths are typically",
      "offset": 5162.8,
      "duration": 6.48
    },
    {
      "lang": "en",
      "text": "not scalable in the way shown here. We",
      "offset": 5166.159,
      "duration": 4.961
    },
    {
      "lang": "en",
      "text": "cannot just add parts to a monolith and",
      "offset": 5169.28,
      "duration": 3.52
    },
    {
      "lang": "en",
      "text": "expect such an application to handle the",
      "offset": 5171.12,
      "duration": 2.519
    },
    {
      "lang": "en",
      "text": "load",
      "offset": 5172.8,
      "duration": 3.919
    },
    {
      "lang": "en",
      "text": "better. That is why we recaped software",
      "offset": 5173.639,
      "duration": 5.721
    },
    {
      "lang": "en",
      "text": "design previously. We need modern and",
      "offset": 5176.719,
      "duration": 4.601
    },
    {
      "lang": "en",
      "text": "cloudnative applications for",
      "offset": 5179.36,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "scalability. These applications have to",
      "offset": 5181.32,
      "duration": 4.6
    },
    {
      "lang": "en",
      "text": "be designed accordingly. so that they",
      "offset": 5183.6,
      "duration": 4.119
    },
    {
      "lang": "en",
      "text": "can be scaled with",
      "offset": 5185.92,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "ease. Monitoring is a crucial real-time",
      "offset": 5187.719,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "process for observing",
      "offset": 5190.56,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "applications. Monitoring enables us to",
      "offset": 5192.199,
      "duration": 4.04
    },
    {
      "lang": "en",
      "text": "react to all kinds of problems and",
      "offset": 5194.4,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "challenges like outages, load spikes or",
      "offset": 5196.239,
      "duration": 5.561
    },
    {
      "lang": "en",
      "text": "storage that may be",
      "offset": 5199.92,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "exhausted. There are many modern",
      "offset": 5201.8,
      "duration": 4.439
    },
    {
      "lang": "en",
      "text": "monitoring applications for Kubernetes.",
      "offset": 5204.08,
      "duration": 5.84
    },
    {
      "lang": "en",
      "text": "Examples include Prometheus and Kafana,",
      "offset": 5206.239,
      "duration": 5.681
    },
    {
      "lang": "en",
      "text": "but several other open- source and",
      "offset": 5209.92,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "proprietary solutions exist. Here we",
      "offset": 5211.92,
      "duration": 5.6
    },
    {
      "lang": "en",
      "text": "will use cube cuddle to perform basic",
      "offset": 5215.28,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "monitoring tasks. Specifically, we will",
      "offset": 5217.52,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "use the command cube cuddle get followed",
      "offset": 5220.32,
      "duration": 4.52
    },
    {
      "lang": "en",
      "text": "by the objects we want to",
      "offset": 5223.04,
      "duration": 4.639
    },
    {
      "lang": "en",
      "text": "monitor. In the first example, we use",
      "offset": 5224.84,
      "duration": 6.2
    },
    {
      "lang": "en",
      "text": "cube cuddle get pots to observe all pots",
      "offset": 5227.679,
      "duration": 6.241
    },
    {
      "lang": "en",
      "text": "and their current status. In the second",
      "offset": 5231.04,
      "duration": 6.32
    },
    {
      "lang": "en",
      "text": "example, we use cube cuddle get services",
      "offset": 5233.92,
      "duration": 5.88
    },
    {
      "lang": "en",
      "text": "to monitor all our",
      "offset": 5237.36,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "services. In this video, we will learn",
      "offset": 5239.8,
      "duration": 4.2
    },
    {
      "lang": "en",
      "text": "how to deploy, scale, and monitor",
      "offset": 5242.08,
      "duration": 4.559
    },
    {
      "lang": "en",
      "text": "stateful applications using Kubernetes.",
      "offset": 5244,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "We will stress the similarities and",
      "offset": 5246.639,
      "duration": 4.721
    },
    {
      "lang": "en",
      "text": "differences compared with deploying",
      "offset": 5249.52,
      "duration": 2.84
    },
    {
      "lang": "en",
      "text": "stateless",
      "offset": 5251.36,
      "duration": 3.44
    },
    {
      "lang": "en",
      "text": "applications. Let us briefly recap what",
      "offset": 5252.36,
      "duration": 3.879
    },
    {
      "lang": "en",
      "text": "we have learned about stateless",
      "offset": 5254.8,
      "duration": 3.439
    },
    {
      "lang": "en",
      "text": "applications. Such applications are",
      "offset": 5256.239,
      "duration": 4.321
    },
    {
      "lang": "en",
      "text": "mapped to deployments and each part of",
      "offset": 5258.239,
      "duration": 3.96
    },
    {
      "lang": "en",
      "text": "the application does exactly the same",
      "offset": 5260.56,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "tasks. Each pod is an exact replica of",
      "offset": 5262.199,
      "duration": 5.721
    },
    {
      "lang": "en",
      "text": "the others. Stateful applications on the",
      "offset": 5265.04,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "other hand need pods that are not exact",
      "offset": 5267.92,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "replicas of each other as each pot may",
      "offset": 5270.48,
      "duration": 5.92
    },
    {
      "lang": "en",
      "text": "work on different tasks. As we will see",
      "offset": 5273.28,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "much of what we've learned so far can be",
      "offset": 5276.4,
      "duration": 6.08
    },
    {
      "lang": "en",
      "text": "applied in this chapter as well.",
      "offset": 5278.48,
      "duration": 6.4
    },
    {
      "lang": "en",
      "text": "Stateful apps are a general concept and",
      "offset": 5282.48,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "again fit well to Kubernetes. Stateful",
      "offset": 5284.88,
      "duration": 5.839
    },
    {
      "lang": "en",
      "text": "applications save some internal state.",
      "offset": 5287.92,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "When interrupted or stopped, a new pod",
      "offset": 5290.719,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "is replicated and can continue to",
      "offset": 5293.12,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "operate from the safe state. We use",
      "offset": 5295.679,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "stateful applications all the time. For",
      "offset": 5298.56,
      "duration": 4.599
    },
    {
      "lang": "en",
      "text": "example, database backends like",
      "offset": 5300.639,
      "duration": 4.52
    },
    {
      "lang": "en",
      "text": "Postgrql are",
      "offset": 5303.159,
      "duration": 4.841
    },
    {
      "lang": "en",
      "text": "stateful. Each time we update data using",
      "offset": 5305.159,
      "duration": 4.841
    },
    {
      "lang": "en",
      "text": "any of the parts, the new data needs to",
      "offset": 5308,
      "duration": 3.52
    },
    {
      "lang": "en",
      "text": "be persisted.",
      "offset": 5310,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "Now when a pot terminates for whatever",
      "offset": 5311.52,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "reason a new one is created and this pod",
      "offset": 5313.84,
      "duration": 4.52
    },
    {
      "lang": "en",
      "text": "needs to pick up the saved",
      "offset": 5316.32,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "state in Kubernetes there are so-called",
      "offset": 5318.36,
      "duration": 4.92
    },
    {
      "lang": "en",
      "text": "stateful sets which are used to create",
      "offset": 5321.28,
      "duration": 4.879
    },
    {
      "lang": "en",
      "text": "stateful applications. Here is a sample",
      "offset": 5323.28,
      "duration": 6.16
    },
    {
      "lang": "en",
      "text": "manifest for such a stateful set. A",
      "offset": 5326.159,
      "duration": 5.681
    },
    {
      "lang": "en",
      "text": "stateful set has the same sections that",
      "offset": 5329.44,
      "duration": 6.16
    },
    {
      "lang": "en",
      "text": "we know already. API version, kind for",
      "offset": 5331.84,
      "duration": 7.04
    },
    {
      "lang": "en",
      "text": "declaring a stateful set, metadata and",
      "offset": 5335.6,
      "duration": 5.039
    },
    {
      "lang": "en",
      "text": "spec for declaring detailed",
      "offset": 5338.88,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "specifications of our stateful set like",
      "offset": 5340.639,
      "duration": 4.641
    },
    {
      "lang": "en",
      "text": "the template for our ports and the",
      "offset": 5343.44,
      "duration": 2.68
    },
    {
      "lang": "en",
      "text": "number of",
      "offset": 5345.28,
      "duration": 3.359
    },
    {
      "lang": "en",
      "text": "replicas. Again, we also have a selector",
      "offset": 5346.12,
      "duration": 5.559
    },
    {
      "lang": "en",
      "text": "section which we will discuss later. We",
      "offset": 5348.639,
      "duration": 5.161
    },
    {
      "lang": "en",
      "text": "deploy stateful sets like we deploy",
      "offset": 5351.679,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "deployments by executing the command",
      "offset": 5353.8,
      "duration": 5.6
    },
    {
      "lang": "en",
      "text": "cubecuddle apply-f",
      "offset": 5356.239,
      "duration": 5.761
    },
    {
      "lang": "en",
      "text": "manifest.yamel. However, stateful sets",
      "offset": 5359.4,
      "duration": 4.279
    },
    {
      "lang": "en",
      "text": "are created a little differently",
      "offset": 5362,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "compared to Kubernetes deployments. Pots",
      "offset": 5363.679,
      "duration": 6.081
    },
    {
      "lang": "en",
      "text": "are created in order, not all at once",
      "offset": 5366.88,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "like the pots in a deployment.",
      "offset": 5369.76,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "Furthermore, pots get predictable names",
      "offset": 5372.32,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "like",
      "offset": 5374.8,
      "duration": 2.56
    },
    {
      "lang": "en",
      "text": "port-1, pod dash2, and so on. This",
      "offset": 5377.639,
      "duration": 5.961
    },
    {
      "lang": "en",
      "text": "ensures that pots of a stateful set have",
      "offset": 5381.44,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "an identity in contrast to those of a",
      "offset": 5383.6,
      "duration": 5.92
    },
    {
      "lang": "en",
      "text": "deployment. Hence with this identity",
      "offset": 5386.48,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "different parts of a stateful set can",
      "offset": 5389.52,
      "duration": 4.36
    },
    {
      "lang": "en",
      "text": "perform different",
      "offset": 5391.44,
      "duration": 5.199
    },
    {
      "lang": "en",
      "text": "roles. Stateful sets can also be scaled",
      "offset": 5393.88,
      "duration": 5.48
    },
    {
      "lang": "en",
      "text": "up or scaled down. Again this is",
      "offset": 5396.639,
      "duration": 5.361
    },
    {
      "lang": "en",
      "text": "extremely easy. We either change the",
      "offset": 5399.36,
      "duration": 4.76
    },
    {
      "lang": "en",
      "text": "number of replicas in the manifest and",
      "offset": 5402,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "reapply or we use the command cube",
      "offset": 5404.12,
      "duration": 6.28
    },
    {
      "lang": "en",
      "text": "cuttle scale stateful sets. When we",
      "offset": 5406.96,
      "duration": 6
    },
    {
      "lang": "en",
      "text": "scale up additional pots will be created",
      "offset": 5410.4,
      "duration": 5.68
    },
    {
      "lang": "en",
      "text": "one after another. For example, if our",
      "offset": 5412.96,
      "duration": 5.08
    },
    {
      "lang": "en",
      "text": "existing ports are",
      "offset": 5416.08,
      "duration": 7.2
    },
    {
      "lang": "en",
      "text": "port- dash one, pot dash 2, then first",
      "offset": 5418.04,
      "duration": 9.24
    },
    {
      "lang": "en",
      "text": "port dash3, then pot dash4 will be added",
      "offset": 5423.28,
      "duration": 7.919
    },
    {
      "lang": "en",
      "text": "to the set. When scaling down the pots",
      "offset": 5427.28,
      "duration": 7.359
    },
    {
      "lang": "en",
      "text": "created last will be deleted first, for",
      "offset": 5431.199,
      "duration": 7.081
    },
    {
      "lang": "en",
      "text": "example, from our sets of pots,",
      "offset": 5434.639,
      "duration": 8.881
    },
    {
      "lang": "en",
      "text": "pod-4, then pot-3 will be removed first.",
      "offset": 5438.28,
      "duration": 6.84
    },
    {
      "lang": "en",
      "text": "For monitoring, we have the same",
      "offset": 5443.52,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "workflows like before with deployments.",
      "offset": 5445.12,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "Monitoring lets us react to problems",
      "offset": 5447.84,
      "duration": 4.52
    },
    {
      "lang": "en",
      "text": "like outages, load spikes, or missing",
      "offset": 5449.6,
      "duration": 5.119
    },
    {
      "lang": "en",
      "text": "storage. Again, we will use the command",
      "offset": 5452.36,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "cube cuddle for basic monitoring",
      "offset": 5454.719,
      "duration": 5.201
    },
    {
      "lang": "en",
      "text": "tasks. Commands are the same as with",
      "offset": 5457.4,
      "duration": 4.52
    },
    {
      "lang": "en",
      "text": "deployments. For example, we can use",
      "offset": 5459.92,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "cube cuddle get pots to get all the pots",
      "offset": 5461.92,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "in a stateful set with their current",
      "offset": 5464.56,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "status or we can use cube cuddle get",
      "offset": 5466.96,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "services to get all the services that a",
      "offset": 5469.76,
      "duration": 4.36
    },
    {
      "lang": "en",
      "text": "stateful set may",
      "offset": 5471.92,
      "duration": 4.6
    },
    {
      "lang": "en",
      "text": "use. So far our ports have been",
      "offset": 5474.12,
      "duration": 5.32
    },
    {
      "lang": "en",
      "text": "ephemeral meaning we lose any data once",
      "offset": 5476.52,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "the pod is terminated or",
      "offset": 5479.44,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "recreated. However, ensuring data",
      "offset": 5481.56,
      "duration": 5.32
    },
    {
      "lang": "en",
      "text": "persistence across port restarts is",
      "offset": 5484.08,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "often a key challenge. Let's explore how",
      "offset": 5486.88,
      "duration": 4.359
    },
    {
      "lang": "en",
      "text": "Kubernetes addresses",
      "offset": 5489.52,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "this. The fundamental objects for",
      "offset": 5491.239,
      "duration": 4.841
    },
    {
      "lang": "en",
      "text": "storage in Kubernetes are persistent",
      "offset": 5493.92,
      "duration": 6.4
    },
    {
      "lang": "en",
      "text": "volumes or PVs for short. We create and",
      "offset": 5496.08,
      "duration": 6.24
    },
    {
      "lang": "en",
      "text": "maintain PVs in parallel to other",
      "offset": 5500.32,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "objects like pods and have them act as",
      "offset": 5502.32,
      "duration": 6.08
    },
    {
      "lang": "en",
      "text": "simple blocks for storage. We map or",
      "offset": 5505.04,
      "duration": 6
    },
    {
      "lang": "en",
      "text": "assign these PVs to pods using",
      "offset": 5508.4,
      "duration": 6.799
    },
    {
      "lang": "en",
      "text": "persistent volume claims or PVCs.",
      "offset": 5511.04,
      "duration": 7.36
    },
    {
      "lang": "en",
      "text": "When mapped to a pod, we can use the PV",
      "offset": 5515.199,
      "duration": 6.161
    },
    {
      "lang": "en",
      "text": "for any data that needs to survive when",
      "offset": 5518.4,
      "duration": 6
    },
    {
      "lang": "en",
      "text": "the pod is terminated or restarted.",
      "offset": 5521.36,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "Therefore, PVs give us one of the most",
      "offset": 5524.4,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "important features of cloudnative",
      "offset": 5526.88,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "software design, the separation of",
      "offset": 5528.56,
      "duration": 7.04
    },
    {
      "lang": "en",
      "text": "storage and compute. Storage, our PVs",
      "offset": 5531.12,
      "duration": 7.28
    },
    {
      "lang": "en",
      "text": "are separated from our ports, which do",
      "offset": 5535.6,
      "duration": 5.28
    },
    {
      "lang": "en",
      "text": "the compute and use data stored on the",
      "offset": 5538.4,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "PVs.",
      "offset": 5540.88,
      "duration": 4.839
    },
    {
      "lang": "en",
      "text": "We have two ways to create or provision",
      "offset": 5542.48,
      "duration": 5.6
    },
    {
      "lang": "en",
      "text": "PVs. The first way is to create them",
      "offset": 5545.719,
      "duration": 4.761
    },
    {
      "lang": "en",
      "text": "manually. This is done by a Kubernetes",
      "offset": 5548.08,
      "duration": 6.32
    },
    {
      "lang": "en",
      "text": "admin and not by users like us. The",
      "offset": 5550.48,
      "duration": 6.239
    },
    {
      "lang": "en",
      "text": "second way is to provision PVs",
      "offset": 5554.4,
      "duration": 5.6
    },
    {
      "lang": "en",
      "text": "dynamically and we as regular Kubernetes",
      "offset": 5556.719,
      "duration": 6.561
    },
    {
      "lang": "en",
      "text": "users can do this ourselves. We",
      "offset": 5560,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "provision PVs dynamically using",
      "offset": 5563.28,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "so-called storage classes or SC's for",
      "offset": 5564.88,
      "duration": 6.4
    },
    {
      "lang": "en",
      "text": "short. SC's are designed to provision",
      "offset": 5568.08,
      "duration": 5.88
    },
    {
      "lang": "en",
      "text": "persistent volumes without any human",
      "offset": 5571.28,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "intervention. They define basic",
      "offset": 5573.96,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "properties of the PVS to be dynamically",
      "offset": 5576.08,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "provisioned. This ensures that PVCs can",
      "offset": 5578.92,
      "duration": 3.719
    },
    {
      "lang": "en",
      "text": "be automatically matched with",
      "offset": 5581.44,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "appropriate PVs based on storage needs",
      "offset": 5582.639,
      "duration": 5.361
    },
    {
      "lang": "en",
      "text": "and hence so this type of storage",
      "offset": 5585.92,
      "duration": 5
    },
    {
      "lang": "en",
      "text": "provisioning is a key enabler for",
      "offset": 5588,
      "duration": 5.6
    },
    {
      "lang": "en",
      "text": "automation. Now storage classes are",
      "offset": 5590.92,
      "duration": 6.2
    },
    {
      "lang": "en",
      "text": "objects we simply use. These are created",
      "offset": 5593.6,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "and maintained by our friendly",
      "offset": 5597.12,
      "duration": 4.559
    },
    {
      "lang": "en",
      "text": "Kubernetes admin which means they are",
      "offset": 5599.12,
      "duration": 6.48
    },
    {
      "lang": "en",
      "text": "ready to be used by us. Further real",
      "offset": 5601.679,
      "duration": 6
    },
    {
      "lang": "en",
      "text": "world Kubernetes in general provides",
      "offset": 5605.6,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "many types of storage. Typically these",
      "offset": 5607.679,
      "duration": 4.801
    },
    {
      "lang": "en",
      "text": "types are defined by different criteria",
      "offset": 5610.48,
      "duration": 5.84
    },
    {
      "lang": "en",
      "text": "like availability, latency, cost or",
      "offset": 5612.48,
      "duration": 5.08
    },
    {
      "lang": "en",
      "text": "applied backup",
      "offset": 5616.32,
      "duration": 3.28
    },
    {
      "lang": "en",
      "text": "strategy. All in all dynamic",
      "offset": 5617.56,
      "duration": 3.88
    },
    {
      "lang": "en",
      "text": "provisioning of PVs using storage",
      "offset": 5619.6,
      "duration": 5.039
    },
    {
      "lang": "en",
      "text": "classes is now standard in Kubernetes.",
      "offset": 5621.44,
      "duration": 5.92
    },
    {
      "lang": "en",
      "text": "If we are unsure what to do, we use",
      "offset": 5624.639,
      "duration": 3.961
    },
    {
      "lang": "en",
      "text": "storage",
      "offset": 5627.36,
      "duration": 3.839
    },
    {
      "lang": "en",
      "text": "classes. Keep in mind that only three",
      "offset": 5628.6,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "Kubernetes objects are involved in",
      "offset": 5631.199,
      "duration": 5.121
    },
    {
      "lang": "en",
      "text": "storage. Persistent volume, persistent",
      "offset": 5633.56,
      "duration": 6.28
    },
    {
      "lang": "en",
      "text": "volume claim, and storage class. When we",
      "offset": 5636.32,
      "duration": 5.68
    },
    {
      "lang": "en",
      "text": "declare a part that has demand for",
      "offset": 5639.84,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "persistent storage, first we create a",
      "offset": 5642,
      "duration": 6.159
    },
    {
      "lang": "en",
      "text": "persistent volume claim. This PVC has",
      "offset": 5645.04,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "Kubernetes create a persistent volume",
      "offset": 5648.159,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "dynamically for us.",
      "offset": 5650.4,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "Second, this persistent volume is mapped",
      "offset": 5652.719,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "automatically to our pod. Our choice of",
      "offset": 5654.88,
      "duration": 6.359
    },
    {
      "lang": "en",
      "text": "storage class defines details like the",
      "offset": 5658.239,
      "duration": 6
    },
    {
      "lang": "en",
      "text": "availability and backup strategy of our",
      "offset": 5661.239,
      "duration": 6.281
    },
    {
      "lang": "en",
      "text": "persistent volume. Most importantly,",
      "offset": 5664.239,
      "duration": 6.081
    },
    {
      "lang": "en",
      "text": "this persistent volume survives even",
      "offset": 5667.52,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "when the claiming pod is terminated or",
      "offset": 5670.32,
      "duration": 3.839
    },
    {
      "lang": "en",
      "text": "restarted.",
      "offset": 5672.48,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "When restarted the same existing PB will",
      "offset": 5674.159,
      "duration": 7.201
    },
    {
      "lang": "en",
      "text": "be bound to the pot again and hence no",
      "offset": 5677.44,
      "duration": 5.4
    },
    {
      "lang": "en",
      "text": "data is",
      "offset": 5681.36,
      "duration": 4.359
    },
    {
      "lang": "en",
      "text": "lost. Let us dissect some manifest",
      "offset": 5682.84,
      "duration": 5.24
    },
    {
      "lang": "en",
      "text": "snippets. First we see the declaration",
      "offset": 5685.719,
      "duration": 4.841
    },
    {
      "lang": "en",
      "text": "of a port. We declare demand for storage",
      "offset": 5688.08,
      "duration": 6.48
    },
    {
      "lang": "en",
      "text": "with a volume mount named pv-my data and",
      "offset": 5690.56,
      "duration": 8.079
    },
    {
      "lang": "en",
      "text": "a path named /my data. In the volume",
      "offset": 5694.56,
      "duration": 6.159
    },
    {
      "lang": "en",
      "text": "section, more details are given. The",
      "offset": 5698.639,
      "duration": 5.121
    },
    {
      "lang": "en",
      "text": "volume named PV- my data will be created",
      "offset": 5700.719,
      "duration": 4.801
    },
    {
      "lang": "en",
      "text": "and bound using the persistent volume",
      "offset": 5703.76,
      "duration": 4.2
    },
    {
      "lang": "en",
      "text": "claim data",
      "offset": 5705.52,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "camp-VC. Second, we see the declaration",
      "offset": 5707.96,
      "duration": 4.92
    },
    {
      "lang": "en",
      "text": "of the respective persistent volume",
      "offset": 5710.56,
      "duration": 6.079
    },
    {
      "lang": "en",
      "text": "claim with the name data camp- PVC. The",
      "offset": 5712.88,
      "duration": 6.48
    },
    {
      "lang": "en",
      "text": "storage class standard is chosen here.",
      "offset": 5716.639,
      "duration": 4.961
    },
    {
      "lang": "en",
      "text": "Further, we define the access mode which",
      "offset": 5719.36,
      "duration": 6.56
    },
    {
      "lang": "en",
      "text": "in our case is read write once. Finally,",
      "offset": 5721.6,
      "duration": 6.559
    },
    {
      "lang": "en",
      "text": "choosing the standard storage class and",
      "offset": 5725.92,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "a 5 GB volume size in the PVC definition",
      "offset": 5728.159,
      "duration": 5.48
    },
    {
      "lang": "en",
      "text": "is based on the typical needs of our",
      "offset": 5731.36,
      "duration": 5.24
    },
    {
      "lang": "en",
      "text": "application balancing performance and",
      "offset": 5733.639,
      "duration": 5.721
    },
    {
      "lang": "en",
      "text": "cost. As you have already expected, cube",
      "offset": 5736.6,
      "duration": 4.36
    },
    {
      "lang": "en",
      "text": "cuddle offers a complete set of commands",
      "offset": 5739.36,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "to deal with storage. For example, cube",
      "offset": 5740.96,
      "duration": 6.08
    },
    {
      "lang": "en",
      "text": "cuddle get SC will list all available",
      "offset": 5743.84,
      "duration": 6.72
    },
    {
      "lang": "en",
      "text": "storage classes and cube cuddle get PVC",
      "offset": 5747.04,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "shows all deployed persistent volume",
      "offset": 5750.56,
      "duration": 6.56
    },
    {
      "lang": "en",
      "text": "claims. Further, cube cuddle getpv lists",
      "offset": 5752.56,
      "duration": 7.52
    },
    {
      "lang": "en",
      "text": "all deployed persistent volumes. Plus,",
      "offset": 5757.12,
      "duration": 5.32
    },
    {
      "lang": "en",
      "text": "as usual, cubecuddle",
      "offset": 5760.08,
      "duration": 6
    },
    {
      "lang": "en",
      "text": "apply-f manifest is used to deploy the",
      "offset": 5762.44,
      "duration": 5.64
    },
    {
      "lang": "en",
      "text": "storage resources which have been",
      "offset": 5766.08,
      "duration": 4.76
    },
    {
      "lang": "en",
      "text": "declared in respective",
      "offset": 5768.08,
      "duration": 5.119
    },
    {
      "lang": "en",
      "text": "manifests. Let's dive deeper into",
      "offset": 5770.84,
      "duration": 4.6
    },
    {
      "lang": "en",
      "text": "networking, load balancing, and security",
      "offset": 5773.199,
      "duration": 3
    },
    {
      "lang": "en",
      "text": "in",
      "offset": 5775.44,
      "duration": 3.12
    },
    {
      "lang": "en",
      "text": "Kubernetes. Let's look at Kubernetes",
      "offset": 5776.199,
      "duration": 5.081
    },
    {
      "lang": "en",
      "text": "labels and selectors in more detail.",
      "offset": 5778.56,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "Labels are key value pairs that can be",
      "offset": 5781.28,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "attached to objects like ports,",
      "offset": 5783.28,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "persistent volumes, or even nodes. We",
      "offset": 5785.04,
      "duration": 5.119
    },
    {
      "lang": "en",
      "text": "use labels to organize subsets of our",
      "offset": 5787.84,
      "duration": 4.799
    },
    {
      "lang": "en",
      "text": "objects. And we can modify our labels at",
      "offset": 5790.159,
      "duration": 4.801
    },
    {
      "lang": "en",
      "text": "any time. For example, we could attach",
      "offset": 5792.639,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "the label value pair environment equals",
      "offset": 5794.96,
      "duration": 6.08
    },
    {
      "lang": "en",
      "text": "pro to some of our ports. Or we could",
      "offset": 5797.679,
      "duration": 6.48
    },
    {
      "lang": "en",
      "text": "attach a label has GPU with the value",
      "offset": 5801.04,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "true to the nodes in our cluster that",
      "offset": 5804.159,
      "duration": 4.241
    },
    {
      "lang": "en",
      "text": "have a GPU.",
      "offset": 5806.48,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "We use selectors to identify objects",
      "offset": 5808.4,
      "duration": 3.799
    },
    {
      "lang": "en",
      "text": "using these",
      "offset": 5811.04,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "labels. For example, we could use the",
      "offset": 5812.199,
      "duration": 6.281
    },
    {
      "lang": "en",
      "text": "has GPU label to schedule a pod that",
      "offset": 5815.04,
      "duration": 6.8
    },
    {
      "lang": "en",
      "text": "needs the compute power of a GPU on a",
      "offset": 5818.48,
      "duration": 6.8
    },
    {
      "lang": "en",
      "text": "respective Kubernetes node. Let's recap",
      "offset": 5821.84,
      "duration": 5.24
    },
    {
      "lang": "en",
      "text": "services and dig a little deeper into",
      "offset": 5825.28,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "networking. As we have learned",
      "offset": 5827.08,
      "duration": 3.48
    },
    {
      "lang": "en",
      "text": "previously, we use services and",
      "offset": 5828.88,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "Kubernetes for networking. The reason is",
      "offset": 5830.56,
      "duration": 4.559
    },
    {
      "lang": "en",
      "text": "that each port has its own unique IP",
      "offset": 5832.88,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "address which changes anytime our port",
      "offset": 5835.119,
      "duration": 3.721
    },
    {
      "lang": "en",
      "text": "gets",
      "offset": 5837.92,
      "duration": 4.239
    },
    {
      "lang": "en",
      "text": "redeployed. Services are not ephemeral.",
      "offset": 5838.84,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "They offer stable",
      "offset": 5842.159,
      "duration": 3.921
    },
    {
      "lang": "en",
      "text": "connectivity. Services can be created",
      "offset": 5844.04,
      "duration": 4.599
    },
    {
      "lang": "en",
      "text": "using manifests. On the right we have a",
      "offset": 5846.08,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "snippet of a service manifest which",
      "offset": 5848.639,
      "duration": 5.08
    },
    {
      "lang": "en",
      "text": "would deploy the service named",
      "offset": 5850.4,
      "duration": 6.16
    },
    {
      "lang": "en",
      "text": "Kubernetes_2 as shown on the left.",
      "offset": 5853.719,
      "duration": 4.761
    },
    {
      "lang": "en",
      "text": "Besides metadata which we declare as",
      "offset": 5856.56,
      "duration": 4.639
    },
    {
      "lang": "en",
      "text": "usual, our selector selects all ports",
      "offset": 5858.48,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "that have a label named app with a value",
      "offset": 5861.199,
      "duration": 6.081
    },
    {
      "lang": "en",
      "text": "of app 2. Now if our purple ports on the",
      "offset": 5863.36,
      "duration": 6.24
    },
    {
      "lang": "en",
      "text": "right have this label attached, these",
      "offset": 5867.28,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "ports would be assigned to our service",
      "offset": 5869.6,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "and we can use it to start communicating",
      "offset": 5872,
      "duration": 3.96
    },
    {
      "lang": "en",
      "text": "with other",
      "offset": 5874.4,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "services. Load balancing is another",
      "offset": 5875.96,
      "duration": 4.239
    },
    {
      "lang": "en",
      "text": "feature that is correlated with",
      "offset": 5878.32,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "networking and easy to implement in",
      "offset": 5880.199,
      "duration": 5.241
    },
    {
      "lang": "en",
      "text": "Kubernetes. A load balancer simply",
      "offset": 5882.56,
      "duration": 5.639
    },
    {
      "lang": "en",
      "text": "distributes network requests evenly over",
      "offset": 5885.44,
      "duration": 6.16
    },
    {
      "lang": "en",
      "text": "parts. This avoids uneven load which",
      "offset": 5888.199,
      "duration": 5.561
    },
    {
      "lang": "en",
      "text": "leads to more efficiency and lower",
      "offset": 5891.6,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "response times. In the example on the",
      "offset": 5893.76,
      "duration": 6
    },
    {
      "lang": "en",
      "text": "left, the Kubernet service 2 is a load",
      "offset": 5896.56,
      "duration": 6.32
    },
    {
      "lang": "en",
      "text": "balancer and has three pots attached.",
      "offset": 5899.76,
      "duration": 5.359
    },
    {
      "lang": "en",
      "text": "Requests for the service will be spread",
      "offset": 5902.88,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "out to the three pots.",
      "offset": 5905.119,
      "duration": 4.641
    },
    {
      "lang": "en",
      "text": "Load balancers are just a special type",
      "offset": 5907.92,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "of service which we can declare in the",
      "offset": 5909.76,
      "duration": 3.64
    },
    {
      "lang": "en",
      "text": "spec section of the",
      "offset": 5911.76,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "manifest. When we deploy the service,",
      "offset": 5913.4,
      "duration": 4.52
    },
    {
      "lang": "en",
      "text": "our Kubernetes provider will create a",
      "offset": 5916.08,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "load balancer for us. We do not need to",
      "offset": 5917.92,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "declare additional manifests to deploy",
      "offset": 5920.88,
      "duration": 3.64
    },
    {
      "lang": "en",
      "text": "actual load balancer",
      "offset": 5922.8,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "software. Let's finish networking with a",
      "offset": 5924.52,
      "duration": 5.56
    },
    {
      "lang": "en",
      "text": "few words on ingress. Ingress allows us",
      "offset": 5927.199,
      "duration": 5.92
    },
    {
      "lang": "en",
      "text": "to route HTTP and HTTPS traffic to",
      "offset": 5930.08,
      "duration": 6
    },
    {
      "lang": "en",
      "text": "services. This is done by rules that",
      "offset": 5933.119,
      "duration": 5.401
    },
    {
      "lang": "en",
      "text": "define which service is used by which",
      "offset": 5936.08,
      "duration": 5.119
    },
    {
      "lang": "en",
      "text": "requests. In our example, the ingress",
      "offset": 5938.52,
      "duration": 7.119
    },
    {
      "lang": "en",
      "text": "rules route requests for endpoint",
      "offset": 5941.199,
      "duration": 7.321
    },
    {
      "lang": "en",
      "text": "slash4",
      "offset": 5945.639,
      "duration": 6.04
    },
    {
      "lang": "en",
      "text": "service_1 to kubernetus service 1 and",
      "offset": 5948.52,
      "duration": 5.28
    },
    {
      "lang": "en",
      "text": "requests for endpoint",
      "offset": 5951.679,
      "duration": 5.841
    },
    {
      "lang": "en",
      "text": "slash4 service_2 to kubernetus service",
      "offset": 5953.8,
      "duration": 7.08
    },
    {
      "lang": "en",
      "text": "2. The respective pots finally serve",
      "offset": 5957.52,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "these requests.",
      "offset": 5960.88,
      "duration": 4.759
    },
    {
      "lang": "en",
      "text": "Finally, let's talk about security in",
      "offset": 5962.96,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "Kubernetes. Security is an essential",
      "offset": 5965.639,
      "duration": 4.681
    },
    {
      "lang": "en",
      "text": "field and modern IT architecture has to",
      "offset": 5967.84,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "implement many security standards and",
      "offset": 5970.32,
      "duration": 2.76
    },
    {
      "lang": "en",
      "text": "best",
      "offset": 5972.32,
      "duration": 3.28
    },
    {
      "lang": "en",
      "text": "practices. But it is also a very complex",
      "offset": 5973.08,
      "duration": 4.84
    },
    {
      "lang": "en",
      "text": "field and we cannot cover all the",
      "offset": 5975.6,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "details here. However, we should keep in",
      "offset": 5977.92,
      "duration": 5.68
    },
    {
      "lang": "en",
      "text": "mind that Kubernetes comes with all the",
      "offset": 5981.04,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "necessary components to run our",
      "offset": 5983.6,
      "duration": 5.039
    },
    {
      "lang": "en",
      "text": "applications securely. For example, we",
      "offset": 5985.52,
      "duration": 6.32
    },
    {
      "lang": "en",
      "text": "have the secrets API that allows to",
      "offset": 5988.639,
      "duration": 4.961
    },
    {
      "lang": "en",
      "text": "store confidential objects like",
      "offset": 5991.84,
      "duration": 4.799
    },
    {
      "lang": "en",
      "text": "passwords, tokens, keys, and others.",
      "offset": 5993.6,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "Furthermore, there is tooling to enable",
      "offset": 5996.639,
      "duration": 5.361
    },
    {
      "lang": "en",
      "text": "encrypted network communication. Plus,",
      "offset": 5998.8,
      "duration": 5.68
    },
    {
      "lang": "en",
      "text": "there are methods to authenticate users,",
      "offset": 6002,
      "duration": 4.239
    },
    {
      "lang": "en",
      "text": "allowing modern role-based and",
      "offset": 6004.48,
      "duration": 5.56
    },
    {
      "lang": "en",
      "text": "attribute-based access control for our",
      "offset": 6006.239,
      "duration": 6.48
    },
    {
      "lang": "en",
      "text": "users. Kubernetes can also be used to",
      "offset": 6010.04,
      "duration": 4.92
    },
    {
      "lang": "en",
      "text": "create and maintain data pipelines.",
      "offset": 6012.719,
      "duration": 5.361
    },
    {
      "lang": "en",
      "text": "Let's discuss how. First of all, what",
      "offset": 6014.96,
      "duration": 5.279
    },
    {
      "lang": "en",
      "text": "are data pipelines? In the most general",
      "offset": 6018.08,
      "duration": 4.079
    },
    {
      "lang": "en",
      "text": "form, a data pipeline is a set of",
      "offset": 6020.239,
      "duration": 4.721
    },
    {
      "lang": "en",
      "text": "processes to move data from a source to",
      "offset": 6022.159,
      "duration": 5.201
    },
    {
      "lang": "en",
      "text": "a destination. Transform data from one",
      "offset": 6024.96,
      "duration": 4.719
    },
    {
      "lang": "en",
      "text": "form into another and analyze the data",
      "offset": 6027.36,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "to get insights from it. Most data",
      "offset": 6029.679,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "pipelines consist of three major steps.",
      "offset": 6032.48,
      "duration": 5.88
    },
    {
      "lang": "en",
      "text": "Extract, transform, and load or",
      "offset": 6034.639,
      "duration": 7.281
    },
    {
      "lang": "en",
      "text": "ETL. What does this mean? Let's first",
      "offset": 6038.36,
      "duration": 7.24
    },
    {
      "lang": "en",
      "text": "describe a so-called ETL pipeline. The",
      "offset": 6041.92,
      "duration": 6.56
    },
    {
      "lang": "en",
      "text": "extract step simply copies data from a",
      "offset": 6045.6,
      "duration": 5.28
    },
    {
      "lang": "en",
      "text": "source system like a database, a file",
      "offset": 6048.48,
      "duration": 5.719
    },
    {
      "lang": "en",
      "text": "system or an object store. After",
      "offset": 6050.88,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "extraction, the data from various",
      "offset": 6054.199,
      "duration": 5.121
    },
    {
      "lang": "en",
      "text": "sources is transformed into a meaningful",
      "offset": 6056.32,
      "duration": 5.76
    },
    {
      "lang": "en",
      "text": "schema. This allows for easy analytics",
      "offset": 6059.32,
      "duration": 4.919
    },
    {
      "lang": "en",
      "text": "and helps keep track of what has already",
      "offset": 6062.08,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "been extracted. After this",
      "offset": 6064.239,
      "duration": 4.561
    },
    {
      "lang": "en",
      "text": "transformation step, the data is loaded",
      "offset": 6066.48,
      "duration": 6.239
    },
    {
      "lang": "en",
      "text": "into a target data sync. In ETL, this is",
      "offset": 6068.8,
      "duration": 5.48
    },
    {
      "lang": "en",
      "text": "typically a data",
      "offset": 6072.719,
      "duration": 4.161
    },
    {
      "lang": "en",
      "text": "warehouse. In recent years, another type",
      "offset": 6074.28,
      "duration": 5.16
    },
    {
      "lang": "en",
      "text": "of data pipeline has gained popularity",
      "offset": 6076.88,
      "duration": 4.04
    },
    {
      "lang": "en",
      "text": "and this is",
      "offset": 6079.44,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "ELT. In ELT, extraction also takes place",
      "offset": 6080.92,
      "duration": 7.239
    },
    {
      "lang": "en",
      "text": "like in ETL. But then loading into a",
      "offset": 6084.88,
      "duration": 5.239
    },
    {
      "lang": "en",
      "text": "target data sync takes place",
      "offset": 6088.159,
      "duration": 4.681
    },
    {
      "lang": "en",
      "text": "immediately. This is typically a data",
      "offset": 6090.119,
      "duration": 6.281
    },
    {
      "lang": "en",
      "text": "lake. After loading takes place, data",
      "offset": 6092.84,
      "duration": 5.16
    },
    {
      "lang": "en",
      "text": "can be transformed into a meaningful",
      "offset": 6096.4,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "schema when needed. The exchange of",
      "offset": 6098,
      "duration": 5.679
    },
    {
      "lang": "en",
      "text": "these last two steps allows data",
      "offset": 6101.36,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "consumers like data scientists or data",
      "offset": 6103.679,
      "duration": 4.641
    },
    {
      "lang": "en",
      "text": "engineers to transform the loaded data",
      "offset": 6105.84,
      "duration": 5
    },
    {
      "lang": "en",
      "text": "as needed and hence offers additional",
      "offset": 6108.32,
      "duration": 5.56
    },
    {
      "lang": "en",
      "text": "flexibility compared to",
      "offset": 6110.84,
      "duration": 6.359
    },
    {
      "lang": "en",
      "text": "ETL. ETL as well as ELT data pipelines",
      "offset": 6113.88,
      "duration": 5.72
    },
    {
      "lang": "en",
      "text": "map nicely to Kubernetes objects. Our",
      "offset": 6117.199,
      "duration": 5.121
    },
    {
      "lang": "en",
      "text": "extract, transform and load steps can be",
      "offset": 6119.6,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "deployed using deployments or stateful",
      "offset": 6122.32,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "sets and the data that gets extracted",
      "offset": 6124.08,
      "duration": 4.559
    },
    {
      "lang": "en",
      "text": "and transformed can be stored using",
      "offset": 6126.56,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "persistent volumes. Further, if we use",
      "offset": 6128.639,
      "duration": 4.721
    },
    {
      "lang": "en",
      "text": "scalable solutions for all of these",
      "offset": 6131.92,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "steps, we can use Kubernetes to scale",
      "offset": 6133.36,
      "duration": 4.92
    },
    {
      "lang": "en",
      "text": "our deployments and our storage where",
      "offset": 6135.52,
      "duration": 5.199
    },
    {
      "lang": "en",
      "text": "needed. For example, let's assume that",
      "offset": 6138.28,
      "duration": 4.52
    },
    {
      "lang": "en",
      "text": "we have deployed five ports to perform",
      "offset": 6140.719,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "our transform step as shown in the",
      "offset": 6142.8,
      "duration": 4.319
    },
    {
      "lang": "en",
      "text": "figure. If these five ports cannot",
      "offset": 6145.199,
      "duration": 3.681
    },
    {
      "lang": "en",
      "text": "deliver enough throughput to transform",
      "offset": 6147.119,
      "duration": 4.241
    },
    {
      "lang": "en",
      "text": "all of our extracted data in due time,",
      "offset": 6148.88,
      "duration": 5.6
    },
    {
      "lang": "en",
      "text": "we could scale up the number of ports to",
      "offset": 6151.36,
      "duration": 6.24
    },
    {
      "lang": "en",
      "text": "six, seven or more. The same is true for",
      "offset": 6154.48,
      "duration": 5.199
    },
    {
      "lang": "en",
      "text": "storage. As the amount of data increases",
      "offset": 6157.6,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "in our pipeline, we can attach storage",
      "offset": 6159.679,
      "duration": 5.241
    },
    {
      "lang": "en",
      "text": "as needed and scale",
      "offset": 6162.32,
      "duration": 4.799
    },
    {
      "lang": "en",
      "text": "accordingly. Let us mention some typical",
      "offset": 6164.92,
      "duration": 3.88
    },
    {
      "lang": "en",
      "text": "open source tools and software that can",
      "offset": 6167.119,
      "duration": 3.04
    },
    {
      "lang": "en",
      "text": "be used for data pipelines in",
      "offset": 6168.8,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "Kubernetes. First of all, for extracting",
      "offset": 6170.159,
      "duration": 5.441
    },
    {
      "lang": "en",
      "text": "from various source systems, we can use",
      "offset": 6173.28,
      "duration": 4.2
    },
    {
      "lang": "en",
      "text": "tools like Apache Knifi and Apache",
      "offset": 6175.6,
      "duration": 5.079
    },
    {
      "lang": "en",
      "text": "Kafka. In particular, the Kafka connect",
      "offset": 6177.48,
      "duration": 5.639
    },
    {
      "lang": "en",
      "text": "ecosystem. For transforming data, there",
      "offset": 6180.679,
      "duration": 6.04
    },
    {
      "lang": "en",
      "text": "is Apache Spark. Again, Apache Kafka and",
      "offset": 6183.119,
      "duration": 6.921
    },
    {
      "lang": "en",
      "text": "databases that use SQL like",
      "offset": 6186.719,
      "duration": 6.48
    },
    {
      "lang": "en",
      "text": "PostgresQL for loading data into target",
      "offset": 6190.04,
      "duration": 5.96
    },
    {
      "lang": "en",
      "text": "data syncs. We can use Apache Spark,",
      "offset": 6193.199,
      "duration": 7.561
    },
    {
      "lang": "en",
      "text": "Apache Kafka, in particular KSQL and",
      "offset": 6196,
      "duration": 7.199
    },
    {
      "lang": "en",
      "text": "PostgresQL. For storage, we can deploy",
      "offset": 6200.76,
      "duration": 4.76
    },
    {
      "lang": "en",
      "text": "object stores like Minio or block",
      "offset": 6203.199,
      "duration": 4.04
    },
    {
      "lang": "en",
      "text": "storage like",
      "offset": 6205.52,
      "duration": 4.719
    },
    {
      "lang": "en",
      "text": "SE. In our last video, let us understand",
      "offset": 6207.239,
      "duration": 6.081
    },
    {
      "lang": "en",
      "text": "how MLOps and Kubernetes can work",
      "offset": 6210.239,
      "duration": 6.241
    },
    {
      "lang": "en",
      "text": "together. First of all, what is MLOps?",
      "offset": 6213.32,
      "duration": 5.799
    },
    {
      "lang": "en",
      "text": "MLOps or machine learning operations is",
      "offset": 6216.48,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "a paradigm to deploy and maintain ML",
      "offset": 6219.119,
      "duration": 4.641
    },
    {
      "lang": "en",
      "text": "models in production. It is a collection",
      "offset": 6221.36,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "of best practice workflows with strong",
      "offset": 6223.76,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "focus on continuous development and",
      "offset": 6225.84,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "constant improvement of models. It is",
      "offset": 6227.6,
      "duration": 5.119
    },
    {
      "lang": "en",
      "text": "inspired by DevOps which focuses on",
      "offset": 6230.239,
      "duration": 5.041
    },
    {
      "lang": "en",
      "text": "continuous development, deployment and",
      "offset": 6232.719,
      "duration": 5.361
    },
    {
      "lang": "en",
      "text": "operation of software solutions. Similar",
      "offset": 6235.28,
      "duration": 5.68
    },
    {
      "lang": "en",
      "text": "to DevOps, ML models as well as AI",
      "offset": 6238.08,
      "duration": 5.76
    },
    {
      "lang": "en",
      "text": "models or GI solutions are developed and",
      "offset": 6240.96,
      "duration": 5.679
    },
    {
      "lang": "en",
      "text": "tested inlet systems and then deployed",
      "offset": 6243.84,
      "duration": 5.279
    },
    {
      "lang": "en",
      "text": "to production. When productive, the",
      "offset": 6246.639,
      "duration": 4.881
    },
    {
      "lang": "en",
      "text": "models are continuously monitored. Their",
      "offset": 6249.119,
      "duration": 4.641
    },
    {
      "lang": "en",
      "text": "accuracy is constantly measured and",
      "offset": 6251.52,
      "duration": 4.36
    },
    {
      "lang": "en",
      "text": "improvements through retraining may be",
      "offset": 6253.76,
      "duration": 4.479
    },
    {
      "lang": "en",
      "text": "triggered. Data scientists, data",
      "offset": 6255.88,
      "duration": 4.68
    },
    {
      "lang": "en",
      "text": "engineers and IT teams can work together",
      "offset": 6258.239,
      "duration": 5.281
    },
    {
      "lang": "en",
      "text": "on deployed models synchronously, hence",
      "offset": 6260.56,
      "duration": 4.36
    },
    {
      "lang": "en",
      "text": "ensuring their",
      "offset": 6263.52,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "accuracy. Now this paradigm of MLOps",
      "offset": 6264.92,
      "duration": 5.56
    },
    {
      "lang": "en",
      "text": "maps very well to Kubernetes. The",
      "offset": 6267.84,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "isolated experimental systems that we",
      "offset": 6270.48,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "need for development and testing can",
      "offset": 6272.56,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "easily be realized by pods and",
      "offset": 6274.88,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "Kubernetes storage. Of course, we can",
      "offset": 6276.8,
      "duration": 5.359
    },
    {
      "lang": "en",
      "text": "monitor our productive ML models easily",
      "offset": 6279.28,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "by following the life cycle of our ports",
      "offset": 6282.159,
      "duration": 4.281
    },
    {
      "lang": "en",
      "text": "together with the images we have",
      "offset": 6284.8,
      "duration": 4.319
    },
    {
      "lang": "en",
      "text": "deployed. We can also work synchronously",
      "offset": 6286.44,
      "duration": 5.48
    },
    {
      "lang": "en",
      "text": "as a team on model accuracy as this is",
      "offset": 6289.119,
      "duration": 4.961
    },
    {
      "lang": "en",
      "text": "enabled from the very beginning by the",
      "offset": 6291.92,
      "duration": 3.56
    },
    {
      "lang": "en",
      "text": "architecture of",
      "offset": 6294.08,
      "duration": 4.159
    },
    {
      "lang": "en",
      "text": "Kubernetes for MLOps on Kubernetes.",
      "offset": 6295.48,
      "duration": 5.88
    },
    {
      "lang": "en",
      "text": "Several frameworks exist. The two best",
      "offset": 6298.239,
      "duration": 5.201
    },
    {
      "lang": "en",
      "text": "known open source solutions are MLflow",
      "offset": 6301.36,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "and CubeFlow.",
      "offset": 6303.44,
      "duration": 4.04
    },
    {
      "lang": "en",
      "text": "Let us have an overview of cubeflow",
      "offset": 6305.6,
      "duration": 4.559
    },
    {
      "lang": "en",
      "text": "here. Cubeflow is dedicated to making",
      "offset": 6307.48,
      "duration": 4.6
    },
    {
      "lang": "en",
      "text": "the deployment of ML workflows on",
      "offset": 6310.159,
      "duration": 4.241
    },
    {
      "lang": "en",
      "text": "Kubernetes very simple. It covers each",
      "offset": 6312.08,
      "duration": 4.639
    },
    {
      "lang": "en",
      "text": "step of the ML model life cycle. For",
      "offset": 6314.4,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "example, data gathering, data wrangling,",
      "offset": 6316.719,
      "duration": 4.561
    },
    {
      "lang": "en",
      "text": "model training and testing and",
      "offset": 6319.28,
      "duration": 4.959
    },
    {
      "lang": "en",
      "text": "deployment. Of course, CubeFlow consists",
      "offset": 6321.28,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "of several components which cover all of",
      "offset": 6324.239,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "these steps. Most important, all these",
      "offset": 6326.32,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "components work independently of each",
      "offset": 6328.639,
      "duration": 4.881
    },
    {
      "lang": "en",
      "text": "other. This enables maximum flexibility",
      "offset": 6330.4,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "and lets us create all types of",
      "offset": 6333.52,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "workflows easily. We can also use Python",
      "offset": 6335.6,
      "duration": 5.92
    },
    {
      "lang": "en",
      "text": "directly to develop and deploy ML models",
      "offset": 6338.96,
      "duration": 5.279
    },
    {
      "lang": "en",
      "text": "using CubeFlow. There's no need to use",
      "offset": 6341.52,
      "duration": 5.679
    },
    {
      "lang": "en",
      "text": "CubeCle here. We can interact directly",
      "offset": 6344.239,
      "duration": 5.161
    },
    {
      "lang": "en",
      "text": "with the Kubernetus",
      "offset": 6347.199,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "API. Let's wrap up what we have covered",
      "offset": 6349.4,
      "duration": 4.52
    },
    {
      "lang": "en",
      "text": "in this course.",
      "offset": 6352.239,
      "duration": 3.281
    },
    {
      "lang": "en",
      "text": "We started with an introduction to",
      "offset": 6353.92,
      "duration": 3.44
    },
    {
      "lang": "en",
      "text": "kubernetus and we have learned why",
      "offset": 6355.52,
      "duration": 4.639
    },
    {
      "lang": "en",
      "text": "kubernetus is a very good framework to",
      "offset": 6357.36,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "develop true cloudnative applications.",
      "offset": 6360.159,
      "duration": 5.121
    },
    {
      "lang": "en",
      "text": "After that we discussed the architecture",
      "offset": 6362.8,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "of kubernetus with the control plane",
      "offset": 6365.28,
      "duration": 4.2
    },
    {
      "lang": "en",
      "text": "nodes parts and",
      "offset": 6367.6,
      "duration": 4.639
    },
    {
      "lang": "en",
      "text": "services. Then we discussed storage and",
      "offset": 6369.48,
      "duration": 5
    },
    {
      "lang": "en",
      "text": "learned about persistent volumes volume",
      "offset": 6372.239,
      "duration": 5.281
    },
    {
      "lang": "en",
      "text": "claims and storage classes. We learned",
      "offset": 6374.48,
      "duration": 5.28
    },
    {
      "lang": "en",
      "text": "how to use cube cuddle the command line",
      "offset": 6377.52,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "interface to Kubernetes and had a",
      "offset": 6379.76,
      "duration": 4.359
    },
    {
      "lang": "en",
      "text": "detailed look into Kubernetes",
      "offset": 6381.84,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "manifests. We have seen how to deploy",
      "offset": 6384.119,
      "duration": 4.201
    },
    {
      "lang": "en",
      "text": "different types of applications using",
      "offset": 6386.56,
      "duration": 4.559
    },
    {
      "lang": "en",
      "text": "deployments and stateful sets.",
      "offset": 6388.32,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "Additionally, we attached persistent",
      "offset": 6391.119,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "storage to our applications of course",
      "offset": 6393.04,
      "duration": 5.679
    },
    {
      "lang": "en",
      "text": "the Kubernetes way. Finally, we applied",
      "offset": 6395.119,
      "duration": 6.08
    },
    {
      "lang": "en",
      "text": "all these concepts to data pipelines and",
      "offset": 6398.719,
      "duration": 5.121
    },
    {
      "lang": "en",
      "text": "we have seen how Kubernetes can support",
      "offset": 6401.199,
      "duration": 5.681
    },
    {
      "lang": "en",
      "text": "ETL and ELT workflows.",
      "offset": 6403.84,
      "duration": 4.799
    },
    {
      "lang": "en",
      "text": "We also explained how Kubernetes",
      "offset": 6406.88,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "supports MLOps and we have deployed a",
      "offset": 6408.639,
      "duration": 6.08
    },
    {
      "lang": "en",
      "text": "simple MLOps workflow. There's a lot of",
      "offset": 6411.52,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "where we can go from here. Security is",
      "offset": 6414.719,
      "duration": 4.081
    },
    {
      "lang": "en",
      "text": "one of the first subjects to dive deeper",
      "offset": 6416.88,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "into by learning more about service",
      "offset": 6418.8,
      "duration": 5.359
    },
    {
      "lang": "en",
      "text": "accounts, secrets, role-based access",
      "offset": 6421.28,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "management and more. We can deploy",
      "offset": 6424.159,
      "duration": 3.841
    },
    {
      "lang": "en",
      "text": "applications that are not only rock",
      "offset": 6426.32,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "solid and scalable but also comply with",
      "offset": 6428,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "highest security standards. Next step",
      "offset": 6430.32,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "could be Helm, Hamm charts and",
      "offset": 6432.96,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "Kubernetes operators. These are advanced",
      "offset": 6434.8,
      "duration": 5.359
    },
    {
      "lang": "en",
      "text": "tools that help to deploy packaged",
      "offset": 6437.84,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "applications and to maintain these in an",
      "offset": 6440.159,
      "duration": 5.361
    },
    {
      "lang": "en",
      "text": "easy way. Furthermore, advanced storage",
      "offset": 6442.32,
      "duration": 5.839
    },
    {
      "lang": "en",
      "text": "concepts are worth learning. Rook",
      "offset": 6445.52,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "operators and SE allow for scalable",
      "offset": 6448.159,
      "duration": 4.601
    },
    {
      "lang": "en",
      "text": "storage concepts for any kind of",
      "offset": 6450.4,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "application. CI/CD is another topic to",
      "offset": 6452.76,
      "duration": 5.24
    },
    {
      "lang": "en",
      "text": "explore. Kubernetes can be used for",
      "offset": 6455.52,
      "duration": 4.199
    },
    {
      "lang": "en",
      "text": "automated building and testing of",
      "offset": 6458,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "software and we can create the CI/CD",
      "offset": 6459.719,
      "duration": 5.881
    },
    {
      "lang": "en",
      "text": "pipelines we need. And last but not",
      "offset": 6462.56,
      "duration": 6.159
    },
    {
      "lang": "en",
      "text": "least, serverless applications is a",
      "offset": 6465.6,
      "duration": 6.48
    },
    {
      "lang": "en",
      "text": "subject worth diving into. K native",
      "offset": 6468.719,
      "duration": 5.361
    },
    {
      "lang": "en",
      "text": "enables us to deploy serverless",
      "offset": 6472.08,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "functions on Kubernetes so we can use",
      "offset": 6474.08,
      "duration": 6.96
    },
    {
      "lang": "en",
      "text": "our resources extremely efficiently.",
      "offset": 6476.8,
      "duration": 5.68
    },
    {
      "lang": "en",
      "text": "Welcome to the course covering the",
      "offset": 6481.04,
      "duration": 3.52
    },
    {
      "lang": "en",
      "text": "intermediate use of Docker. I'm Mike",
      "offset": 6482.48,
      "duration": 3.759
    },
    {
      "lang": "en",
      "text": "Mezer, a consultant in the data",
      "offset": 6484.56,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "engineering space for over 10 years.",
      "offset": 6486.239,
      "duration": 3.681
    },
    {
      "lang": "en",
      "text": "This course will take your knowledge of",
      "offset": 6488.56,
      "duration": 3.2
    },
    {
      "lang": "en",
      "text": "Docker to the next level and help you",
      "offset": 6489.92,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "utilize containers in your data career.",
      "offset": 6491.76,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "Let's get started. As a quick refresher,",
      "offset": 6493.84,
      "duration": 5.68
    },
    {
      "lang": "en",
      "text": "let's review a bit about Docker. Docker",
      "offset": 6496.8,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "is a container runtime, meaning it is a",
      "offset": 6499.52,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "tool designed to run and manage various",
      "offset": 6501.6,
      "duration": 3.8
    },
    {
      "lang": "en",
      "text": "containerized",
      "offset": 6503.84,
      "duration": 3.279
    },
    {
      "lang": "en",
      "text": "applications. There are versions of",
      "offset": 6505.4,
      "duration": 3.96
    },
    {
      "lang": "en",
      "text": "Docker for all major operating systems,",
      "offset": 6507.119,
      "duration": 5.441
    },
    {
      "lang": "en",
      "text": "including Windows, Mac, and Linux. We",
      "offset": 6509.36,
      "duration": 4.879
    },
    {
      "lang": "en",
      "text": "can run containers using pre-built",
      "offset": 6512.56,
      "duration": 4.559
    },
    {
      "lang": "en",
      "text": "images or create our own images. Docker",
      "offset": 6514.239,
      "duration": 5.121
    },
    {
      "lang": "en",
      "text": "uses Docker files, which are text files",
      "offset": 6517.119,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "that act like instructions to create a",
      "offset": 6519.36,
      "duration": 3
    },
    {
      "lang": "en",
      "text": "new Docker",
      "offset": 6521.119,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "image. Finally, remember that containers",
      "offset": 6522.36,
      "duration": 4.6
    },
    {
      "lang": "en",
      "text": "and Docker are instances of a given",
      "offset": 6525.119,
      "duration": 4.641
    },
    {
      "lang": "en",
      "text": "Docker image. Please note that this",
      "offset": 6526.96,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "content is covered within Data Camp's",
      "offset": 6529.76,
      "duration": 3.52
    },
    {
      "lang": "en",
      "text": "introductory Docker course, which should",
      "offset": 6531.52,
      "duration": 4.639
    },
    {
      "lang": "en",
      "text": "be taken prior to this course.",
      "offset": 6533.28,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "From our previous experience with",
      "offset": 6536.159,
      "duration": 3.281
    },
    {
      "lang": "en",
      "text": "Docker, we've used several commands,",
      "offset": 6537.52,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "including Docker run, Docker stop, and",
      "offset": 6539.44,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "Docker build. We'll cover more about",
      "offset": 6542,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "these commands and many others",
      "offset": 6544.32,
      "duration": 2.359
    },
    {
      "lang": "en",
      "text": "throughout this",
      "offset": 6545.6,
      "duration": 3.519
    },
    {
      "lang": "en",
      "text": "course. Before continuing, look at one",
      "offset": 6546.679,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "of the most useful commands,",
      "offset": 6549.119,
      "duration": 6.08
    },
    {
      "lang": "en",
      "text": "docker-help. Docker-help provides a list",
      "offset": 6552.199,
      "duration": 4.44
    },
    {
      "lang": "en",
      "text": "of the available commands within the",
      "offset": 6555.199,
      "duration": 4.081
    },
    {
      "lang": "en",
      "text": "Docker tool set. for each of these",
      "offset": 6556.639,
      "duration": 4.761
    },
    {
      "lang": "en",
      "text": "commands, sometimes called",
      "offset": 6559.28,
      "duration": 5.399
    },
    {
      "lang": "en",
      "text": "subcommands. You can also run docker",
      "offset": 6561.4,
      "duration": 5.56
    },
    {
      "lang": "en",
      "text": "command--help to get further information",
      "offset": 6564.679,
      "duration": 4.081
    },
    {
      "lang": "en",
      "text": "about each individual",
      "offset": 6566.96,
      "duration": 5.08
    },
    {
      "lang": "en",
      "text": "command. For example, you can use docker",
      "offset": 6568.76,
      "duration": 5.399
    },
    {
      "lang": "en",
      "text": "run--help to get more specific",
      "offset": 6572.04,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "information about the docker run",
      "offset": 6574.159,
      "duration": 4.721
    },
    {
      "lang": "en",
      "text": "command. Docker containers are typically",
      "offset": 6576.36,
      "duration": 5.24
    },
    {
      "lang": "en",
      "text": "created with the docker run command. In",
      "offset": 6578.88,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "the default configuration, these",
      "offset": 6581.6,
      "duration": 3.36
    },
    {
      "lang": "en",
      "text": "containers will remain even after",
      "offset": 6583.28,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "stopping or exiting. While this is the",
      "offset": 6584.96,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "default behavior, there are situations",
      "offset": 6587.84,
      "duration": 3.12
    },
    {
      "lang": "en",
      "text": "where you'd like to run a container",
      "offset": 6589.6,
      "duration": 3.88
    },
    {
      "lang": "en",
      "text": "instance and remove it immediately upon",
      "offset": 6590.96,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "exit. These situations can include",
      "offset": 6593.48,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "development, testing, or running",
      "offset": 6595.84,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "scripts. Docker provides an option to do",
      "offset": 6598.52,
      "duration": 5.119
    },
    {
      "lang": "en",
      "text": "this automatically using the docker",
      "offset": 6601.04,
      "duration": 5.92
    },
    {
      "lang": "en",
      "text": "run-m command. For example, if you",
      "offset": 6603.639,
      "duration": 4.841
    },
    {
      "lang": "en",
      "text": "wanted to run a quick shell prompt in",
      "offset": 6606.96,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "the latest version of Alpine and remove",
      "offset": 6608.48,
      "duration": 2.84
    },
    {
      "lang": "en",
      "text": "it",
      "offset": 6610.56,
      "duration": 4.119
    },
    {
      "lang": "en",
      "text": "automatically, you could use docker",
      "offset": 6611.32,
      "duration": 7.56
    },
    {
      "lang": "en",
      "text": "run--run alpine colon",
      "offset": 6614.679,
      "duration": 4.201
    },
    {
      "lang": "en",
      "text": "latest/bin/sh. Note that Alpine is a",
      "offset": 6620.36,
      "duration": 4.12
    },
    {
      "lang": "en",
      "text": "Linux distribution designed to take up",
      "offset": 6622.56,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "very little space like Ubuntu, but",
      "offset": 6624.48,
      "duration": 4.639
    },
    {
      "lang": "en",
      "text": "smaller, making ideal for use with",
      "offset": 6626.96,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "containers.",
      "offset": 6629.119,
      "duration": 3.52
    },
    {
      "lang": "en",
      "text": "We'll cover space optimization later,",
      "offset": 6630.8,
      "duration": 2.96
    },
    {
      "lang": "en",
      "text": "but you will see many different",
      "offset": 6632.639,
      "duration": 3.641
    },
    {
      "lang": "en",
      "text": "container images used in this",
      "offset": 6633.76,
      "duration": 4.6
    },
    {
      "lang": "en",
      "text": "course. The last",
      "offset": 6636.28,
      "duration": 4.12
    },
    {
      "lang": "en",
      "text": "slashbin/sh is required on some",
      "offset": 6638.36,
      "duration": 4.12
    },
    {
      "lang": "en",
      "text": "containers to specify what program to",
      "offset": 6640.4,
      "duration": 3.719
    },
    {
      "lang": "en",
      "text": "run inside the",
      "offset": 6642.48,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "container. In this case, we want to run",
      "offset": 6644.119,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "a shell, which is",
      "offset": 6646.32,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "/bin/sh. This command line option is",
      "offset": 6649.159,
      "duration": 4.401
    },
    {
      "lang": "en",
      "text": "referenced as cleanup or",
      "offset": 6651.52,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "remove. A command we'll use extremely",
      "offset": 6653.56,
      "duration": 5
    },
    {
      "lang": "en",
      "text": "often is the docker ps command. We'll",
      "offset": 6656,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "cover some of its capabilities in more",
      "offset": 6658.56,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "depth here and later in this course. The",
      "offset": 6660.32,
      "duration": 4.879
    },
    {
      "lang": "en",
      "text": "docker ps command is used to determine",
      "offset": 6663.04,
      "duration": 5.679
    },
    {
      "lang": "en",
      "text": "the name, ID, running status, and other",
      "offset": 6665.199,
      "duration": 5.201
    },
    {
      "lang": "en",
      "text": "attributes of all the containers running",
      "offset": 6668.719,
      "duration": 4.721
    },
    {
      "lang": "en",
      "text": "with Docker on the local system. Not all",
      "offset": 6670.4,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "this information is printed each time,",
      "offset": 6673.44,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "so we can use the - a flag to see",
      "offset": 6675.36,
      "duration": 4.6
    },
    {
      "lang": "en",
      "text": "further information about existing",
      "offset": 6677.44,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "containers. We will also cover other",
      "offset": 6679.96,
      "duration": 3.8
    },
    {
      "lang": "en",
      "text": "commands to get extremely detailed",
      "offset": 6682.08,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "container information later on.",
      "offset": 6683.76,
      "duration": 5.919
    },
    {
      "lang": "en",
      "text": "Welcome back. Now we will look at how to",
      "offset": 6687.44,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "share information between our containers",
      "offset": 6689.679,
      "duration": 4.721
    },
    {
      "lang": "en",
      "text": "and the host system. Let's get started.",
      "offset": 6691.6,
      "duration": 4.639
    },
    {
      "lang": "en",
      "text": "Let's consider a container instances",
      "offset": 6694.4,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "file system for a moment. Each container",
      "offset": 6696.239,
      "duration": 4.561
    },
    {
      "lang": "en",
      "text": "instance has its own file system which",
      "offset": 6698.88,
      "duration": 3.96
    },
    {
      "lang": "en",
      "text": "is based on the image it was created",
      "offset": 6700.8,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "with. Changes can be made to the file",
      "offset": 6702.84,
      "duration": 4.2
    },
    {
      "lang": "en",
      "text": "system but are tied to that instance",
      "offset": 6705.28,
      "duration": 4.319
    },
    {
      "lang": "en",
      "text": "only. If we restart the container, the",
      "offset": 6707.04,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "changes stay but only for that specific",
      "offset": 6709.599,
      "duration": 4.721
    },
    {
      "lang": "en",
      "text": "instance. they do not apply to the other",
      "offset": 6711.84,
      "duration": 4.6
    },
    {
      "lang": "en",
      "text": "instances of that same container",
      "offset": 6714.32,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "image. If we create a new container",
      "offset": 6716.44,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "instance, it will not have those",
      "offset": 6718.88,
      "duration": 4.239
    },
    {
      "lang": "en",
      "text": "changes. You can see a quick example of",
      "offset": 6720.76,
      "duration": 4.6
    },
    {
      "lang": "en",
      "text": "this in the diagram. We have our",
      "offset": 6723.119,
      "duration": 3.921
    },
    {
      "lang": "en",
      "text": "original docker image and create",
      "offset": 6725.36,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "container 1 and container 2. Container 1",
      "offset": 6727.04,
      "duration": 7.199
    },
    {
      "lang": "en",
      "text": "has a file in /home called new file. As",
      "offset": 6730.8,
      "duration": 5.28
    },
    {
      "lang": "en",
      "text": "this file was not created on container",
      "offset": 6734.239,
      "duration": 4.641
    },
    {
      "lang": "en",
      "text": "2, it is not present there.",
      "offset": 6736.08,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "Rather than modifying the contents of",
      "offset": 6738.88,
      "duration": 3.279
    },
    {
      "lang": "en",
      "text": "our running containers or always",
      "offset": 6740.56,
      "duration": 3.679
    },
    {
      "lang": "en",
      "text": "creating new Docker images, we can",
      "offset": 6742.159,
      "duration": 3.761
    },
    {
      "lang": "en",
      "text": "attach files or directories from the",
      "offset": 6744.239,
      "duration": 3.161
    },
    {
      "lang": "en",
      "text": "host system to a",
      "offset": 6745.92,
      "duration": 3.36
    },
    {
      "lang": "en",
      "text": "container. This allows for the",
      "offset": 6747.4,
      "duration": 4.36
    },
    {
      "lang": "en",
      "text": "persistence of data, whether log files,",
      "offset": 6749.28,
      "duration": 4.959
    },
    {
      "lang": "en",
      "text": "database files, configuration files, and",
      "offset": 6751.76,
      "duration": 4.479
    },
    {
      "lang": "en",
      "text": "so on without the requirement of",
      "offset": 6754.239,
      "duration": 3.801
    },
    {
      "lang": "en",
      "text": "maintaining a specific",
      "offset": 6756.239,
      "duration": 4.081
    },
    {
      "lang": "en",
      "text": "container. We can use Docker to upgrade",
      "offset": 6758.04,
      "duration": 4.119
    },
    {
      "lang": "en",
      "text": "the container to a newer version, but",
      "offset": 6760.32,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "safely keep all of our data separate.",
      "offset": 6762.159,
      "duration": 5.201
    },
    {
      "lang": "en",
      "text": "This technique known as a bind mount is",
      "offset": 6764.88,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "one of a few options to share data",
      "offset": 6767.36,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "between host and container. We'll",
      "offset": 6769.04,
      "duration": 4.52
    },
    {
      "lang": "en",
      "text": "discuss some other options later in this",
      "offset": 6771.36,
      "duration": 5.279
    },
    {
      "lang": "en",
      "text": "chapter. A bind mount can be read only",
      "offset": 6773.56,
      "duration": 4.92
    },
    {
      "lang": "en",
      "text": "where the container can see the data but",
      "offset": 6776.639,
      "duration": 4.321
    },
    {
      "lang": "en",
      "text": "cannot change it. The bind mount can",
      "offset": 6778.48,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "also be readr but in this case only one",
      "offset": 6780.96,
      "duration": 4.759
    },
    {
      "lang": "en",
      "text": "container can modify the contents at a",
      "offset": 6783.52,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "time. Once attached files or directories",
      "offset": 6785.719,
      "duration": 5.081
    },
    {
      "lang": "en",
      "text": "are not accessible to the host until the",
      "offset": 6788.88,
      "duration": 4.799
    },
    {
      "lang": "en",
      "text": "container using them is shut down. A",
      "offset": 6790.8,
      "duration": 4.879
    },
    {
      "lang": "en",
      "text": "bind mount is usually defined using the",
      "offset": 6793.679,
      "duration": 5.761
    },
    {
      "lang": "en",
      "text": "-v flag specifically with -v source",
      "offset": 6795.679,
      "duration": 6.401
    },
    {
      "lang": "en",
      "text": "colon destination. The source is the",
      "offset": 6799.44,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "file or directory on the host's file",
      "offset": 6802.08,
      "duration": 4.079
    },
    {
      "lang": "en",
      "text": "system to be shared and the destination",
      "offset": 6803.84,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "is the location within the container",
      "offset": 6806.159,
      "duration": 4.281
    },
    {
      "lang": "en",
      "text": "file system where the source data will",
      "offset": 6808.08,
      "duration": 5.039
    },
    {
      "lang": "en",
      "text": "appear. Multiple -v commands are",
      "offset": 6810.44,
      "duration": 5.4
    },
    {
      "lang": "en",
      "text": "permitted per container. The maximum",
      "offset": 6813.119,
      "duration": 4.961
    },
    {
      "lang": "en",
      "text": "number varies, but generally you can add",
      "offset": 6815.84,
      "duration": 4.52
    },
    {
      "lang": "en",
      "text": "at least 16 bind mounts per",
      "offset": 6818.08,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "container. In addition to the -v flag,",
      "offset": 6820.36,
      "duration": 4.92
    },
    {
      "lang": "en",
      "text": "there is a more verbose option, the",
      "offset": 6823.28,
      "duration": 5.68
    },
    {
      "lang": "en",
      "text": "d-mount flag. We won't cover this here,",
      "offset": 6825.28,
      "duration": 5.68
    },
    {
      "lang": "en",
      "text": "but it tends to permit more specific",
      "offset": 6828.96,
      "duration": 4.36
    },
    {
      "lang": "en",
      "text": "options than are available with",
      "offset": 6830.96,
      "duration": 5.199
    },
    {
      "lang": "en",
      "text": "-v. One note is that a bind mount will",
      "offset": 6833.32,
      "duration": 4.919
    },
    {
      "lang": "en",
      "text": "hide any files or subdirectories that",
      "offset": 6836.159,
      "duration": 3.641
    },
    {
      "lang": "en",
      "text": "exist within the",
      "offset": 6838.239,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "container. In other words, if we bind",
      "offset": 6839.8,
      "duration": 5.359
    },
    {
      "lang": "en",
      "text": "mount the /data directory to",
      "offset": 6842.159,
      "duration": 5.401
    },
    {
      "lang": "en",
      "text": "/home/mydata, anything present in",
      "offset": 6845.159,
      "duration": 4.681
    },
    {
      "lang": "en",
      "text": "/home/mydata in the container image is",
      "offset": 6847.56,
      "duration": 4.2
    },
    {
      "lang": "en",
      "text": "not accessible.",
      "offset": 6849.84,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "Here are two examples of using bind",
      "offset": 6851.76,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "mounts. The first is an EngineX web",
      "offset": 6853.52,
      "duration": 4.44
    },
    {
      "lang": "en",
      "text": "server container attaching the",
      "offset": 6856,
      "duration": 6.08
    },
    {
      "lang": "en",
      "text": "hosts/HTML directory to the",
      "offset": 6857.96,
      "duration": 4.12
    },
    {
      "lang": "en",
      "text": "/varwww/HTML directory within the",
      "offset": 6862.119,
      "duration": 5.721
    },
    {
      "lang": "en",
      "text": "container. The second attaches the /pg",
      "offset": 6864.679,
      "duration": 5.881
    },
    {
      "lang": "en",
      "text": "data directory and the pg.com file on",
      "offset": 6867.84,
      "duration": 4.279
    },
    {
      "lang": "en",
      "text": "the host to the",
      "offset": 6870.56,
      "duration": 5.159
    },
    {
      "lang": "en",
      "text": "/opdata directory and /",
      "offset": 6872.119,
      "duration": 6.201
    },
    {
      "lang": "en",
      "text": "etsy/pg.com file in the Postgrrisql",
      "offset": 6875.719,
      "duration": 5.081
    },
    {
      "lang": "en",
      "text": "container respectively.",
      "offset": 6878.32,
      "duration": 4.319
    },
    {
      "lang": "en",
      "text": "Note that in all these examples, the",
      "offset": 6880.8,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "local path must either start with a dot",
      "offset": 6882.639,
      "duration": 5.641
    },
    {
      "lang": "en",
      "text": "slash or be a full path to the",
      "offset": 6884.8,
      "duration": 6.2
    },
    {
      "lang": "en",
      "text": "file. Welcome to networking with",
      "offset": 6888.28,
      "duration": 5.16
    },
    {
      "lang": "en",
      "text": "Docker. Before discussing Docker's",
      "offset": 6891,
      "duration": 4.44
    },
    {
      "lang": "en",
      "text": "networking capabilities, we'll review",
      "offset": 6893.44,
      "duration": 3.56
    },
    {
      "lang": "en",
      "text": "its terms and",
      "offset": 6895.44,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "concepts. Please note this video is not",
      "offset": 6897,
      "duration": 3.96
    },
    {
      "lang": "en",
      "text": "meant to be a true introduction to",
      "offset": 6899.44,
      "duration": 2.52
    },
    {
      "lang": "en",
      "text": "computer",
      "offset": 6900.96,
      "duration": 3.52
    },
    {
      "lang": "en",
      "text": "networking. A computer network consists",
      "offset": 6901.96,
      "duration": 4.84
    },
    {
      "lang": "en",
      "text": "of systems communicating via a defined",
      "offset": 6904.48,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "method to share information.",
      "offset": 6906.8,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "There are among others physical and",
      "offset": 6909.28,
      "duration": 3.08
    },
    {
      "lang": "en",
      "text": "logical",
      "offset": 6911.36,
      "duration": 3.359
    },
    {
      "lang": "en",
      "text": "networks. Common physical networks",
      "offset": 6912.36,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "include wired Ethernet and",
      "offset": 6914.719,
      "duration": 5.361
    },
    {
      "lang": "en",
      "text": "Wi-Fi. Logical networking includes TCP",
      "offset": 6916.92,
      "duration": 5.719
    },
    {
      "lang": "en",
      "text": "IP and application level protocols like",
      "offset": 6920.08,
      "duration": 6.599
    },
    {
      "lang": "en",
      "text": "HTTP for web communication and SMTP for",
      "offset": 6922.639,
      "duration": 6.641
    },
    {
      "lang": "en",
      "text": "email. Networks are defined in various",
      "offset": 6926.679,
      "duration": 5.321
    },
    {
      "lang": "en",
      "text": "layers or levels. The combination of",
      "offset": 6929.28,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "various components is referred to as a",
      "offset": 6932,
      "duration": 3
    },
    {
      "lang": "en",
      "text": "networking",
      "offset": 6934,
      "duration": 3.599
    },
    {
      "lang": "en",
      "text": "stack. Given the depth of information",
      "offset": 6935,
      "duration": 4.679
    },
    {
      "lang": "en",
      "text": "regarding computer networks, we will",
      "offset": 6937.599,
      "duration": 3.841
    },
    {
      "lang": "en",
      "text": "cover a set of terms you might encounter",
      "offset": 6939.679,
      "duration": 3
    },
    {
      "lang": "en",
      "text": "while working with",
      "offset": 6941.44,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "Docker. The first term is host, a",
      "offset": 6942.679,
      "duration": 4.241
    },
    {
      "lang": "en",
      "text": "general term for a",
      "offset": 6945.36,
      "duration": 5.08
    },
    {
      "lang": "en",
      "text": "computer. A network is a group of",
      "offset": 6946.92,
      "duration": 6.199
    },
    {
      "lang": "en",
      "text": "hosts. An interface is a connection from",
      "offset": 6950.44,
      "duration": 5.92
    },
    {
      "lang": "en",
      "text": "a host to a network such as Ethernet or",
      "offset": 6953.119,
      "duration": 5.761
    },
    {
      "lang": "en",
      "text": "Wi-Fi. Note that an interface can be",
      "offset": 6956.36,
      "duration": 4.359
    },
    {
      "lang": "en",
      "text": "virtual, meaning it's entirely in",
      "offset": 6958.88,
      "duration": 3.759
    },
    {
      "lang": "en",
      "text": "software.",
      "offset": 6960.719,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "A LAN references a local area network, a",
      "offset": 6962.639,
      "duration": 5.08
    },
    {
      "lang": "en",
      "text": "set of computers at a given",
      "offset": 6965.599,
      "duration": 5.361
    },
    {
      "lang": "en",
      "text": "location. There is also the term VLAN, a",
      "offset": 6967.719,
      "duration": 5.201
    },
    {
      "lang": "en",
      "text": "virtual or softwarebased",
      "offset": 6970.96,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "LAN. You've probably heard the term IP",
      "offset": 6972.92,
      "duration": 4.84
    },
    {
      "lang": "en",
      "text": "or internet protocol, a method to",
      "offset": 6975.52,
      "duration": 4.679
    },
    {
      "lang": "en",
      "text": "connect between networks using IP",
      "offset": 6977.76,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "addresses. There are two types of IP",
      "offset": 6980.199,
      "duration": 5.761
    },
    {
      "lang": "en",
      "text": "addresses in use today. The first being",
      "offset": 6982.4,
      "duration": 6.719
    },
    {
      "lang": "en",
      "text": "IPv4. IPv4 is currently in use and",
      "offset": 6985.96,
      "duration": 5.239
    },
    {
      "lang": "en",
      "text": "supports approximately 4.2 2 billion",
      "offset": 6989.119,
      "duration": 4.321
    },
    {
      "lang": "en",
      "text": "addresses, though many are reserved for",
      "offset": 6991.199,
      "duration": 3.081
    },
    {
      "lang": "en",
      "text": "special",
      "offset": 6993.44,
      "duration": 3.199
    },
    {
      "lang": "en",
      "text": "purposes. The address space is currently",
      "offset": 6994.28,
      "duration": 4.439
    },
    {
      "lang": "en",
      "text": "exhausted, meaning all addresses have",
      "offset": 6996.639,
      "duration": 3.161
    },
    {
      "lang": "en",
      "text": "been",
      "offset": 6998.719,
      "duration": 3.841
    },
    {
      "lang": "en",
      "text": "allocated. IPv6 is the newer version of",
      "offset": 6999.8,
      "duration": 4.76
    },
    {
      "lang": "en",
      "text": "IP and supports significantly more",
      "offset": 7002.56,
      "duration": 4.52
    },
    {
      "lang": "en",
      "text": "addresses and is still being",
      "offset": 7004.56,
      "duration": 5.119
    },
    {
      "lang": "en",
      "text": "deployed. TCP is the transmission",
      "offset": 7007.08,
      "duration": 5.079
    },
    {
      "lang": "en",
      "text": "control protocol and is used to reliably",
      "offset": 7009.679,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "communicate between hosts on an IP",
      "offset": 7012.159,
      "duration": 3.841
    },
    {
      "lang": "en",
      "text": "network.",
      "offset": 7014.239,
      "duration": 4.241
    },
    {
      "lang": "en",
      "text": "UDP is the user datagramgram protocol",
      "offset": 7016,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "and can communicate between hosts over",
      "offset": 7018.48,
      "duration": 6.28
    },
    {
      "lang": "en",
      "text": "IP where reliable communication is not",
      "offset": 7020.8,
      "duration": 7.439
    },
    {
      "lang": "en",
      "text": "required. Both TCP and UDP require a",
      "offset": 7024.76,
      "duration": 5.399
    },
    {
      "lang": "en",
      "text": "port value, a method to address",
      "offset": 7028.239,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "different services on a given host via",
      "offset": 7030.159,
      "duration": 3.721
    },
    {
      "lang": "en",
      "text": "TCP or",
      "offset": 7032.239,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "UDP. The port is a value between 0 and",
      "offset": 7033.88,
      "duration": 6.319
    },
    {
      "lang": "en",
      "text": "65,535.",
      "offset": 7037.199,
      "duration": 3
    },
    {
      "lang": "en",
      "text": "Values below 1,024 are typically",
      "offset": 7040.96,
      "duration": 5.239
    },
    {
      "lang": "en",
      "text": "reserved for privileged accounts like",
      "offset": 7043.679,
      "duration": 5.92
    },
    {
      "lang": "en",
      "text": "root. Values above 1024 are usually",
      "offset": 7046.199,
      "duration": 6.161
    },
    {
      "lang": "en",
      "text": "referred to as ephemeral or temporary",
      "offset": 7049.599,
      "duration": 5.681
    },
    {
      "lang": "en",
      "text": "ports. Another important concept is that",
      "offset": 7052.36,
      "duration": 4.839
    },
    {
      "lang": "en",
      "text": "application servers are said to listen",
      "offset": 7055.28,
      "duration": 3.24
    },
    {
      "lang": "en",
      "text": "on a given",
      "offset": 7057.199,
      "duration": 3.601
    },
    {
      "lang": "en",
      "text": "port. This means that it waits for new",
      "offset": 7058.52,
      "duration": 4.44
    },
    {
      "lang": "en",
      "text": "connections on that port and responds to",
      "offset": 7060.8,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "clients from it.",
      "offset": 7062.96,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "HTTP is an application protocol",
      "offset": 7064.96,
      "duration": 6.12
    },
    {
      "lang": "en",
      "text": "defaulting to TCP port 80 for web",
      "offset": 7067.52,
      "duration": 5.84
    },
    {
      "lang": "en",
      "text": "communication. There is also the secure",
      "offset": 7071.08,
      "duration": 3.36
    },
    {
      "lang": "en",
      "text": "version",
      "offset": 7073.36,
      "duration": 4.279
    },
    {
      "lang": "en",
      "text": "HTTPS running over port",
      "offset": 7074.44,
      "duration": 6.52
    },
    {
      "lang": "en",
      "text": "443. SMTP is an email transfer protocol",
      "offset": 7077.639,
      "duration": 6.241
    },
    {
      "lang": "en",
      "text": "and uses TCP port",
      "offset": 7080.96,
      "duration": 6.88
    },
    {
      "lang": "en",
      "text": "25. SNMP, a network management protocol,",
      "offset": 7083.88,
      "duration": 7.56
    },
    {
      "lang": "en",
      "text": "uses UDP port 161.",
      "offset": 7087.84,
      "duration": 5.359
    },
    {
      "lang": "en",
      "text": "Docker has extensive networking",
      "offset": 7091.44,
      "duration": 3.759
    },
    {
      "lang": "en",
      "text": "capabilities and can facilitate",
      "offset": 7093.199,
      "duration": 3.841
    },
    {
      "lang": "en",
      "text": "communications between containers and",
      "offset": 7095.199,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "the host system. Depending on the",
      "offset": 7097.04,
      "duration": 4.079
    },
    {
      "lang": "en",
      "text": "settings, it can also allow",
      "offset": 7099.679,
      "duration": 3.681
    },
    {
      "lang": "en",
      "text": "communication with external hosts or the",
      "offset": 7101.119,
      "duration": 3.641
    },
    {
      "lang": "en",
      "text": "wider",
      "offset": 7103.36,
      "duration": 3.759
    },
    {
      "lang": "en",
      "text": "internet. Typically, communication is",
      "offset": 7104.76,
      "duration": 3.959
    },
    {
      "lang": "en",
      "text": "handled by exposing ports from",
      "offset": 7107.119,
      "duration": 3.52
    },
    {
      "lang": "en",
      "text": "containers to the host and acts like a",
      "offset": 7108.719,
      "duration": 3.4
    },
    {
      "lang": "en",
      "text": "translation between",
      "offset": 7110.639,
      "duration": 4.161
    },
    {
      "lang": "en",
      "text": "them. Containers can have their own IP",
      "offset": 7112.119,
      "duration": 4.201
    },
    {
      "lang": "en",
      "text": "addresses.",
      "offset": 7114.8,
      "duration": 4.319
    },
    {
      "lang": "en",
      "text": "You can use the command if config or the",
      "offset": 7116.32,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "command IP adder show to view the",
      "offset": 7119.119,
      "duration": 5.08
    },
    {
      "lang": "en",
      "text": "interfaces an IP is",
      "offset": 7121.84,
      "duration": 4.799
    },
    {
      "lang": "en",
      "text": "assigned. You can also add the interface",
      "offset": 7124.199,
      "duration": 4.561
    },
    {
      "lang": "en",
      "text": "name to see a specific",
      "offset": 7126.639,
      "duration": 4.801
    },
    {
      "lang": "en",
      "text": "interface. Look at the if config example",
      "offset": 7128.76,
      "duration": 5.72
    },
    {
      "lang": "en",
      "text": "and the IPv4 and IPv6 addresses outlined",
      "offset": 7131.44,
      "duration": 6
    },
    {
      "lang": "en",
      "text": "in red. Note that the interfaces here",
      "offset": 7134.48,
      "duration": 5.88
    },
    {
      "lang": "en",
      "text": "are virtual between the host and the",
      "offset": 7137.44,
      "duration": 5.199
    },
    {
      "lang": "en",
      "text": "containers. Finally, you can use the",
      "offset": 7140.36,
      "duration": 4.239
    },
    {
      "lang": "en",
      "text": "ping command to verify",
      "offset": 7142.639,
      "duration": 4.881
    },
    {
      "lang": "en",
      "text": "connectivity. The - C flag requires a",
      "offset": 7144.599,
      "duration": 4.761
    },
    {
      "lang": "en",
      "text": "count for the number of pings and the",
      "offset": 7147.52,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "host you wish to connect to, such as an",
      "offset": 7149.36,
      "duration": 4.6
    },
    {
      "lang": "en",
      "text": "IP address or a host",
      "offset": 7151.36,
      "duration": 5.319
    },
    {
      "lang": "en",
      "text": "name. Nice work on those last",
      "offset": 7153.96,
      "duration": 4.84
    },
    {
      "lang": "en",
      "text": "exercises. Let's take a look at another",
      "offset": 7156.679,
      "duration": 3.641
    },
    {
      "lang": "en",
      "text": "method to store data with Docker",
      "offset": 7158.8,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "containers. Persistent volumes. The",
      "offset": 7160.32,
      "duration": 5.64
    },
    {
      "lang": "en",
      "text": "first question is, of course, what is a",
      "offset": 7163.36,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "volume? Volumes are another way to store",
      "offset": 7165.96,
      "duration": 4.44
    },
    {
      "lang": "en",
      "text": "data in Docker that is unrelated to the",
      "offset": 7168.4,
      "duration": 5.199
    },
    {
      "lang": "en",
      "text": "container image or the host file system.",
      "offset": 7170.4,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "Docker manages volumes on its own using",
      "offset": 7173.599,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "the command line tools. Technically,",
      "offset": 7175.84,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "volumes can also be managed from the",
      "offset": 7178.639,
      "duration": 4.241
    },
    {
      "lang": "en",
      "text": "Docker API, but we won't cover the API",
      "offset": 7180.239,
      "duration": 3.801
    },
    {
      "lang": "en",
      "text": "in this",
      "offset": 7182.88,
      "duration": 3.759
    },
    {
      "lang": "en",
      "text": "course. One advantage of Docker volumes",
      "offset": 7184.04,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "is that they can be shared with multiple",
      "offset": 7186.639,
      "duration": 4.161
    },
    {
      "lang": "en",
      "text": "containers. You still need to handle",
      "offset": 7188.84,
      "duration": 3.96
    },
    {
      "lang": "en",
      "text": "data access issues such as two",
      "offset": 7190.8,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "containers writing to the same file, but",
      "offset": 7192.8,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "it is considerably more powerful than a",
      "offset": 7195.04,
      "duration": 4.559
    },
    {
      "lang": "en",
      "text": "bind mount option. It should be noted",
      "offset": 7196.8,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "that volumes are higher performance than",
      "offset": 7199.599,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "using bind mounts and are recommended if",
      "offset": 7201.36,
      "duration": 4.04
    },
    {
      "lang": "en",
      "text": "there are performance",
      "offset": 7203.679,
      "duration": 4.401
    },
    {
      "lang": "en",
      "text": "concerns. Finally, Docker volumes exist",
      "offset": 7205.4,
      "duration": 4.759
    },
    {
      "lang": "en",
      "text": "until they are specifically removed,",
      "offset": 7208.08,
      "duration": 3.519
    },
    {
      "lang": "en",
      "text": "even if the container they're attached",
      "offset": 7210.159,
      "duration": 2.52
    },
    {
      "lang": "en",
      "text": "to is",
      "offset": 7211.599,
      "duration": 3.52
    },
    {
      "lang": "en",
      "text": "deleted. Volumes are managed using the",
      "offset": 7212.679,
      "duration": 4.361
    },
    {
      "lang": "en",
      "text": "Docker volume command and its various",
      "offset": 7215.119,
      "duration": 3.641
    },
    {
      "lang": "en",
      "text": "options and",
      "offset": 7217.04,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "subcomands. To create a volume, we use",
      "offset": 7218.76,
      "duration": 6.2
    },
    {
      "lang": "en",
      "text": "the Docker volume create volume name.",
      "offset": 7221.44,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "This defaults to creating a volume",
      "offset": 7224.96,
      "duration": 3.759
    },
    {
      "lang": "en",
      "text": "locally, but there are other options",
      "offset": 7226.8,
      "duration": 3.24
    },
    {
      "lang": "en",
      "text": "we'll discuss",
      "offset": 7228.719,
      "duration": 3.841
    },
    {
      "lang": "en",
      "text": "shortly. To view a list of existing",
      "offset": 7230.04,
      "duration": 5.4
    },
    {
      "lang": "en",
      "text": "volumes, we can use the docker volume ls",
      "offset": 7232.56,
      "duration": 6.48
    },
    {
      "lang": "en",
      "text": "command. An alias docker volume list",
      "offset": 7235.44,
      "duration": 6.56
    },
    {
      "lang": "en",
      "text": "works as well. There are some various",
      "offset": 7239.04,
      "duration": 4.559
    },
    {
      "lang": "en",
      "text": "filtering and formatting options",
      "offset": 7242,
      "duration": 3.8
    },
    {
      "lang": "en",
      "text": "available depending on our version of",
      "offset": 7243.599,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "Docker. To see more extensive",
      "offset": 7245.8,
      "duration": 4.6
    },
    {
      "lang": "en",
      "text": "information about a volume, we can use",
      "offset": 7248.159,
      "duration": 5.281
    },
    {
      "lang": "en",
      "text": "the docker volume inspect command. This",
      "offset": 7250.4,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "command shows assorted metadata about",
      "offset": 7253.44,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "the volume including its name, mount",
      "offset": 7255.36,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "point on the host or destination and",
      "offset": 7258.08,
      "duration": 4.28
    },
    {
      "lang": "en",
      "text": "various options for the",
      "offset": 7260.48,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "volume. Finally, we can also remove",
      "offset": 7262.36,
      "duration": 5.359
    },
    {
      "lang": "en",
      "text": "volumes using the docker volume rm",
      "offset": 7264.88,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "command. Let's look at a quick example",
      "offset": 7267.719,
      "duration": 3.601
    },
    {
      "lang": "en",
      "text": "of working with a",
      "offset": 7270,
      "duration": 3.679
    },
    {
      "lang": "en",
      "text": "volume. First, we'll create a volume",
      "offset": 7271.32,
      "duration": 5.56
    },
    {
      "lang": "en",
      "text": "called SQL data using the command docker",
      "offset": 7273.679,
      "duration": 6.401
    },
    {
      "lang": "en",
      "text": "volume create SQL data. This simply",
      "offset": 7276.88,
      "duration": 5.799
    },
    {
      "lang": "en",
      "text": "returns the name of the volume when it's",
      "offset": 7280.08,
      "duration": 5.039
    },
    {
      "lang": "en",
      "text": "created. Next, we can use the Docker",
      "offset": 7282.679,
      "duration": 5.721
    },
    {
      "lang": "en",
      "text": "volume ls to get a list of our volumes.",
      "offset": 7285.119,
      "duration": 4.881
    },
    {
      "lang": "en",
      "text": "You will likely see many volumes",
      "offset": 7288.4,
      "duration": 3.36
    },
    {
      "lang": "en",
      "text": "depending on the number of containers or",
      "offset": 7290,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "volumes you've created. In this case, it",
      "offset": 7291.76,
      "duration": 5.359
    },
    {
      "lang": "en",
      "text": "shows the driver and the volume name.",
      "offset": 7294.8,
      "duration": 4.359
    },
    {
      "lang": "en",
      "text": "We'll discuss drivers in a",
      "offset": 7297.119,
      "duration": 4.721
    },
    {
      "lang": "en",
      "text": "moment. Let's also use the Docker volume",
      "offset": 7299.159,
      "duration": 5.161
    },
    {
      "lang": "en",
      "text": "inspect command such as Docker volume",
      "offset": 7301.84,
      "duration": 4.879
    },
    {
      "lang": "en",
      "text": "inspect SQL data.",
      "offset": 7304.32,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "This returns various metadata regarding",
      "offset": 7306.719,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "the name, age, mount point, options, and",
      "offset": 7308.719,
      "duration": 4.281
    },
    {
      "lang": "en",
      "text": "so",
      "offset": 7312.159,
      "duration": 3.44
    },
    {
      "lang": "en",
      "text": "forth. To actually use our volume with a",
      "offset": 7313,
      "duration": 5.28
    },
    {
      "lang": "en",
      "text": "container, we use the -v command once",
      "offset": 7315.599,
      "duration": 5.56
    },
    {
      "lang": "en",
      "text": "again. This would look like docker",
      "offset": 7318.28,
      "duration": 6.12
    },
    {
      "lang": "en",
      "text": "run-v space volume name col destination",
      "offset": 7321.159,
      "duration": 6
    },
    {
      "lang": "en",
      "text": "path and optionally colon",
      "offset": 7324.4,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "options. The volume name is the name of",
      "offset": 7327.159,
      "duration": 5.08
    },
    {
      "lang": "en",
      "text": "an existing Docker volume.",
      "offset": 7329.76,
      "duration": 4.879
    },
    {
      "lang": "en",
      "text": "The destination path is the location in",
      "offset": 7332.239,
      "duration": 4.681
    },
    {
      "lang": "en",
      "text": "the container where the volume is",
      "offset": 7334.639,
      "duration": 4.881
    },
    {
      "lang": "en",
      "text": "mounted. Options represent an optional",
      "offset": 7336.92,
      "duration": 4.759
    },
    {
      "lang": "en",
      "text": "commaepparated list of values to pass to",
      "offset": 7339.52,
      "duration": 3.24
    },
    {
      "lang": "en",
      "text": "the volume",
      "offset": 7341.679,
      "duration": 2.881
    },
    {
      "lang": "en",
      "text": "configuration. This can be something",
      "offset": 7342.76,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "like the RORO option for",
      "offset": 7344.56,
      "duration": 5.599
    },
    {
      "lang": "en",
      "text": "readon. Note there is also a d-mount",
      "offset": 7347,
      "duration": 5.08
    },
    {
      "lang": "en",
      "text": "flag with different options. We won't",
      "offset": 7350.159,
      "duration": 3.401
    },
    {
      "lang": "en",
      "text": "cover it in this",
      "offset": 7352.08,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "course. For the last part of this video,",
      "offset": 7353.56,
      "duration": 5.88
    },
    {
      "lang": "en",
      "text": "we'll discuss the docker volume drivers.",
      "offset": 7356,
      "duration": 5.28
    },
    {
      "lang": "en",
      "text": "Drivers are simply methods of storing",
      "offset": 7359.44,
      "duration": 2.84
    },
    {
      "lang": "en",
      "text": "Docker",
      "offset": 7361.28,
      "duration": 3.439
    },
    {
      "lang": "en",
      "text": "volumes. These can include various",
      "offset": 7362.28,
      "duration": 4.76
    },
    {
      "lang": "en",
      "text": "methods, but typically it's a local file",
      "offset": 7364.719,
      "duration": 3.88
    },
    {
      "lang": "en",
      "text": "system, which is the",
      "offset": 7367.04,
      "duration": 3.52
    },
    {
      "lang": "en",
      "text": "default. There are countless other",
      "offset": 7368.599,
      "duration": 4.12
    },
    {
      "lang": "en",
      "text": "drivers, but two very common ones are",
      "offset": 7370.56,
      "duration": 4.36
    },
    {
      "lang": "en",
      "text": "NFS or Unix file",
      "offset": 7372.719,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "sharing. Another common option is using",
      "offset": 7374.92,
      "duration": 6.4
    },
    {
      "lang": "en",
      "text": "SMB or CIFS for Windows file",
      "offset": 7377.679,
      "duration": 6.081
    },
    {
      "lang": "en",
      "text": "sharing. Other drivers include options",
      "offset": 7381.32,
      "duration": 5.16
    },
    {
      "lang": "en",
      "text": "for remote systems, backup devices, and",
      "offset": 7383.76,
      "duration": 5.28
    },
    {
      "lang": "en",
      "text": "so forth.",
      "offset": 7386.48,
      "duration": 4.719
    },
    {
      "lang": "en",
      "text": "Welcome back. Let's look at how to make",
      "offset": 7389.04,
      "duration": 4.199
    },
    {
      "lang": "en",
      "text": "network services available from within",
      "offset": 7391.199,
      "duration": 4.721
    },
    {
      "lang": "en",
      "text": "Docker. As briefly mentioned, network",
      "offset": 7393.239,
      "duration": 5.641
    },
    {
      "lang": "en",
      "text": "services listen on a given port. As",
      "offset": 7395.92,
      "duration": 5.279
    },
    {
      "lang": "en",
      "text": "such, only one program can listen on a",
      "offset": 7398.88,
      "duration": 4.359
    },
    {
      "lang": "en",
      "text": "specific IP and port",
      "offset": 7401.199,
      "duration": 6.081
    },
    {
      "lang": "en",
      "text": "combo. For example,",
      "offset": 7403.239,
      "duration": 4.041
    },
    {
      "lang": "en",
      "text": "10.1.2.3 would mean that a program on",
      "offset": 7407.8,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "the host with IP",
      "offset": 7410.4,
      "duration": 6.239
    },
    {
      "lang": "en",
      "text": "10.1.2.3 is listening on port 80.",
      "offset": 7412.76,
      "duration": 5.72
    },
    {
      "lang": "en",
      "text": "Consider what this would mean if we were",
      "offset": 7416.639,
      "duration": 3.441
    },
    {
      "lang": "en",
      "text": "trying to debug different web server",
      "offset": 7418.48,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "versions that listen on that port. We",
      "offset": 7420.08,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "could effectively only run one copy of",
      "offset": 7423.04,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "the application given that only one",
      "offset": 7425.28,
      "duration": 4.359
    },
    {
      "lang": "en",
      "text": "program can listen on that IP port",
      "offset": 7427.04,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "combo. We can partially solve our",
      "offset": 7429.639,
      "duration": 4.281
    },
    {
      "lang": "en",
      "text": "problem by wrapping an application in a",
      "offset": 7431.92,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "container. Meaning each container can",
      "offset": 7433.92,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "now listen on the port. This is because",
      "offset": 7436.08,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "the IP port combo is different for each",
      "offset": 7438.88,
      "duration": 4.799
    },
    {
      "lang": "en",
      "text": "container because each container has a",
      "offset": 7441.28,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "different IP address.",
      "offset": 7443.679,
      "duration": 4.321
    },
    {
      "lang": "en",
      "text": "We can also now have multiple copies of",
      "offset": 7446,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "a container running, including those of",
      "offset": 7448,
      "duration": 4.84
    },
    {
      "lang": "en",
      "text": "different versions running",
      "offset": 7450.32,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "simultaneously. However, the question",
      "offset": 7452.84,
      "duration": 4.2
    },
    {
      "lang": "en",
      "text": "then becomes, how do we connect to the",
      "offset": 7454.8,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "individual containers without knowing",
      "offset": 7457.04,
      "duration": 4.28
    },
    {
      "lang": "en",
      "text": "the specific IP addresses of each",
      "offset": 7458.8,
      "duration": 4.879
    },
    {
      "lang": "en",
      "text": "container? The answer to our problem is",
      "offset": 7461.32,
      "duration": 4.44
    },
    {
      "lang": "en",
      "text": "port mapping, sometimes called port",
      "offset": 7463.679,
      "duration": 4.721
    },
    {
      "lang": "en",
      "text": "forwarding or translation.",
      "offset": 7465.76,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "Port mapping takes a connection to a",
      "offset": 7468.4,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "given IP port combo and automatically",
      "offset": 7470.4,
      "duration": 5.08
    },
    {
      "lang": "en",
      "text": "forwards it to another IP port",
      "offset": 7472.88,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "combo. In this instance, we can map an",
      "offset": 7475.48,
      "duration": 5.159
    },
    {
      "lang": "en",
      "text": "unused port or ports on our host and",
      "offset": 7478.08,
      "duration": 4.76
    },
    {
      "lang": "en",
      "text": "point it to port 80 on the",
      "offset": 7480.639,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "containers. The Docker engine can handle",
      "offset": 7482.84,
      "duration": 4.04
    },
    {
      "lang": "en",
      "text": "this for us automatically with a command",
      "offset": 7485.119,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "line option we'll mention in a moment.",
      "offset": 7486.88,
      "duration": 4.799
    },
    {
      "lang": "en",
      "text": "Let's look at a quick example with three",
      "offset": 7489.679,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "containers running in our Docker engine.",
      "offset": 7491.679,
      "duration": 5.361
    },
    {
      "lang": "en",
      "text": "Each container is listening on port 80",
      "offset": 7494.639,
      "duration": 4.241
    },
    {
      "lang": "en",
      "text": "which works as the individual containers",
      "offset": 7497.04,
      "duration": 3.559
    },
    {
      "lang": "en",
      "text": "have their own IP",
      "offset": 7498.88,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "addresses. To make them accessible to",
      "offset": 7500.599,
      "duration": 4.161
    },
    {
      "lang": "en",
      "text": "the host or systems that can reach the",
      "offset": 7502.8,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "host, we can use the port mapping to",
      "offset": 7504.76,
      "duration": 6.879
    },
    {
      "lang": "en",
      "text": "connect ports 5501, 5502, and",
      "offset": 7507.28,
      "duration": 7.12
    },
    {
      "lang": "en",
      "text": "5503. To point to port 80 on the",
      "offset": 7511.639,
      "duration": 4.161
    },
    {
      "lang": "en",
      "text": "individual",
      "offset": 7514.4,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "containers to enable port mapping on a",
      "offset": 7515.8,
      "duration": 4.68
    },
    {
      "lang": "en",
      "text": "given container, we add a flag to the",
      "offset": 7518.4,
      "duration": 5.68
    },
    {
      "lang": "en",
      "text": "docker run command, the -p flag. This is",
      "offset": 7520.48,
      "duration": 5.4
    },
    {
      "lang": "en",
      "text": "also known as the publish",
      "offset": 7524.08,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "flag. The -p flag requires two arguments",
      "offset": 7525.88,
      "duration": 5.48
    },
    {
      "lang": "en",
      "text": "written as the host port colon and the",
      "offset": 7529.28,
      "duration": 3.08
    },
    {
      "lang": "en",
      "text": "container",
      "offset": 7531.36,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "port. For example, to map port 5501 to",
      "offset": 7532.36,
      "duration": 5.72
    },
    {
      "lang": "en",
      "text": "port 80 in the container, we would use",
      "offset": 7535.76,
      "duration": 7.2
    },
    {
      "lang": "en",
      "text": "-p 5501 col 80. Also note that we can",
      "offset": 7538.08,
      "duration": 6.72
    },
    {
      "lang": "en",
      "text": "have multiple -p flags if there are",
      "offset": 7542.96,
      "duration": 3.199
    },
    {
      "lang": "en",
      "text": "different ports to publish from the",
      "offset": 7544.8,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "container to the host.",
      "offset": 7546.159,
      "duration": 5.161
    },
    {
      "lang": "en",
      "text": "As a full command, we would run docker",
      "offset": 7548.4,
      "duration": 7
    },
    {
      "lang": "en",
      "text": "run-P 5501 col 80 engine",
      "offset": 7551.32,
      "duration": 6.359
    },
    {
      "lang": "en",
      "text": "x. This would set up the web server",
      "offset": 7555.4,
      "duration": 4.279
    },
    {
      "lang": "en",
      "text": "listening on port 80 in the container",
      "offset": 7557.679,
      "duration": 3.841
    },
    {
      "lang": "en",
      "text": "and docker would create the map from",
      "offset": 7559.679,
      "duration": 3.96
    },
    {
      "lang": "en",
      "text": "5501 to 80 for",
      "offset": 7561.52,
      "duration": 5.84
    },
    {
      "lang": "en",
      "text": "us. Using docker ps- a, we can look for",
      "offset": 7563.639,
      "duration": 6.681
    },
    {
      "lang": "en",
      "text": "the ports column to verify the mapping.",
      "offset": 7567.36,
      "duration": 4.92
    },
    {
      "lang": "en",
      "text": "In this case, the",
      "offset": 7570.32,
      "duration": 5.16
    },
    {
      "lang": "en",
      "text": "0.0.0.051 0 col",
      "offset": 7572.28,
      "duration": 6.72
    },
    {
      "lang": "en",
      "text": "5501 means any IP on the host with port",
      "offset": 7575.48,
      "duration": 7.199
    },
    {
      "lang": "en",
      "text": "5501 should map to port 80 using",
      "offset": 7579,
      "duration": 6.119
    },
    {
      "lang": "en",
      "text": "TCP. The second part means the same",
      "offset": 7582.679,
      "duration": 4.881
    },
    {
      "lang": "en",
      "text": "thing but for",
      "offset": 7585.119,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "IPv6. Welcome back. We've just covered",
      "offset": 7587.56,
      "duration": 5.159
    },
    {
      "lang": "en",
      "text": "exposing ports manually in Docker, but",
      "offset": 7590.639,
      "duration": 4.6
    },
    {
      "lang": "en",
      "text": "let's cover exposing services via Docker",
      "offset": 7592.719,
      "duration": 5.201
    },
    {
      "lang": "en",
      "text": "files. Our first topic for this video is",
      "offset": 7595.239,
      "duration": 5.641
    },
    {
      "lang": "en",
      "text": "the expose command within a Docker file.",
      "offset": 7597.92,
      "duration": 5.199
    },
    {
      "lang": "en",
      "text": "Expose technically defines which ports a",
      "offset": 7600.88,
      "duration": 4.839
    },
    {
      "lang": "en",
      "text": "container will use at runtime within the",
      "offset": 7603.119,
      "duration": 4.881
    },
    {
      "lang": "en",
      "text": "container. Each expose line should",
      "offset": 7605.719,
      "duration": 5.841
    },
    {
      "lang": "en",
      "text": "include a number for the port to use, a",
      "offset": 7608,
      "duration": 8.159
    },
    {
      "lang": "en",
      "text": "number/TCP or UDP such as expose 80 or",
      "offset": 7611.56,
      "duration": 6.559
    },
    {
      "lang": "en",
      "text": "expose",
      "offset": 7616.159,
      "duration": 4.641
    },
    {
      "lang": "en",
      "text": "80/TCP. Note that a protocol defaults to",
      "offset": 7618.119,
      "duration": 4.921
    },
    {
      "lang": "en",
      "text": "TCP if we do not define a protocol",
      "offset": 7620.8,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "manually.",
      "offset": 7623.04,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "We can also have multiple expose entries",
      "offset": 7624.8,
      "duration": 4.319
    },
    {
      "lang": "en",
      "text": "per Docker file if multiple ports or",
      "offset": 7626.88,
      "duration": 3.88
    },
    {
      "lang": "en",
      "text": "protocols are",
      "offset": 7629.119,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "required. It is important to note that",
      "offset": 7630.76,
      "duration": 3.959
    },
    {
      "lang": "en",
      "text": "this is primarily used as a",
      "offset": 7633.119,
      "duration": 3.841
    },
    {
      "lang": "en",
      "text": "documentation method letting the Docker",
      "offset": 7634.719,
      "duration": 4.161
    },
    {
      "lang": "en",
      "text": "user know which ports should be exposed",
      "offset": 7636.96,
      "duration": 3.32
    },
    {
      "lang": "en",
      "text": "from within the",
      "offset": 7638.88,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "container. That said, it does not",
      "offset": 7640.28,
      "duration": 4.04
    },
    {
      "lang": "en",
      "text": "actually expose the ports for use",
      "offset": 7642.56,
      "duration": 5.119
    },
    {
      "lang": "en",
      "text": "without defining a -uppercase P or a",
      "offset": 7644.32,
      "duration": 6.16
    },
    {
      "lang": "en",
      "text": "-ash lowercase P hostport colon",
      "offset": 7647.679,
      "duration": 4.201
    },
    {
      "lang": "en",
      "text": "container port",
      "offset": 7650.48,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "command. The -ashupcase P flag will",
      "offset": 7651.88,
      "duration": 5.4
    },
    {
      "lang": "en",
      "text": "automatically map ephemeral ports to the",
      "offset": 7654.96,
      "duration": 4.36
    },
    {
      "lang": "en",
      "text": "exposed container",
      "offset": 7657.28,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "ports. Remember that ephemeral in this",
      "offset": 7659.32,
      "duration": 4.879
    },
    {
      "lang": "en",
      "text": "case means high numbered and",
      "offset": 7661.92,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "unprivileged. The dash lowercase P flag",
      "offset": 7664.199,
      "duration": 4.92
    },
    {
      "lang": "en",
      "text": "works as described in the previous video",
      "offset": 7666.88,
      "duration": 5
    },
    {
      "lang": "en",
      "text": "and allows a specific port to be",
      "offset": 7669.119,
      "duration": 5.281
    },
    {
      "lang": "en",
      "text": "defined. Let's look at an example using",
      "offset": 7671.88,
      "duration": 5.4
    },
    {
      "lang": "en",
      "text": "the expose command. First, we've created",
      "offset": 7674.4,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "our Docker file from the Python 3.11",
      "offset": 7677.28,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "slim image.",
      "offset": 7679.92,
      "duration": 3.679
    },
    {
      "lang": "en",
      "text": "We then add an entry point startup",
      "offset": 7681.76,
      "duration": 3.919
    },
    {
      "lang": "en",
      "text": "command. In this case, we're running",
      "offset": 7683.599,
      "duration": 4.04
    },
    {
      "lang": "en",
      "text": "Python's built-in web",
      "offset": 7685.679,
      "duration": 5.281
    },
    {
      "lang": "en",
      "text": "server. Finally, we add the expose 8000",
      "offset": 7687.639,
      "duration": 5.241
    },
    {
      "lang": "en",
      "text": "entry to indicate that the container",
      "offset": 7690.96,
      "duration": 5.639
    },
    {
      "lang": "en",
      "text": "listens internally on TCP port",
      "offset": 7692.88,
      "duration": 6
    },
    {
      "lang": "en",
      "text": "8000. Assuming our image builds",
      "offset": 7696.599,
      "duration": 4.12
    },
    {
      "lang": "en",
      "text": "correctly, we create an instance of the",
      "offset": 7698.88,
      "duration": 4.199
    },
    {
      "lang": "en",
      "text": "container using the docker run",
      "offset": 7700.719,
      "duration": 4.801
    },
    {
      "lang": "en",
      "text": "command. To determine the state of the",
      "offset": 7703.079,
      "duration": 5.481
    },
    {
      "lang": "en",
      "text": "container, we can use the docker ps- a",
      "offset": 7705.52,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "command.",
      "offset": 7708.56,
      "duration": 3.119
    },
    {
      "lang": "en",
      "text": "Note that we've truncated the output",
      "offset": 7710,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "slightly, but note the ports column",
      "offset": 7711.679,
      "duration": 5.281
    },
    {
      "lang": "en",
      "text": "here. The container is exposing TCP port",
      "offset": 7714.56,
      "duration": 4.2
    },
    {
      "lang": "en",
      "text": "8000 as",
      "offset": 7716.96,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "expected. Be aware if we try to access",
      "offset": 7718.76,
      "duration": 4.76
    },
    {
      "lang": "en",
      "text": "this port from the host, it will not be",
      "offset": 7721.36,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "reachable as we have not defined what",
      "offset": 7723.52,
      "duration": 3.8
    },
    {
      "lang": "en",
      "text": "host port to",
      "offset": 7725.28,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "use. Now, we'd like to make the ports",
      "offset": 7727.32,
      "duration": 5.08
    },
    {
      "lang": "en",
      "text": "reachable from outside the container.",
      "offset": 7729.84,
      "duration": 5.319
    },
    {
      "lang": "en",
      "text": "The simplest method is to use the docker",
      "offset": 7732.4,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "run-uppercase P flag which will",
      "offset": 7735.159,
      "duration": 4.361
    },
    {
      "lang": "en",
      "text": "automatically assign an ephemeral port",
      "offset": 7737.52,
      "duration": 4.159
    },
    {
      "lang": "en",
      "text": "from the host and map it to the internal",
      "offset": 7739.52,
      "duration": 3.24
    },
    {
      "lang": "en",
      "text": "container",
      "offset": 7741.679,
      "duration": 3.44
    },
    {
      "lang": "en",
      "text": "port. Note this differs from the",
      "offset": 7742.76,
      "duration": 4.12
    },
    {
      "lang": "en",
      "text": "previous chapter which uses a manual",
      "offset": 7745.119,
      "duration": 4.761
    },
    {
      "lang": "en",
      "text": "mapping with a -ash lowercase P",
      "offset": 7746.88,
      "duration": 5.6
    },
    {
      "lang": "en",
      "text": "flag. We have a few options to see which",
      "offset": 7749.88,
      "duration": 5.4
    },
    {
      "lang": "en",
      "text": "port is used. The simplest is using the",
      "offset": 7752.48,
      "duration": 6.4
    },
    {
      "lang": "en",
      "text": "docker ps- a command as before. Note",
      "offset": 7755.28,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "under the ports column that we now see a",
      "offset": 7758.88,
      "duration": 5.359
    },
    {
      "lang": "en",
      "text": "mapping in this case",
      "offset": 7760.8,
      "duration": 3.439
    },
    {
      "lang": "en",
      "text": "0.0.0.051 pointing to",
      "offset": 7765.8,
      "duration": 5.72
    },
    {
      "lang": "en",
      "text": "8000/TCP. This means if we make a",
      "offset": 7769.32,
      "duration": 4.2
    },
    {
      "lang": "en",
      "text": "connection with a web browser on the",
      "offset": 7771.52,
      "duration": 3.96
    },
    {
      "lang": "en",
      "text": "host at port",
      "offset": 7773.52,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "55001, it will automatically redirect to",
      "offset": 7775.48,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "the container listening",
      "offset": 7778.48,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "port. Another more verbose method to",
      "offset": 7780.28,
      "duration": 4.68
    },
    {
      "lang": "en",
      "text": "find the exposed ports is the docker",
      "offset": 7783.04,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "inspect command.",
      "offset": 7784.96,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "If we run docker inspect container ID,",
      "offset": 7786.96,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "we'll get a considerable amount of",
      "offset": 7789.92,
      "duration": 4.12
    },
    {
      "lang": "en",
      "text": "information in a JSON",
      "offset": 7791.84,
      "duration": 4.319
    },
    {
      "lang": "en",
      "text": "format. If we parse through the",
      "offset": 7794.04,
      "duration": 4.44
    },
    {
      "lang": "en",
      "text": "information under the network settings",
      "offset": 7796.159,
      "duration": 4.401
    },
    {
      "lang": "en",
      "text": "colon ports section, we'll see the",
      "offset": 7798.48,
      "duration": 4.159
    },
    {
      "lang": "en",
      "text": "exposed ports within the container and",
      "offset": 7800.56,
      "duration": 4.44
    },
    {
      "lang": "en",
      "text": "what host IP and port they are mapped",
      "offset": 7802.639,
      "duration": 4.881
    },
    {
      "lang": "en",
      "text": "to. Note that typically this information",
      "offset": 7805,
      "duration": 4.76
    },
    {
      "lang": "en",
      "text": "is overkill, but may be useful in cases",
      "offset": 7807.52,
      "duration": 4.559
    },
    {
      "lang": "en",
      "text": "of many exposed ports or more extended",
      "offset": 7809.76,
      "duration": 5.359
    },
    {
      "lang": "en",
      "text": "troubleshooting situations.",
      "offset": 7812.079,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "Let's talk about creating networks",
      "offset": 7815.119,
      "duration": 3.04
    },
    {
      "lang": "en",
      "text": "within Docker and some of the",
      "offset": 7816.719,
      "duration": 4.321
    },
    {
      "lang": "en",
      "text": "capabilities we gain when doing so.",
      "offset": 7818.159,
      "duration": 5.121
    },
    {
      "lang": "en",
      "text": "Docker has extensive networking options",
      "offset": 7821.04,
      "duration": 4.079
    },
    {
      "lang": "en",
      "text": "allowing the use of containers in many",
      "offset": 7823.28,
      "duration": 2.839
    },
    {
      "lang": "en",
      "text": "different",
      "offset": 7825.119,
      "duration": 3.281
    },
    {
      "lang": "en",
      "text": "situations. We will only cover a few",
      "offset": 7826.119,
      "duration": 4.6
    },
    {
      "lang": "en",
      "text": "options, but Docker can create networks",
      "offset": 7828.4,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "to communicate between containers, the",
      "offset": 7830.719,
      "duration": 5.601
    },
    {
      "lang": "en",
      "text": "host, and external systems. Let's review",
      "offset": 7832.88,
      "duration": 4.719
    },
    {
      "lang": "en",
      "text": "several of the commands you'll be",
      "offset": 7836.32,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "working with. Docker supports different",
      "offset": 7837.599,
      "duration": 6
    },
    {
      "lang": "en",
      "text": "types of networks using various drivers.",
      "offset": 7840.32,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "The bridge driver is the default driver",
      "offset": 7843.599,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "and allows communication to the internet",
      "offset": 7845.76,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "to exposed ports and between containers",
      "offset": 7848.159,
      "duration": 4.44
    },
    {
      "lang": "en",
      "text": "on the bridge but not",
      "offset": 7850.8,
      "duration": 4.319
    },
    {
      "lang": "en",
      "text": "further. The host driver allows full",
      "offset": 7852.599,
      "duration": 4.441
    },
    {
      "lang": "en",
      "text": "communication between the host and any",
      "offset": 7855.119,
      "duration": 3.08
    },
    {
      "lang": "en",
      "text": "running",
      "offset": 7857.04,
      "duration": 3.44
    },
    {
      "lang": "en",
      "text": "containers. This works for specific",
      "offset": 7858.199,
      "duration": 5.121
    },
    {
      "lang": "en",
      "text": "circumstances but also has some security",
      "offset": 7860.48,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "implications. The last driver we'll",
      "offset": 7863.32,
      "duration": 4.279
    },
    {
      "lang": "en",
      "text": "cover is the nun driver which completely",
      "offset": 7865.36,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "isolates the container from",
      "offset": 7867.599,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "communicating with anything else.",
      "offset": 7869.04,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "It's helpful in testing untrusted",
      "offset": 7871.599,
      "duration": 3.52
    },
    {
      "lang": "en",
      "text": "containers and applications without",
      "offset": 7873.28,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "concern for what they're doing. Many",
      "offset": 7875.119,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "other types of drivers are available and",
      "offset": 7877.76,
      "duration": 3.879
    },
    {
      "lang": "en",
      "text": "you can create your own if",
      "offset": 7879.679,
      "duration": 4.641
    },
    {
      "lang": "en",
      "text": "needed. We will primarily use the bridge",
      "offset": 7881.639,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "driver when working with our",
      "offset": 7884.32,
      "duration": 4.319
    },
    {
      "lang": "en",
      "text": "networks. Our primary method for working",
      "offset": 7886.199,
      "duration": 3.88
    },
    {
      "lang": "en",
      "text": "with Docker networks is the",
      "offset": 7888.639,
      "duration": 3.641
    },
    {
      "lang": "en",
      "text": "appropriately named Docker network",
      "offset": 7890.079,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "command. The Docker network actually",
      "offset": 7892.28,
      "duration": 4.6
    },
    {
      "lang": "en",
      "text": "takes subcomands in the form of a Docker",
      "offset": 7894.639,
      "duration": 4.401
    },
    {
      "lang": "en",
      "text": "network command to accomplish specific",
      "offset": 7896.88,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "tasks.",
      "offset": 7899.04,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "As with other Docker entries, you can",
      "offset": 7900.96,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "use d-help to gain further information",
      "offset": 7902.8,
      "duration": 3.96
    },
    {
      "lang": "en",
      "text": "about available",
      "offset": 7905.28,
      "duration": 3.52
    },
    {
      "lang": "en",
      "text": "options. There are several Docker",
      "offset": 7906.76,
      "duration": 4.28
    },
    {
      "lang": "en",
      "text": "network commands we'll use. We'll cover",
      "offset": 7908.8,
      "duration": 4.76
    },
    {
      "lang": "en",
      "text": "three here and others in a few",
      "offset": 7911.04,
      "duration": 5.039
    },
    {
      "lang": "en",
      "text": "moments. The first command is docker",
      "offset": 7913.56,
      "duration": 5.24
    },
    {
      "lang": "en",
      "text": "network ls, which provides a list of all",
      "offset": 7916.079,
      "duration": 5.761
    },
    {
      "lang": "en",
      "text": "Docker networks defined on the host.",
      "offset": 7918.8,
      "duration": 5.279
    },
    {
      "lang": "en",
      "text": "Docker network create requires a name",
      "offset": 7921.84,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "argument but can also take several other",
      "offset": 7924.079,
      "duration": 4.241
    },
    {
      "lang": "en",
      "text": "options including the dash d for the",
      "offset": 7926.239,
      "duration": 4.681
    },
    {
      "lang": "en",
      "text": "driver to use and various other",
      "offset": 7928.32,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "details. Finally, we can use docker",
      "offset": 7930.92,
      "duration": 5
    },
    {
      "lang": "en",
      "text": "network rm network name to remove a",
      "offset": 7933.36,
      "duration": 3.64
    },
    {
      "lang": "en",
      "text": "given",
      "offset": 7935.92,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "network. We can create a network named",
      "offset": 7937,
      "duration": 5.48
    },
    {
      "lang": "en",
      "text": "my network using the docker network",
      "offset": 7939.76,
      "duration": 5.76
    },
    {
      "lang": "en",
      "text": "create my network command. It will",
      "offset": 7942.48,
      "duration": 5.28
    },
    {
      "lang": "en",
      "text": "return an ID, the internal identifier",
      "offset": 7945.52,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "Docker assigns to the network. your",
      "offset": 7947.76,
      "duration": 4.52
    },
    {
      "lang": "en",
      "text": "system will return a different",
      "offset": 7950.4,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "entry. If we run the command docker",
      "offset": 7952.28,
      "duration": 5.08
    },
    {
      "lang": "en",
      "text": "network ls, we can get a list of the",
      "offset": 7954.96,
      "duration": 4.279
    },
    {
      "lang": "en",
      "text": "network ids and the",
      "offset": 7957.36,
      "duration": 4.239
    },
    {
      "lang": "en",
      "text": "information. Note that the ids are a",
      "offset": 7959.239,
      "duration": 4.041
    },
    {
      "lang": "en",
      "text": "shorter form than what gets returned by",
      "offset": 7961.599,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "the docker network create command. This",
      "offset": 7963.28,
      "duration": 3.879
    },
    {
      "lang": "en",
      "text": "is normal and",
      "offset": 7965.599,
      "duration": 3.841
    },
    {
      "lang": "en",
      "text": "expected. You may wonder how to connect",
      "offset": 7967.159,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "a container to a given",
      "offset": 7969.44,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "network. There are two methods available",
      "offset": 7971.159,
      "duration": 4.361
    },
    {
      "lang": "en",
      "text": "depending on your needs.",
      "offset": 7973.44,
      "duration": 4.92
    },
    {
      "lang": "en",
      "text": "The first is using docker run with a new",
      "offset": 7975.52,
      "duration": 5.639
    },
    {
      "lang": "en",
      "text": "flag- network and the network",
      "offset": 7978.36,
      "duration": 5.48
    },
    {
      "lang": "en",
      "text": "name. For example, we can create a",
      "offset": 7981.159,
      "duration": 5.401
    },
    {
      "lang": "en",
      "text": "container with the docker run- network",
      "offset": 7983.84,
      "duration": 5.08
    },
    {
      "lang": "en",
      "text": "my network ubuntu",
      "offset": 7986.56,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "bash. We can also connect a container",
      "offset": 7988.92,
      "duration": 4.679
    },
    {
      "lang": "en",
      "text": "later using the docker network connect",
      "offset": 7991.44,
      "duration": 4.6
    },
    {
      "lang": "en",
      "text": "network name container ID",
      "offset": 7993.599,
      "duration": 4.881
    },
    {
      "lang": "en",
      "text": "command. The container ID can be a",
      "offset": 7996.04,
      "duration": 4.84
    },
    {
      "lang": "en",
      "text": "literal container ID or the name given",
      "offset": 7998.48,
      "duration": 4.639
    },
    {
      "lang": "en",
      "text": "to the container.",
      "offset": 8000.88,
      "duration": 4.799
    },
    {
      "lang": "en",
      "text": "We have an example of docker network",
      "offset": 8003.119,
      "duration": 6.161
    },
    {
      "lang": "en",
      "text": "connect my network UbuntuB. To connect",
      "offset": 8005.679,
      "duration": 6.52
    },
    {
      "lang": "en",
      "text": "the UbuntuB container to my",
      "offset": 8009.28,
      "duration": 5.439
    },
    {
      "lang": "en",
      "text": "network. To check the details of the",
      "offset": 8012.199,
      "duration": 5.081
    },
    {
      "lang": "en",
      "text": "network, we use another command docker",
      "offset": 8014.719,
      "duration": 5.841
    },
    {
      "lang": "en",
      "text": "network inspect network name. This",
      "offset": 8017.28,
      "duration": 5.439
    },
    {
      "lang": "en",
      "text": "provides configuration details including",
      "offset": 8020.56,
      "duration": 4.599
    },
    {
      "lang": "en",
      "text": "the IP ranges assigned to the",
      "offset": 8022.719,
      "duration": 5.041
    },
    {
      "lang": "en",
      "text": "network. You can also see the actual IP",
      "offset": 8025.159,
      "duration": 5.96
    },
    {
      "lang": "en",
      "text": "addresses assigned to the containers.",
      "offset": 8027.76,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "As an example, we can use the docker",
      "offset": 8031.119,
      "duration": 4.441
    },
    {
      "lang": "en",
      "text": "network inspect my network",
      "offset": 8033.28,
      "duration": 4.959
    },
    {
      "lang": "en",
      "text": "command. This is an abbreviated output,",
      "offset": 8035.56,
      "duration": 4.36
    },
    {
      "lang": "en",
      "text": "but you can see the type of network",
      "offset": 8038.239,
      "duration": 4.801
    },
    {
      "lang": "en",
      "text": "driver and the various details. We can",
      "offset": 8039.92,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "specifically see the IP address assigned",
      "offset": 8043.04,
      "duration": 3.599
    },
    {
      "lang": "en",
      "text": "to the containers connected to the",
      "offset": 8044.88,
      "duration": 3.239
    },
    {
      "lang": "en",
      "text": "network as",
      "offset": 8046.639,
      "duration": 4.321
    },
    {
      "lang": "en",
      "text": "well. Welcome back. We're now going to",
      "offset": 8048.119,
      "duration": 4.681
    },
    {
      "lang": "en",
      "text": "look at some options to optimize our",
      "offset": 8050.96,
      "duration": 5.119
    },
    {
      "lang": "en",
      "text": "container images. Let's get started. As",
      "offset": 8052.8,
      "duration": 5.359
    },
    {
      "lang": "en",
      "text": "you may remember, Docker images are the",
      "offset": 8056.079,
      "duration": 4.801
    },
    {
      "lang": "en",
      "text": "base of a given container. It is in",
      "offset": 8058.159,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "effect the file system of a container",
      "offset": 8060.88,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "and holds all content initially",
      "offset": 8063.119,
      "duration": 3.721
    },
    {
      "lang": "en",
      "text": "available to a container",
      "offset": 8064.96,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "instance. Given Docker containers",
      "offset": 8066.84,
      "duration": 5.319
    },
    {
      "lang": "en",
      "text": "relative power and flexibility, new",
      "offset": 8069.44,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "users are tempted to add all potentially",
      "offset": 8072.159,
      "duration": 3.96
    },
    {
      "lang": "en",
      "text": "needed components to an",
      "offset": 8074.32,
      "duration": 4.879
    },
    {
      "lang": "en",
      "text": "image. While doable, this usually isn't",
      "offset": 8076.119,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "recommended for several",
      "offset": 8079.199,
      "duration": 4.241
    },
    {
      "lang": "en",
      "text": "reasons. The first is the container",
      "offset": 8081.079,
      "duration": 4.761
    },
    {
      "lang": "en",
      "text": "image size becomes large and unwieldy,",
      "offset": 8083.44,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "especially if you need to run multiple",
      "offset": 8085.84,
      "duration": 4.319
    },
    {
      "lang": "en",
      "text": "copies of the container image.",
      "offset": 8087.44,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "It is also challenging to handle any",
      "offset": 8090.159,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "security issues or required updates as",
      "offset": 8092,
      "duration": 4.76
    },
    {
      "lang": "en",
      "text": "there are many more dependencies between",
      "offset": 8094.159,
      "duration": 4.801
    },
    {
      "lang": "en",
      "text": "components. Finally, it's harder to",
      "offset": 8096.76,
      "duration": 4.2
    },
    {
      "lang": "en",
      "text": "combine containers without wasting space",
      "offset": 8098.96,
      "duration": 4.119
    },
    {
      "lang": "en",
      "text": "or bandwidth due to the large",
      "offset": 8100.96,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "size. The usual recommendation when",
      "offset": 8103.079,
      "duration": 4.681
    },
    {
      "lang": "en",
      "text": "working with containers is to split the",
      "offset": 8105.76,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "containers to the smallest level needed",
      "offset": 8107.76,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "for a given task.",
      "offset": 8109.44,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "We'll discuss this with an example in a",
      "offset": 8111.52,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "moment, but it becomes much easier to",
      "offset": 8113.36,
      "duration": 4.319
    },
    {
      "lang": "en",
      "text": "combine multiple containers later versus",
      "offset": 8115.28,
      "duration": 4.359
    },
    {
      "lang": "en",
      "text": "building in a single large",
      "offset": 8117.679,
      "duration": 4.161
    },
    {
      "lang": "en",
      "text": "image. This is like building with a",
      "offset": 8119.639,
      "duration": 3.96
    },
    {
      "lang": "en",
      "text": "reusable set of components instead of",
      "offset": 8121.84,
      "duration": 3.96
    },
    {
      "lang": "en",
      "text": "building fully from scratch each",
      "offset": 8123.599,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "time. In this case, updates to specific",
      "offset": 8125.8,
      "duration": 5
    },
    {
      "lang": "en",
      "text": "software in our image only affect",
      "offset": 8128.639,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "containers using that image rather than",
      "offset": 8130.8,
      "duration": 5.6
    },
    {
      "lang": "en",
      "text": "all containers needing to the update.",
      "offset": 8133.199,
      "duration": 5.121
    },
    {
      "lang": "en",
      "text": "We can also optimize the amount of space",
      "offset": 8136.4,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "used allowing for more efficient use and",
      "offset": 8138.32,
      "duration": 4.44
    },
    {
      "lang": "en",
      "text": "distribution of said container",
      "offset": 8140.48,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "images. Let's consider a data",
      "offset": 8142.76,
      "duration": 3.879
    },
    {
      "lang": "en",
      "text": "engineering project that uses the",
      "offset": 8144.88,
      "duration": 2.68
    },
    {
      "lang": "en",
      "text": "following",
      "offset": 8146.639,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "software. We need a Postgrql database,",
      "offset": 8147.56,
      "duration": 6.039
    },
    {
      "lang": "en",
      "text": "some custom Python ETL software, and our",
      "offset": 8150.719,
      "duration": 5.041
    },
    {
      "lang": "en",
      "text": "web server components.",
      "offset": 8153.599,
      "duration": 3.52
    },
    {
      "lang": "en",
      "text": "Now, we could add all of these",
      "offset": 8155.76,
      "duration": 3.52
    },
    {
      "lang": "en",
      "text": "components to a single image, but we'd",
      "offset": 8157.119,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "need to update this image anytime we",
      "offset": 8159.28,
      "duration": 3.12
    },
    {
      "lang": "en",
      "text": "needed to update the individual",
      "offset": 8161.119,
      "duration": 3.921
    },
    {
      "lang": "en",
      "text": "components, such as the ETL or web",
      "offset": 8162.4,
      "duration": 5.759
    },
    {
      "lang": "en",
      "text": "server setup. Also, let's consider how",
      "offset": 8165.04,
      "duration": 4.559
    },
    {
      "lang": "en",
      "text": "we would add a separate web server",
      "offset": 8168.159,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "instance if, for example, our business",
      "offset": 8169.599,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "wanted to provide a different level of",
      "offset": 8172.079,
      "duration": 4.401
    },
    {
      "lang": "en",
      "text": "access to a business partner. In other",
      "offset": 8173.679,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "words, we'd have to set up a much more",
      "offset": 8176.48,
      "duration": 3.28
    },
    {
      "lang": "en",
      "text": "complex configuration within the",
      "offset": 8178.079,
      "duration": 3.681
    },
    {
      "lang": "en",
      "text": "container to handle both web server",
      "offset": 8179.76,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "instances.",
      "offset": 8181.76,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "Fortunately, Docker handles these issues",
      "offset": 8183.84,
      "duration": 3.759
    },
    {
      "lang": "en",
      "text": "well if we're willing to redesign our",
      "offset": 8185.84,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "setup slightly. The main option is to",
      "offset": 8187.599,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "split each software we're using into its",
      "offset": 8190.4,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "own container image. In this case, we'd",
      "offset": 8192.319,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "have a PostgrSQL image, an image for the",
      "offset": 8195.2,
      "duration": 6.08
    },
    {
      "lang": "en",
      "text": "ETL components, and a web server image.",
      "offset": 8197.679,
      "duration": 5.441
    },
    {
      "lang": "en",
      "text": "We could then create containers using",
      "offset": 8201.28,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "these images as needed.",
      "offset": 8203.12,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "We can build an optimized configuration",
      "offset": 8206,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "for our use and can add or remove",
      "offset": 8207.84,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "components as needed without affecting",
      "offset": 8209.92,
      "duration": 3.559
    },
    {
      "lang": "en",
      "text": "the rest of the",
      "offset": 8211.84,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "configuration. If we needed to add a web",
      "offset": 8213.479,
      "duration": 4.361
    },
    {
      "lang": "en",
      "text": "server, as mentioned before, we only",
      "offset": 8215.76,
      "duration": 3.44
    },
    {
      "lang": "en",
      "text": "need to create a new web server",
      "offset": 8217.84,
      "duration": 3.519
    },
    {
      "lang": "en",
      "text": "container, not update our image and",
      "offset": 8219.2,
      "duration": 4.439
    },
    {
      "lang": "en",
      "text": "update each container in",
      "offset": 8221.359,
      "duration": 4.481
    },
    {
      "lang": "en",
      "text": "turn. You may be wondering how to",
      "offset": 8223.639,
      "duration": 4.04
    },
    {
      "lang": "en",
      "text": "determine the actual size of the images",
      "offset": 8225.84,
      "duration": 4.799
    },
    {
      "lang": "en",
      "text": "we're using. The simplest method is",
      "offset": 8227.679,
      "duration": 5.601
    },
    {
      "lang": "en",
      "text": "using the Docker images command.",
      "offset": 8230.639,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "This will provide a list of images in",
      "offset": 8233.28,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "use on the local system along with",
      "offset": 8235.359,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "individual image details including the",
      "offset": 8237.28,
      "duration": 3.72
    },
    {
      "lang": "en",
      "text": "size of the",
      "offset": 8239.599,
      "duration": 3.681
    },
    {
      "lang": "en",
      "text": "image. Note that there are other options",
      "offset": 8241,
      "duration": 4.04
    },
    {
      "lang": "en",
      "text": "available for the Docker images command",
      "offset": 8243.28,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "that you may use. Docker images-help",
      "offset": 8245.04,
      "duration": 5.639
    },
    {
      "lang": "en",
      "text": "shows further",
      "offset": 8248.8,
      "duration": 4.639
    },
    {
      "lang": "en",
      "text": "detail. Welcome back. Let's look at a",
      "offset": 8250.679,
      "duration": 5.081
    },
    {
      "lang": "en",
      "text": "fairly technical topic. Examining layers",
      "offset": 8253.439,
      "duration": 5.761
    },
    {
      "lang": "en",
      "text": "in Docker. Docker images are made up of",
      "offset": 8255.76,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "layers which generally reference a",
      "offset": 8259.2,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "change or a command within a given",
      "offset": 8261.12,
      "duration": 4.479
    },
    {
      "lang": "en",
      "text": "Docker file. Docker will automatically",
      "offset": 8262.8,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "determine which layers can be cached or",
      "offset": 8265.599,
      "duration": 4.04
    },
    {
      "lang": "en",
      "text": "reused in other Docker",
      "offset": 8267.76,
      "duration": 4.719
    },
    {
      "lang": "en",
      "text": "images. For example, any image using the",
      "offset": 8269.639,
      "duration": 5.92
    },
    {
      "lang": "en",
      "text": "request library with pip can reuse this",
      "offset": 8272.479,
      "duration": 5.84
    },
    {
      "lang": "en",
      "text": "layer. A command's order and specific",
      "offset": 8275.559,
      "duration": 4.601
    },
    {
      "lang": "en",
      "text": "nature within the Docker file can affect",
      "offset": 8278.319,
      "duration": 3.881
    },
    {
      "lang": "en",
      "text": "whether layers are",
      "offset": 8280.16,
      "duration": 4.479
    },
    {
      "lang": "en",
      "text": "reused. You may wonder why we care about",
      "offset": 8282.2,
      "duration": 4.92
    },
    {
      "lang": "en",
      "text": "reusing layers. There are two primary",
      "offset": 8284.639,
      "duration": 5.121
    },
    {
      "lang": "en",
      "text": "reasons. Faster build times and builds",
      "offset": 8287.12,
      "duration": 3.88
    },
    {
      "lang": "en",
      "text": "taking up less",
      "offset": 8289.76,
      "duration": 3.759
    },
    {
      "lang": "en",
      "text": "space. How can we determine the layers",
      "offset": 8291,
      "duration": 5.399
    },
    {
      "lang": "en",
      "text": "that exist within an image? We can do",
      "offset": 8293.519,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "this using the Docker image inspect with",
      "offset": 8296.399,
      "duration": 5.681
    },
    {
      "lang": "en",
      "text": "the image ID or the name of the image.",
      "offset": 8298.559,
      "duration": 5.201
    },
    {
      "lang": "en",
      "text": "This command provides considerable",
      "offset": 8302.08,
      "duration": 3.599
    },
    {
      "lang": "en",
      "text": "information about the image including",
      "offset": 8303.76,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "configuration details, the system",
      "offset": 8305.679,
      "duration": 4.241
    },
    {
      "lang": "en",
      "text": "architecture it's designed for, OS",
      "offset": 8307.76,
      "duration": 4.559
    },
    {
      "lang": "en",
      "text": "details, and so forth.",
      "offset": 8309.92,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "For our purposes, it also contains a",
      "offset": 8312.319,
      "duration": 4.561
    },
    {
      "lang": "en",
      "text": "root fs layer section that provides",
      "offset": 8314.319,
      "duration": 4.561
    },
    {
      "lang": "en",
      "text": "information about which layers make up",
      "offset": 8316.88,
      "duration": 3.24
    },
    {
      "lang": "en",
      "text": "the specific",
      "offset": 8318.88,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "image. As an example, let's look at the",
      "offset": 8320.12,
      "duration": 5.479
    },
    {
      "lang": "en",
      "text": "layers found in a Postgres docker image.",
      "offset": 8322.88,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "Note that Postgres is a database server,",
      "offset": 8325.599,
      "duration": 4.241
    },
    {
      "lang": "en",
      "text": "but you do not need any knowledge of it",
      "offset": 8327.76,
      "duration": 5.28
    },
    {
      "lang": "en",
      "text": "for this course. We use the command",
      "offset": 8329.84,
      "duration": 6.12
    },
    {
      "lang": "en",
      "text": "docker image inspect postgres",
      "offset": 8333.04,
      "duration": 5.76
    },
    {
      "lang": "en",
      "text": "latest. Under the root fs section, we",
      "offset": 8335.96,
      "duration": 6.12
    },
    {
      "lang": "en",
      "text": "can see the list of layers included.",
      "offset": 8338.8,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "The list of layers references the ID",
      "offset": 8342.08,
      "duration": 4.639
    },
    {
      "lang": "en",
      "text": "assigned to the layer. We won't inspect",
      "offset": 8344.16,
      "duration": 4.479
    },
    {
      "lang": "en",
      "text": "these further, but it is an interesting",
      "offset": 8346.719,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "tool to see how layers are used within",
      "offset": 8348.639,
      "duration": 2.76
    },
    {
      "lang": "en",
      "text": "an",
      "offset": 8350.639,
      "duration": 3.201
    },
    {
      "lang": "en",
      "text": "image. It can sometimes be challenging",
      "offset": 8351.399,
      "duration": 4.12
    },
    {
      "lang": "en",
      "text": "to analyze the results of a Docker",
      "offset": 8353.84,
      "duration": 4.04
    },
    {
      "lang": "en",
      "text": "command such as Docker image",
      "offset": 8355.519,
      "duration": 5.361
    },
    {
      "lang": "en",
      "text": "inspect. The JQ command line tool is",
      "offset": 8357.88,
      "duration": 5.24
    },
    {
      "lang": "en",
      "text": "used to read JSON data like what is",
      "offset": 8360.88,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "returned from the Docker image inspect",
      "offset": 8363.12,
      "duration": 3.199
    },
    {
      "lang": "en",
      "text": "command.",
      "offset": 8364.88,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "In addition to parsing the JSON data, we",
      "offset": 8366.319,
      "duration": 4.721
    },
    {
      "lang": "en",
      "text": "can also use the jq command to query",
      "offset": 8368.8,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "specific portions of JSON data. Let's",
      "offset": 8371.04,
      "duration": 5
    },
    {
      "lang": "en",
      "text": "look at a couple of",
      "offset": 8374,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "examples. Let's consider using jq to",
      "offset": 8376.04,
      "duration": 4.599
    },
    {
      "lang": "en",
      "text": "look at a specific portion of the data",
      "offset": 8378.88,
      "duration": 4.559
    },
    {
      "lang": "en",
      "text": "set, such as the root fs data detailing",
      "offset": 8380.639,
      "duration": 5.08
    },
    {
      "lang": "en",
      "text": "the layers used in a docker",
      "offset": 8383.439,
      "duration": 5.361
    },
    {
      "lang": "en",
      "text": "image. To use jq, it's easiest to pipe",
      "offset": 8385.719,
      "duration": 5.401
    },
    {
      "lang": "en",
      "text": "the output of one command, in this case",
      "offset": 8388.8,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "docker image inspect ID of container",
      "offset": 8391.12,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "into jq.",
      "offset": 8393.76,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "After jq, we enter the portion of the",
      "offset": 8395.68,
      "duration": 4.52
    },
    {
      "lang": "en",
      "text": "output we want it in single",
      "offset": 8397.92,
      "duration": 5.68
    },
    {
      "lang": "en",
      "text": "quotes. First, we ask for open bracket",
      "offset": 8400.2,
      "duration": 6.279
    },
    {
      "lang": "en",
      "text": "zero close bracket. This represents the",
      "offset": 8403.6,
      "duration": 5.56
    },
    {
      "lang": "en",
      "text": "first instance of data found in the JSON",
      "offset": 8406.479,
      "duration": 5.601
    },
    {
      "lang": "en",
      "text": "data. We then add another pipe symbol",
      "offset": 8409.16,
      "duration": 5.8
    },
    {
      "lang": "en",
      "text": "and the textroot fs representing the",
      "offset": 8412.08,
      "duration": 5.16
    },
    {
      "lang": "en",
      "text": "root fs section of the JSON",
      "offset": 8414.96,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "output. This content will likely be",
      "offset": 8417.24,
      "duration": 5.4
    },
    {
      "lang": "en",
      "text": "confusing until you've used it more.",
      "offset": 8419.68,
      "duration": 5.28
    },
    {
      "lang": "en",
      "text": "Treat everything after the jq command as",
      "offset": 8422.64,
      "duration": 4.92
    },
    {
      "lang": "en",
      "text": "the recipe of what you want jq to",
      "offset": 8424.96,
      "duration": 5.28
    },
    {
      "lang": "en",
      "text": "do. This outputs all of the information",
      "offset": 8427.56,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "specified for the root fs as",
      "offset": 8430.24,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "previously. A second example is more",
      "offset": 8432.92,
      "duration": 4.6
    },
    {
      "lang": "en",
      "text": "complex where we use jq to count the",
      "offset": 8435.28,
      "duration": 4.36
    },
    {
      "lang": "en",
      "text": "number of layers present in an",
      "offset": 8437.52,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "image. In this case, our initial command",
      "offset": 8439.64,
      "duration": 4.6
    },
    {
      "lang": "en",
      "text": "is the same as before, but the recipe",
      "offset": 8442.24,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "fed to jq is different.",
      "offset": 8444.24,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "Theopen bracket0 closed bracket is the",
      "offset": 8446.64,
      "duration": 6.28
    },
    {
      "lang": "en",
      "text": "same, but it's piped to layer count",
      "offset": 8449.28,
      "duration": 6.92
    },
    {
      "lang": "en",
      "text": "colon.rootfs. layers pipe symbol",
      "offset": 8452.92,
      "duration": 6.04
    },
    {
      "lang": "en",
      "text": "length. This tells jq to look for the",
      "offset": 8456.2,
      "duration": 5
    },
    {
      "lang": "en",
      "text": "layers array in the root fs section and",
      "offset": 8458.96,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "determine the length of that array. It",
      "offset": 8461.2,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "then returns it as the layer count col 2",
      "offset": 8464.16,
      "duration": 4.279
    },
    {
      "lang": "en",
      "text": "entry as seen",
      "offset": 8466.64,
      "duration": 4.719
    },
    {
      "lang": "en",
      "text": "below. JQ is a very powerful tool with",
      "offset": 8468.439,
      "duration": 4.681
    },
    {
      "lang": "en",
      "text": "many capabilities that we don't cover",
      "offset": 8471.359,
      "duration": 4.161
    },
    {
      "lang": "en",
      "text": "here.",
      "offset": 8473.12,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "Welcome back. Let's now learn about",
      "offset": 8475.52,
      "duration": 3.879
    },
    {
      "lang": "en",
      "text": "multi-stage builds in",
      "offset": 8477.52,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "Docker. Typically, a Docker image is",
      "offset": 8479.399,
      "duration": 4.761
    },
    {
      "lang": "en",
      "text": "created using a single from command or",
      "offset": 8482.08,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "source image. This is also referenced as",
      "offset": 8484.16,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "a single stage build, meaning only one",
      "offset": 8487.2,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "stage or container is used to create the",
      "offset": 8489.6,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "Docker image. We can obviously add",
      "offset": 8491.84,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "anything to a given image, but each",
      "offset": 8494.64,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "addition requires more space and can",
      "offset": 8496.72,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "make the image more difficult to manage.",
      "offset": 8498.72,
      "duration": 5.48
    },
    {
      "lang": "en",
      "text": "Let's look at the Docker file for this",
      "offset": 8502.08,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "build. We're using the base Ubuntu",
      "offset": 8504.2,
      "duration": 4.44
    },
    {
      "lang": "en",
      "text": "image, but adding the necessary programs",
      "offset": 8506.64,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "for compiling the code and then actually",
      "offset": 8508.64,
      "duration": 5.24
    },
    {
      "lang": "en",
      "text": "compiling it and then running the final",
      "offset": 8510.8,
      "duration": 5.599
    },
    {
      "lang": "en",
      "text": "application. This leaves all of the code",
      "offset": 8513.88,
      "duration": 4.2
    },
    {
      "lang": "en",
      "text": "compile of the application in the",
      "offset": 8516.399,
      "duration": 3.681
    },
    {
      "lang": "en",
      "text": "container image in addition to the",
      "offset": 8518.08,
      "duration": 3.44
    },
    {
      "lang": "en",
      "text": "development software that isn't",
      "offset": 8520.08,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "necessary to run program. This increases",
      "offset": 8521.52,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "the size of the image and clutters the",
      "offset": 8524.88,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "image unnecessarily.",
      "offset": 8526.72,
      "duration": 4.639
    },
    {
      "lang": "en",
      "text": "Note that in this case, compile refers",
      "offset": 8529.12,
      "duration": 4.239
    },
    {
      "lang": "en",
      "text": "to creating an executable program from",
      "offset": 8531.359,
      "duration": 3.161
    },
    {
      "lang": "en",
      "text": "source",
      "offset": 8533.359,
      "duration": 4.241
    },
    {
      "lang": "en",
      "text": "code. A multi-stage build uses multiple",
      "offset": 8534.52,
      "duration": 5.16
    },
    {
      "lang": "en",
      "text": "stages or multiple containers for",
      "offset": 8537.6,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "different steps of the build to create a",
      "offset": 8539.68,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "final container image. Typically, a",
      "offset": 8542.24,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "multi-stage build has one or more build",
      "offset": 8545.2,
      "duration": 4.239
    },
    {
      "lang": "en",
      "text": "stages where data or binaries are",
      "offset": 8547.2,
      "duration": 4.6
    },
    {
      "lang": "en",
      "text": "prepared or compiled in some",
      "offset": 8549.439,
      "duration": 4.801
    },
    {
      "lang": "en",
      "text": "fashion. These components are then",
      "offset": 8551.8,
      "duration": 4.519
    },
    {
      "lang": "en",
      "text": "copied into a minimal final container",
      "offset": 8554.24,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "image, saving space.",
      "offset": 8556.319,
      "duration": 4.721
    },
    {
      "lang": "en",
      "text": "The containers used in the build steps",
      "offset": 8559.28,
      "duration": 3.64
    },
    {
      "lang": "en",
      "text": "are then removed",
      "offset": 8561.04,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "automatically. To accomplish this,",
      "offset": 8562.92,
      "duration": 3.88
    },
    {
      "lang": "en",
      "text": "Docker supports some additional syntax",
      "offset": 8565.04,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "we've not seen in the Docker file yet.",
      "offset": 8566.8,
      "duration": 5.48
    },
    {
      "lang": "en",
      "text": "This includes the as alias on the from",
      "offset": 8569.6,
      "duration": 5.6
    },
    {
      "lang": "en",
      "text": "statement. It also uses the copy command",
      "offset": 8572.28,
      "duration": 5.92
    },
    {
      "lang": "en",
      "text": "with the additional d- from equals alias",
      "offset": 8575.2,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "option. It's easiest to see how these",
      "offset": 8578.2,
      "duration": 4.92
    },
    {
      "lang": "en",
      "text": "work with an example.",
      "offset": 8580.56,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "Let's consider our previous situation",
      "offset": 8583.12,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "where we need to compile an application",
      "offset": 8584.96,
      "duration": 3.72
    },
    {
      "lang": "en",
      "text": "prior to",
      "offset": 8586.88,
      "duration": 3.519
    },
    {
      "lang": "en",
      "text": "containerization. This time we were",
      "offset": 8588.68,
      "duration": 3.799
    },
    {
      "lang": "en",
      "text": "using a multi-stage build process to",
      "offset": 8590.399,
      "duration": 4.241
    },
    {
      "lang": "en",
      "text": "create the final container but with a",
      "offset": 8592.479,
      "duration": 5
    },
    {
      "lang": "en",
      "text": "smaller more efficient image as a",
      "offset": 8594.64,
      "duration": 5.6
    },
    {
      "lang": "en",
      "text": "result. First we use the from Ubuntu",
      "offset": 8597.479,
      "duration": 4.92
    },
    {
      "lang": "en",
      "text": "command but you'll notice we have as",
      "offset": 8600.24,
      "duration": 5.119
    },
    {
      "lang": "en",
      "text": "stage one at the end. This provides an",
      "offset": 8602.399,
      "duration": 4.761
    },
    {
      "lang": "en",
      "text": "alias or name for the",
      "offset": 8605.359,
      "duration": 4.321
    },
    {
      "lang": "en",
      "text": "stage. In this case we're using stage",
      "offset": 8607.16,
      "duration": 5.159
    },
    {
      "lang": "en",
      "text": "one as the alias. Note that we could",
      "offset": 8609.68,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "name this anything, but it's named this",
      "offset": 8612.319,
      "duration": 3.641
    },
    {
      "lang": "en",
      "text": "way for illustration",
      "offset": 8614.08,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "purposes. Next, we have our normal build",
      "offset": 8615.96,
      "duration": 4.28
    },
    {
      "lang": "en",
      "text": "commands, which could include copying",
      "offset": 8618.479,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "source files, updating packages, and",
      "offset": 8620.24,
      "duration": 3.8
    },
    {
      "lang": "en",
      "text": "actually compiling",
      "offset": 8622.479,
      "duration": 4.081
    },
    {
      "lang": "en",
      "text": "code. You'll next notice that we use a",
      "offset": 8624.04,
      "duration": 4.439
    },
    {
      "lang": "en",
      "text": "second from statement to define the base",
      "offset": 8626.56,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "of our final image. In this case, we're",
      "offset": 8628.479,
      "duration": 5.84
    },
    {
      "lang": "en",
      "text": "using the Alpine base image. Now, we use",
      "offset": 8631.2,
      "duration": 4.199
    },
    {
      "lang": "en",
      "text": "the",
      "offset": 8634.319,
      "duration": 4.401
    },
    {
      "lang": "en",
      "text": "copy-fals stage",
      "offset": 8635.399,
      "duration": 3.321
    },
    {
      "lang": "en",
      "text": "1/ATA-appdata-app command.",
      "offset": 8639.08,
      "duration": 5.56
    },
    {
      "lang": "en",
      "text": "This tells Docker to copy the /data app",
      "offset": 8641.84,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "program from the container used in stage",
      "offset": 8644.64,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "one where we compiled the code and place",
      "offset": 8646.64,
      "duration": 5.48
    },
    {
      "lang": "en",
      "text": "it as / data app in the final",
      "offset": 8649.2,
      "duration": 5.6
    },
    {
      "lang": "en",
      "text": "image. We can use this to copy any data",
      "offset": 8652.12,
      "duration": 4.68
    },
    {
      "lang": "en",
      "text": "we want from any number of build stages",
      "offset": 8654.8,
      "duration": 3.32
    },
    {
      "lang": "en",
      "text": "as",
      "offset": 8656.8,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "required. Finally, we set a cmd entry to",
      "offset": 8658.12,
      "duration": 4.76
    },
    {
      "lang": "en",
      "text": "the data app program and finish building",
      "offset": 8660.96,
      "duration": 2.68
    },
    {
      "lang": "en",
      "text": "the",
      "offset": 8662.88,
      "duration": 3.2
    },
    {
      "lang": "en",
      "text": "image. The entire build process is",
      "offset": 8663.64,
      "duration": 4.44
    },
    {
      "lang": "en",
      "text": "cleaned up and the image used for stage",
      "offset": 8666.08,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "one is removed automatically.",
      "offset": 8668.08,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "Welcome back to our last video in this",
      "offset": 8671.28,
      "duration": 4.119
    },
    {
      "lang": "en",
      "text": "chapter, multiplatform",
      "offset": 8673.2,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "builds. Our first question may be, what",
      "offset": 8675.399,
      "duration": 5.801
    },
    {
      "lang": "en",
      "text": "does multiplatform mean? It references",
      "offset": 8678.16,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "two different aspects, an operating",
      "offset": 8681.2,
      "duration": 5.6
    },
    {
      "lang": "en",
      "text": "system and a CPU type. For different OS",
      "offset": 8683.2,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "types, containerized applications",
      "offset": 8686.8,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "usually use Linux, but could use Windows",
      "offset": 8688.72,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "or Mac OS.",
      "offset": 8691.28,
      "duration": 5.64
    },
    {
      "lang": "en",
      "text": "Regarding CPU types, we usually see the",
      "offset": 8693.84,
      "duration": 6.96
    },
    {
      "lang": "en",
      "text": "x8664 or AMD 64 type, the CPU",
      "offset": 8696.92,
      "duration": 6.04
    },
    {
      "lang": "en",
      "text": "instruction set behind most modern Intel",
      "offset": 8700.8,
      "duration": 4.04
    },
    {
      "lang": "en",
      "text": "and AMD",
      "offset": 8702.96,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "processors. You may also see ARM 64 or",
      "offset": 8704.84,
      "duration": 5.88
    },
    {
      "lang": "en",
      "text": "ARM 7 chips popular in cell phones,",
      "offset": 8708,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "Apple devices, and single board",
      "offset": 8710.72,
      "duration": 4.719
    },
    {
      "lang": "en",
      "text": "computers such as the Raspberry Pi.",
      "offset": 8712.399,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "Usually the platform is defined as the",
      "offset": 8715.439,
      "duration": 5.721
    },
    {
      "lang": "en",
      "text": "OS type/CPU type such as",
      "offset": 8717.359,
      "duration": 7.161
    },
    {
      "lang": "en",
      "text": "Linux/AMD64 or Mac",
      "offset": 8721.16,
      "duration": 6.04
    },
    {
      "lang": "en",
      "text": "OS/ARMM64. Multiplatform builds use the",
      "offset": 8724.52,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "concepts covered in multi-stage",
      "offset": 8727.2,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "builds. The build stages use cross",
      "offset": 8729.24,
      "duration": 4.68
    },
    {
      "lang": "en",
      "text": "compilers and rely on the platform of",
      "offset": 8731.84,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "the host system.",
      "offset": 8733.92,
      "duration": 3.04
    },
    {
      "lang": "en",
      "text": "While it's possible to create",
      "offset": 8735.76,
      "duration": 3.44
    },
    {
      "lang": "en",
      "text": "multiplatform builds separately, such as",
      "offset": 8736.96,
      "duration": 6.399
    },
    {
      "lang": "en",
      "text": "for Linux AMD 64 and Linux ARM 64, it's",
      "offset": 8739.2,
      "duration": 5.64
    },
    {
      "lang": "en",
      "text": "not",
      "offset": 8743.359,
      "duration": 3.761
    },
    {
      "lang": "en",
      "text": "recommended. Note cross compiler means",
      "offset": 8744.84,
      "duration": 4.28
    },
    {
      "lang": "en",
      "text": "compiling code to run on a platform",
      "offset": 8747.12,
      "duration": 3.96
    },
    {
      "lang": "en",
      "text": "different than this current",
      "offset": 8749.12,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "host. The final stage of the build uses",
      "offset": 8751.08,
      "duration": 4.68
    },
    {
      "lang": "en",
      "text": "the platform for the intended target and",
      "offset": 8753.76,
      "duration": 5.679
    },
    {
      "lang": "en",
      "text": "copies any compiled binaries in place.",
      "offset": 8755.76,
      "duration": 6
    },
    {
      "lang": "en",
      "text": "Several options are used in Docker files",
      "offset": 8759.439,
      "duration": 4.641
    },
    {
      "lang": "en",
      "text": "for multiplatform builds that define",
      "offset": 8761.76,
      "duration": 4.84
    },
    {
      "lang": "en",
      "text": "which container version should be",
      "offset": 8764.08,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "loaded. The first option used with the",
      "offset": 8766.6,
      "duration": 5.16
    },
    {
      "lang": "en",
      "text": "build stage is the d-platform equals",
      "offset": 8769.04,
      "duration": 4.68
    },
    {
      "lang": "en",
      "text": "dollar sign build platform",
      "offset": 8771.76,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "option. Dollar sign build platform",
      "offset": 8773.72,
      "duration": 4.44
    },
    {
      "lang": "en",
      "text": "represents the host platform for running",
      "offset": 8776.16,
      "duration": 3.08
    },
    {
      "lang": "en",
      "text": "the",
      "offset": 8778.16,
      "duration": 3.36
    },
    {
      "lang": "en",
      "text": "build. Assuming the base image is",
      "offset": 8779.24,
      "duration": 4.119
    },
    {
      "lang": "en",
      "text": "available for that platform, it should",
      "offset": 8781.52,
      "duration": 3.52
    },
    {
      "lang": "en",
      "text": "work automatically on different host",
      "offset": 8783.359,
      "duration": 3.921
    },
    {
      "lang": "en",
      "text": "platforms.",
      "offset": 8785.04,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "Sometimes the docker arg directive is",
      "offset": 8787.28,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "used along with a list of environment",
      "offset": 8789.84,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "variables defined on the host. This is",
      "offset": 8792,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "usually target OS and target arch",
      "offset": 8795.04,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "representing the platform components of",
      "offset": 8797.52,
      "duration": 3.16
    },
    {
      "lang": "en",
      "text": "the destination",
      "offset": 8799.28,
      "duration": 5.56
    },
    {
      "lang": "en",
      "text": "system. An example is the line",
      "offset": 8800.68,
      "duration": 6.52
    },
    {
      "lang": "en",
      "text": "arg. We'll see this in a full Docker",
      "offset": 8804.84,
      "duration": 3.2
    },
    {
      "lang": "en",
      "text": "file",
      "offset": 8807.2,
      "duration": 3.279
    },
    {
      "lang": "en",
      "text": "shortly. Note the variables defined on",
      "offset": 8808.04,
      "duration": 4.6
    },
    {
      "lang": "en",
      "text": "the host can be defined in the shell or",
      "offset": 8810.479,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "via the env command.",
      "offset": 8812.64,
      "duration": 5.28
    },
    {
      "lang": "en",
      "text": "Let's look at an example. First, we have",
      "offset": 8815.359,
      "duration": 5.321
    },
    {
      "lang": "en",
      "text": "the initial stage named build. The",
      "offset": 8817.92,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "d-platform equals dollar sign build",
      "offset": 8820.68,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "platform tells Docker to pull the Golang",
      "offset": 8823.04,
      "duration": 7
    },
    {
      "lang": "en",
      "text": "1.21 image that matches the current host",
      "offset": 8825.88,
      "duration": 6.68
    },
    {
      "lang": "en",
      "text": "platform. We then use the worker and",
      "offset": 8830.04,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "copy commands to prepare the build",
      "offset": 8832.56,
      "duration": 5.6
    },
    {
      "lang": "en",
      "text": "container. Now we see the ARG target OS",
      "offset": 8835.24,
      "duration": 5.239
    },
    {
      "lang": "en",
      "text": "target arch command which passes in the",
      "offset": 8838.16,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "target platform components.",
      "offset": 8840.479,
      "duration": 4.561
    },
    {
      "lang": "en",
      "text": "Please note these are defined by the",
      "offset": 8843.28,
      "duration": 3.44
    },
    {
      "lang": "en",
      "text": "specific command we enter on the command",
      "offset": 8845.04,
      "duration": 3.16
    },
    {
      "lang": "en",
      "text": "line of the",
      "offset": 8846.72,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "host. Next, the command to actually",
      "offset": 8848.2,
      "duration": 5.159
    },
    {
      "lang": "en",
      "text": "compile the application is used. Note",
      "offset": 8850.56,
      "duration": 4.799
    },
    {
      "lang": "en",
      "text": "this is specific to compiling a Golang",
      "offset": 8853.359,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "application, but the principle is the",
      "offset": 8855.359,
      "duration": 3.881
    },
    {
      "lang": "en",
      "text": "same for other programming",
      "offset": 8857.359,
      "duration": 4.481
    },
    {
      "lang": "en",
      "text": "languages. Notice that the target OS and",
      "offset": 8859.24,
      "duration": 4.68
    },
    {
      "lang": "en",
      "text": "target arch values are referenced using",
      "offset": 8861.84,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "dollar sign symbols.",
      "offset": 8863.92,
      "duration": 5.439
    },
    {
      "lang": "en",
      "text": "Finally, we create the final stage using",
      "offset": 8867.28,
      "duration": 4.079
    },
    {
      "lang": "en",
      "text": "the Alpine image and copy the compile",
      "offset": 8869.359,
      "duration": 3.561
    },
    {
      "lang": "en",
      "text": "code from the build",
      "offset": 8871.359,
      "duration": 4.641
    },
    {
      "lang": "en",
      "text": "stage. To run a multiplatform build, we",
      "offset": 8872.92,
      "duration": 5.08
    },
    {
      "lang": "en",
      "text": "must use the docker build x command",
      "offset": 8876,
      "duration": 5.359
    },
    {
      "lang": "en",
      "text": "rather than docker build. Docker build x",
      "offset": 8878,
      "duration": 5.359
    },
    {
      "lang": "en",
      "text": "provides more commands and capabilities",
      "offset": 8881.359,
      "duration": 4.321
    },
    {
      "lang": "en",
      "text": "than docker build, including specifying",
      "offset": 8883.359,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "destination platforms.",
      "offset": 8885.68,
      "duration": 6.6
    },
    {
      "lang": "en",
      "text": "The actual command used is docker buildx",
      "offset": 8888.319,
      "duration": 6.721
    },
    {
      "lang": "en",
      "text": "build-platform followed by the platforms",
      "offset": 8892.28,
      "duration": 6.079
    },
    {
      "lang": "en",
      "text": "then -ash t the image name and a",
      "offset": 8895.04,
      "duration": 6
    },
    {
      "lang": "en",
      "text": "dot. This tells docker to build an image",
      "offset": 8898.359,
      "duration": 7.201
    },
    {
      "lang": "en",
      "text": "for both the Linux AMD 64 and ARM 64",
      "offset": 8901.04,
      "duration": 7.2
    },
    {
      "lang": "en",
      "text": "platforms. Note that docker buildex also",
      "offset": 8905.56,
      "duration": 4.52
    },
    {
      "lang": "en",
      "text": "requires a new builder container present",
      "offset": 8908.24,
      "duration": 4.239
    },
    {
      "lang": "en",
      "text": "to build multiple platforms.",
      "offset": 8910.08,
      "duration": 6.279
    },
    {
      "lang": "en",
      "text": "This is done with the docker buildex",
      "offset": 8912.479,
      "duration": 6.041
    },
    {
      "lang": "en",
      "text": "create-ootstrap- use",
      "offset": 8916.359,
      "duration": 4.281
    },
    {
      "lang": "en",
      "text": "command. Don't worry about the details",
      "offset": 8918.52,
      "duration": 3.959
    },
    {
      "lang": "en",
      "text": "of this command. Just note that it must",
      "offset": 8920.64,
      "duration": 3.28
    },
    {
      "lang": "en",
      "text": "be present prior to running a",
      "offset": 8922.479,
      "duration": 3.721
    },
    {
      "lang": "en",
      "text": "multiplatform",
      "offset": 8923.92,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "build. Welcome back. In this chapter,",
      "offset": 8926.2,
      "duration": 4.04
    },
    {
      "lang": "en",
      "text": "let's discuss how to create",
      "offset": 8929.04,
      "duration": 3.96
    },
    {
      "lang": "en",
      "text": "multicontainer applications using docker",
      "offset": 8930.24,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "compose. Docker compose is an additional",
      "offset": 8933,
      "duration": 4.2
    },
    {
      "lang": "en",
      "text": "command line tool for use with the",
      "offset": 8935.68,
      "duration": 3.36
    },
    {
      "lang": "en",
      "text": "docker engine.",
      "offset": 8937.2,
      "duration": 4.36
    },
    {
      "lang": "en",
      "text": "It defines and manages multicontainer",
      "offset": 8939.04,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "applications. We'll discuss what this",
      "offset": 8941.56,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "means more in a few",
      "offset": 8943.439,
      "duration": 4.321
    },
    {
      "lang": "en",
      "text": "minutes. Docker compose can specify",
      "offset": 8945.16,
      "duration": 4.52
    },
    {
      "lang": "en",
      "text": "containers, networking, and storage",
      "offset": 8947.76,
      "duration": 4.44
    },
    {
      "lang": "en",
      "text": "volumes in a single file,",
      "offset": 8949.68,
      "duration": 4.759
    },
    {
      "lang": "en",
      "text": "compose. Or",
      "offset": 8952.2,
      "duration": 4.44
    },
    {
      "lang": "en",
      "text": "compose.yaml. You may also see older",
      "offset": 8954.439,
      "duration": 4.161
    },
    {
      "lang": "en",
      "text": "files named",
      "offset": 8956.64,
      "duration": 3.799
    },
    {
      "lang": "en",
      "text": "docker-mpose.yimml",
      "offset": 8958.6,
      "duration": 4.36
    },
    {
      "lang": "en",
      "text": "or.yaml. Docker compose makes it very",
      "offset": 8960.439,
      "duration": 5
    },
    {
      "lang": "en",
      "text": "easy to share or demo applications by",
      "offset": 8962.96,
      "duration": 5.359
    },
    {
      "lang": "en",
      "text": "providing the compose file. We'll create",
      "offset": 8965.439,
      "duration": 5.361
    },
    {
      "lang": "en",
      "text": "our own compose files later. For now,",
      "offset": 8968.319,
      "duration": 4.521
    },
    {
      "lang": "en",
      "text": "let's look at an example and how to use",
      "offset": 8970.8,
      "duration": 5.08
    },
    {
      "lang": "en",
      "text": "it. Let's look at a simple compose.",
      "offset": 8972.84,
      "duration": 5.16
    },
    {
      "lang": "en",
      "text": "file. Don't worry too much about the",
      "offset": 8975.88,
      "duration": 4.04
    },
    {
      "lang": "en",
      "text": "individual pieces. We'll cover this more",
      "offset": 8978,
      "duration": 3.479
    },
    {
      "lang": "en",
      "text": "in depth in the next",
      "offset": 8979.92,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "video. As an overview, this particular",
      "offset": 8981.479,
      "duration": 4.84
    },
    {
      "lang": "en",
      "text": "application first specifies a container",
      "offset": 8984.24,
      "duration": 4.76
    },
    {
      "lang": "en",
      "text": "named web app using the web app",
      "offset": 8986.319,
      "duration": 5.201
    },
    {
      "lang": "en",
      "text": "image. This would be a custom web",
      "offset": 8989,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "application housed in a",
      "offset": 8991.52,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "container. This container needs to",
      "offset": 8993.72,
      "duration": 4.2
    },
    {
      "lang": "en",
      "text": "expose ports on the host. So the port",
      "offset": 8995.84,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "section shows a mapping of port 8000 on",
      "offset": 8997.92,
      "duration": 5.8
    },
    {
      "lang": "en",
      "text": "the host to port 5000 inside the",
      "offset": 9000.08,
      "duration": 5.92
    },
    {
      "lang": "en",
      "text": "container. Next, we define the other",
      "offset": 9003.72,
      "duration": 4.12
    },
    {
      "lang": "en",
      "text": "required component of the application,",
      "offset": 9006,
      "duration": 3
    },
    {
      "lang": "en",
      "text": "the Reddus",
      "offset": 9007.84,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "backend. If you're not familiar with it,",
      "offset": 9009,
      "duration": 4.52
    },
    {
      "lang": "en",
      "text": "Reddus is a key value system used to",
      "offset": 9011.52,
      "duration": 3.839
    },
    {
      "lang": "en",
      "text": "store and retrieve data in a simpler",
      "offset": 9013.52,
      "duration": 3.879
    },
    {
      "lang": "en",
      "text": "form than a relational",
      "offset": 9015.359,
      "duration": 4.561
    },
    {
      "lang": "en",
      "text": "database. Our Reddus container uses the",
      "offset": 9017.399,
      "duration": 5.241
    },
    {
      "lang": "en",
      "text": "Reddus colpine image.",
      "offset": 9019.92,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "To start an application, change to a",
      "offset": 9022.64,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "directory containing the docker compose",
      "offset": 9024.8,
      "duration": 6.08
    },
    {
      "lang": "en",
      "text": "yl file and run docker compose up. Note",
      "offset": 9026.64,
      "duration": 6.44
    },
    {
      "lang": "en",
      "text": "that on older systems, you may see",
      "offset": 9030.88,
      "duration": 3.8
    },
    {
      "lang": "en",
      "text": "docker-mpose",
      "offset": 9033.08,
      "duration": 4.92
    },
    {
      "lang": "en",
      "text": "up. We can also specify a yaml file of a",
      "offset": 9034.68,
      "duration": 6.12
    },
    {
      "lang": "en",
      "text": "different name or location using the -f",
      "offset": 9038,
      "duration": 4.68
    },
    {
      "lang": "en",
      "text": "option with the name of the",
      "offset": 9040.8,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "file. Note that if you need to use the",
      "offset": 9042.68,
      "duration": 5.24
    },
    {
      "lang": "en",
      "text": "-f option for an application, it must be",
      "offset": 9045.04,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "used for each docker compose command you",
      "offset": 9047.92,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "run.",
      "offset": 9050.16,
      "duration": 2.96
    },
    {
      "lang": "en",
      "text": "There is the option to start an",
      "offset": 9051.68,
      "duration": 3.52
    },
    {
      "lang": "en",
      "text": "application and detach from it which",
      "offset": 9053.12,
      "duration": 3.88
    },
    {
      "lang": "en",
      "text": "keeps the containers running in the",
      "offset": 9055.2,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "background. This is done with the docker",
      "offset": 9057,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "compose up-d",
      "offset": 9059.6,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "command. In this case, we run docker",
      "offset": 9061.96,
      "duration": 4.6
    },
    {
      "lang": "en",
      "text": "compose up and see that our two",
      "offset": 9064.64,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "containers are created and then the",
      "offset": 9066.56,
      "duration": 4.68
    },
    {
      "lang": "en",
      "text": "system attaches to them and shows us the",
      "offset": 9068.56,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "output. In addition to the containers,",
      "offset": 9071.24,
      "duration": 4.199
    },
    {
      "lang": "en",
      "text": "you'll see that a new docker network is",
      "offset": 9073.68,
      "duration": 3
    },
    {
      "lang": "en",
      "text": "automatically",
      "offset": 9075.439,
      "duration": 3.361
    },
    {
      "lang": "en",
      "text": "created. Note that your output will",
      "offset": 9076.68,
      "duration": 4.04
    },
    {
      "lang": "en",
      "text": "likely be different. This is shortened",
      "offset": 9078.8,
      "duration": 3.639
    },
    {
      "lang": "en",
      "text": "for illustrative",
      "offset": 9080.72,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "purposes. To check on the status of a",
      "offset": 9082.439,
      "duration": 4.281
    },
    {
      "lang": "en",
      "text": "docker compose application, we can use",
      "offset": 9084.64,
      "duration": 4.12
    },
    {
      "lang": "en",
      "text": "the command docker compose",
      "offset": 9086.72,
      "duration": 4.44
    },
    {
      "lang": "en",
      "text": "ls. This provides a list of the",
      "offset": 9088.76,
      "duration": 4.599
    },
    {
      "lang": "en",
      "text": "applications, the status of the required",
      "offset": 9091.16,
      "duration": 4.44
    },
    {
      "lang": "en",
      "text": "containers, and the config file used to",
      "offset": 9093.359,
      "duration": 3.321
    },
    {
      "lang": "en",
      "text": "start the",
      "offset": 9095.6,
      "duration": 3.2
    },
    {
      "lang": "en",
      "text": "application. Let's consider if we want",
      "offset": 9096.68,
      "duration": 4.759
    },
    {
      "lang": "en",
      "text": "to shut down a running application. We",
      "offset": 9098.8,
      "duration": 4.639
    },
    {
      "lang": "en",
      "text": "can use the docker compose down command",
      "offset": 9101.439,
      "duration": 3.761
    },
    {
      "lang": "en",
      "text": "instead.",
      "offset": 9103.439,
      "duration": 3.841
    },
    {
      "lang": "en",
      "text": "Remember, if the -f option is used to",
      "offset": 9105.2,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "start the application, it must be used",
      "offset": 9107.28,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "to shut it down as well. This will",
      "offset": 9109.2,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "automatically shut down any running",
      "offset": 9111.92,
      "duration": 3.16
    },
    {
      "lang": "en",
      "text": "resources from a given",
      "offset": 9113.52,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "application. In this case, the Reddus",
      "offset": 9115.08,
      "duration": 4.04
    },
    {
      "lang": "en",
      "text": "and web app containers are shut down and",
      "offset": 9117.28,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "removed. And then the network created",
      "offset": 9119.12,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "specifically for this application is",
      "offset": 9121.04,
      "duration": 3.96
    },
    {
      "lang": "en",
      "text": "shut down and",
      "offset": 9122.88,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "removed. Let's take a look at how to",
      "offset": 9125,
      "duration": 4.04
    },
    {
      "lang": "en",
      "text": "create our applications with Docker",
      "offset": 9127.2,
      "duration": 4.92
    },
    {
      "lang": "en",
      "text": "Compose by writing our own compose.",
      "offset": 9129.04,
      "duration": 5.76
    },
    {
      "lang": "en",
      "text": "Files. Docker Compose files are written",
      "offset": 9132.12,
      "duration": 5.16
    },
    {
      "lang": "en",
      "text": "using YAML. Depending on your",
      "offset": 9134.8,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "experience, you may be wondering what",
      "offset": 9137.28,
      "duration": 5.199
    },
    {
      "lang": "en",
      "text": "YAML is. YAML originally stood for yet",
      "offset": 9138.88,
      "duration": 5.84
    },
    {
      "lang": "en",
      "text": "another markup language, but now has the",
      "offset": 9142.479,
      "duration": 4.161
    },
    {
      "lang": "en",
      "text": "more amusing moniker of YAML ain't",
      "offset": 9144.72,
      "duration": 2.92
    },
    {
      "lang": "en",
      "text": "markup",
      "offset": 9146.64,
      "duration": 3.839
    },
    {
      "lang": "en",
      "text": "language. It is a textbased file format,",
      "offset": 9147.64,
      "duration": 5
    },
    {
      "lang": "en",
      "text": "but whitespace indentation matters. Much",
      "offset": 9150.479,
      "duration": 3.081
    },
    {
      "lang": "en",
      "text": "like",
      "offset": 9152.64,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "Python, YAML is used in many development",
      "offset": 9153.56,
      "duration": 5.16
    },
    {
      "lang": "en",
      "text": "scenarios, often for configuration due",
      "offset": 9156.24,
      "duration": 5.76
    },
    {
      "lang": "en",
      "text": "to its relatively human readable format.",
      "offset": 9158.72,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "The rules for writing or modifying YML",
      "offset": 9162,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "can be tricky but maintain indendation",
      "offset": 9164.24,
      "duration": 4.28
    },
    {
      "lang": "en",
      "text": "as illustrated in",
      "offset": 9166.64,
      "duration": 3.88
    },
    {
      "lang": "en",
      "text": "examples. You can see this in the",
      "offset": 9168.52,
      "duration": 4.839
    },
    {
      "lang": "en",
      "text": "compose.l example where postgres colon",
      "offset": 9170.52,
      "duration": 5.56
    },
    {
      "lang": "en",
      "text": "and pgadmin colon are at the same level",
      "offset": 9173.359,
      "duration": 3.96
    },
    {
      "lang": "en",
      "text": "of",
      "offset": 9176.08,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "indentation. A yaml skeleton will be",
      "offset": 9177.319,
      "duration": 5.08
    },
    {
      "lang": "en",
      "text": "provided when needed but be aware of the",
      "offset": 9179.84,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "formatting requirements if you need to",
      "offset": 9182.399,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "create one from scratch.",
      "offset": 9184.08,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "A docker compose configuration file can",
      "offset": 9186.479,
      "duration": 4.401
    },
    {
      "lang": "en",
      "text": "have multiple primary sections that",
      "offset": 9188.88,
      "duration": 3.96
    },
    {
      "lang": "en",
      "text": "handle different parts of the",
      "offset": 9190.88,
      "duration": 4.559
    },
    {
      "lang": "en",
      "text": "application. A primary section is left",
      "offset": 9192.84,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "justified or not indented in the",
      "offset": 9195.439,
      "duration": 5.521
    },
    {
      "lang": "en",
      "text": "file. The services section is the only",
      "offset": 9198.28,
      "duration": 4.52
    },
    {
      "lang": "en",
      "text": "required component and lists all the",
      "offset": 9200.96,
      "duration": 4.04
    },
    {
      "lang": "en",
      "text": "containers required for the",
      "offset": 9202.8,
      "duration": 4.559
    },
    {
      "lang": "en",
      "text": "application. The network section is",
      "offset": 9205,
      "duration": 4.359
    },
    {
      "lang": "en",
      "text": "optional and allows specific networking",
      "offset": 9207.359,
      "duration": 3.601
    },
    {
      "lang": "en",
      "text": "configuration used by the various",
      "offset": 9209.359,
      "duration": 4.561
    },
    {
      "lang": "en",
      "text": "containers in the application.",
      "offset": 9210.96,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "A volume section is another optional",
      "offset": 9213.92,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "area to define storage requirements for",
      "offset": 9216.08,
      "duration": 4.2
    },
    {
      "lang": "en",
      "text": "data shared between",
      "offset": 9218.16,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "containers. The config section allows",
      "offset": 9220.28,
      "duration": 4.52
    },
    {
      "lang": "en",
      "text": "for specifying configuration details",
      "offset": 9222.72,
      "duration": 3.759
    },
    {
      "lang": "en",
      "text": "that would otherwise require a new",
      "offset": 9224.8,
      "duration": 3.08
    },
    {
      "lang": "en",
      "text": "container",
      "offset": 9226.479,
      "duration": 4.481
    },
    {
      "lang": "en",
      "text": "image. Lastly, the secret section allows",
      "offset": 9227.88,
      "duration": 4.92
    },
    {
      "lang": "en",
      "text": "the user to configure any passwords,",
      "offset": 9230.96,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "tokens, or API keys that the application",
      "offset": 9232.8,
      "duration": 5.28
    },
    {
      "lang": "en",
      "text": "might require. We'll cover a few of",
      "offset": 9235.52,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "these in more detail, but they are all",
      "offset": 9238.08,
      "duration": 3.52
    },
    {
      "lang": "en",
      "text": "extensively documented in the Docker",
      "offset": 9239.84,
      "duration": 3.639
    },
    {
      "lang": "en",
      "text": "Compose",
      "offset": 9241.6,
      "duration": 3.759
    },
    {
      "lang": "en",
      "text": "documentation. The section we'll be",
      "offset": 9243.479,
      "duration": 4.92
    },
    {
      "lang": "en",
      "text": "using the most is the services section.",
      "offset": 9245.359,
      "duration": 4.721
    },
    {
      "lang": "en",
      "text": "This section defines all required",
      "offset": 9248.399,
      "duration": 4.201
    },
    {
      "lang": "en",
      "text": "resources that make up the",
      "offset": 9250.08,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "application. This specifies the",
      "offset": 9252.6,
      "duration": 4.28
    },
    {
      "lang": "en",
      "text": "containers and images along with the",
      "offset": 9254.64,
      "duration": 3.759
    },
    {
      "lang": "en",
      "text": "various settings for each container",
      "offset": 9256.88,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "instance.",
      "offset": 9258.399,
      "duration": 4.321
    },
    {
      "lang": "en",
      "text": "There are extensive options available,",
      "offset": 9260.72,
      "duration": 3.599
    },
    {
      "lang": "en",
      "text": "but it's important to note that the",
      "offset": 9262.72,
      "duration": 3.36
    },
    {
      "lang": "en",
      "text": "settings only apply to the container",
      "offset": 9264.319,
      "duration": 3.16
    },
    {
      "lang": "en",
      "text": "they're specified",
      "offset": 9266.08,
      "duration": 4.319
    },
    {
      "lang": "en",
      "text": "on. Being defined in YML, the sections",
      "offset": 9267.479,
      "duration": 4.561
    },
    {
      "lang": "en",
      "text": "are indented as",
      "offset": 9270.399,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "required. The first subsection for each",
      "offset": 9272.04,
      "duration": 4.279
    },
    {
      "lang": "en",
      "text": "service is the name of the component or",
      "offset": 9274.479,
      "duration": 3.521
    },
    {
      "lang": "en",
      "text": "service and the settings for each",
      "offset": 9276.319,
      "duration": 3
    },
    {
      "lang": "en",
      "text": "indented after",
      "offset": 9278,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "that. Let's look at a sample services",
      "offset": 9279.319,
      "duration": 5.641
    },
    {
      "lang": "en",
      "text": "section in a config.yml file.",
      "offset": 9281.84,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "We first have our services section",
      "offset": 9284.96,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "defined followed by the resource name at",
      "offset": 9286.64,
      "duration": 3.48
    },
    {
      "lang": "en",
      "text": "the first level of",
      "offset": 9288.72,
      "duration": 3.52
    },
    {
      "lang": "en",
      "text": "indentation. In this case, we have a",
      "offset": 9290.12,
      "duration": 3.52
    },
    {
      "lang": "en",
      "text": "resource named",
      "offset": 9292.24,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "Postgres. For the Postgres resource, we",
      "offset": 9293.64,
      "duration": 5.24
    },
    {
      "lang": "en",
      "text": "use a container name option which",
      "offset": 9296.24,
      "duration": 5.199
    },
    {
      "lang": "en",
      "text": "assigns a name to the container.",
      "offset": 9298.88,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "Otherwise, the name is randomly",
      "offset": 9301.439,
      "duration": 3.281
    },
    {
      "lang": "en",
      "text": "generated which can make troubleshooting",
      "offset": 9303.04,
      "duration": 3.16
    },
    {
      "lang": "en",
      "text": "more",
      "offset": 9304.72,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "difficult. After that, we use the image",
      "offset": 9306.2,
      "duration": 4.44
    },
    {
      "lang": "en",
      "text": "option to specify which container image",
      "offset": 9308.72,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "to use.",
      "offset": 9310.64,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "In our example, we then show the port",
      "offset": 9312.64,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "subsection which provides a list of all",
      "offset": 9314.56,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "mapped IP ports. In this case, we map",
      "offset": 9316.8,
      "duration": 6.84
    },
    {
      "lang": "en",
      "text": "port 5432 to 5432 in the",
      "offset": 9319.92,
      "duration": 6.08
    },
    {
      "lang": "en",
      "text": "container. The flow then repeats as",
      "offset": 9323.64,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "needed for the remaining",
      "offset": 9326,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "resources. Before we move to some",
      "offset": 9328.2,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "practice exercises, let's review a few",
      "offset": 9330.56,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "things. The first is that the",
      "offset": 9332.84,
      "duration": 5.24
    },
    {
      "lang": "en",
      "text": "config.amel syntax is extensive. We've",
      "offset": 9334.72,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "only reviewed a very small subset of the",
      "offset": 9338.08,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "options available in a config.l ML file.",
      "offset": 9339.92,
      "duration": 6.439
    },
    {
      "lang": "en",
      "text": "Review the documentation for further",
      "offset": 9342.96,
      "duration": 6
    },
    {
      "lang": "en",
      "text": "details. Welcome back. We're getting",
      "offset": 9346.359,
      "duration": 4.441
    },
    {
      "lang": "en",
      "text": "near the end of our course. So, let's",
      "offset": 9348.96,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "cover one last new topic in Docker",
      "offset": 9350.8,
      "duration": 3.559
    },
    {
      "lang": "en",
      "text": "Compose,",
      "offset": 9352.64,
      "duration": 4.12
    },
    {
      "lang": "en",
      "text": "dependencies. So, what are",
      "offset": 9354.359,
      "duration": 4.841
    },
    {
      "lang": "en",
      "text": "dependencies? Dependencies in Docker",
      "offset": 9356.76,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "Compose, define the order of resource",
      "offset": 9359.2,
      "duration": 5.68
    },
    {
      "lang": "en",
      "text": "startup. Resources, meaning containers,",
      "offset": 9361.96,
      "duration": 4.76
    },
    {
      "lang": "en",
      "text": "may require other resources to be in",
      "offset": 9364.88,
      "duration": 2.599
    },
    {
      "lang": "en",
      "text": "place",
      "offset": 9366.72,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "first. Consider an example. a simple web",
      "offset": 9367.479,
      "duration": 5.441
    },
    {
      "lang": "en",
      "text": "application consisting of three",
      "offset": 9370.88,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "resources. Our first resource is a",
      "offset": 9372.92,
      "duration": 4.519
    },
    {
      "lang": "en",
      "text": "database container running PostgrSQL",
      "offset": 9375.2,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "which must start prior to the others",
      "offset": 9377.439,
      "duration": 4.481
    },
    {
      "lang": "en",
      "text": "otherwise the application will throw",
      "offset": 9380.16,
      "duration": 3.88
    },
    {
      "lang": "en",
      "text": "errors until the database is",
      "offset": 9381.92,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "available. Next is the Python",
      "offset": 9384.04,
      "duration": 4.04
    },
    {
      "lang": "en",
      "text": "application that controls communications",
      "offset": 9386.16,
      "duration": 4.12
    },
    {
      "lang": "en",
      "text": "between the web and the",
      "offset": 9388.08,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "database. Finally, the engine X resource",
      "offset": 9390.28,
      "duration": 4.28
    },
    {
      "lang": "en",
      "text": "starts up the web server and actually",
      "offset": 9392.88,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "serves the web content.",
      "offset": 9394.56,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "Basic dependencies are defined using the",
      "offset": 9397.04,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "depends underscore on attribute followed",
      "offset": 9399.12,
      "duration": 4.84
    },
    {
      "lang": "en",
      "text": "by a list of the resources it depends",
      "offset": 9401.68,
      "duration": 5.28
    },
    {
      "lang": "en",
      "text": "on. Dependencies can be chained as in",
      "offset": 9403.96,
      "duration": 5.56
    },
    {
      "lang": "en",
      "text": "our example. First we define the",
      "offset": 9406.96,
      "duration": 5.64
    },
    {
      "lang": "en",
      "text": "Postgrql resource which has no",
      "offset": 9409.52,
      "duration": 5.68
    },
    {
      "lang": "en",
      "text": "dependencies. The Python app then has a",
      "offset": 9412.6,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "depends on attribute listing",
      "offset": 9415.2,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "Postgrrisql followed by the engineext",
      "offset": 9418.04,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "resource which depends on the Python",
      "offset": 9420.24,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "app. In addition to a dependency chain,",
      "offset": 9422.6,
      "duration": 5.16
    },
    {
      "lang": "en",
      "text": "you can list multiple dependencies per",
      "offset": 9425.68,
      "duration": 3.96
    },
    {
      "lang": "en",
      "text": "resource if",
      "offset": 9427.76,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "required. It's important to note that",
      "offset": 9429.64,
      "duration": 4.28
    },
    {
      "lang": "en",
      "text": "once dependencies are defined, the order",
      "offset": 9431.84,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "of resources within the compos.yamel",
      "offset": 9433.92,
      "duration": 3.8
    },
    {
      "lang": "en",
      "text": "file does not",
      "offset": 9436,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "matter. Important when shutting down",
      "offset": 9437.72,
      "duration": 4.759
    },
    {
      "lang": "en",
      "text": "applications, the resources shut down in",
      "offset": 9440.16,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "reverse order. In our example, the",
      "offset": 9442.479,
      "duration": 5
    },
    {
      "lang": "en",
      "text": "engine X resource would be stopped",
      "offset": 9445.2,
      "duration": 5.64
    },
    {
      "lang": "en",
      "text": "first. Then the Python app resource is",
      "offset": 9447.479,
      "duration": 6.041
    },
    {
      "lang": "en",
      "text": "removed and finally the Postgrrisql",
      "offset": 9450.84,
      "duration": 4.44
    },
    {
      "lang": "en",
      "text": "resource is shut down as no running",
      "offset": 9453.52,
      "duration": 3.32
    },
    {
      "lang": "en",
      "text": "containers require",
      "offset": 9455.28,
      "duration": 4.079
    },
    {
      "lang": "en",
      "text": "it. Docker compose provides other",
      "offset": 9456.84,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "options for defining",
      "offset": 9459.359,
      "duration": 4.241
    },
    {
      "lang": "en",
      "text": "dependencies. The condition attribute",
      "offset": 9461.24,
      "duration": 4.28
    },
    {
      "lang": "en",
      "text": "tells docker compose when a dependency",
      "offset": 9463.6,
      "duration": 4.879
    },
    {
      "lang": "en",
      "text": "is successfully started and is ready.",
      "offset": 9465.52,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "The first condition is called service",
      "offset": 9468.479,
      "duration": 4.241
    },
    {
      "lang": "en",
      "text": "started meaning the resource must have",
      "offset": 9470.88,
      "duration": 2.68
    },
    {
      "lang": "en",
      "text": "started",
      "offset": 9472.72,
      "duration": 2.96
    },
    {
      "lang": "en",
      "text": "normally. This is the same as the",
      "offset": 9473.56,
      "duration": 4.28
    },
    {
      "lang": "en",
      "text": "default behavior when using a depends on",
      "offset": 9475.68,
      "duration": 3.88
    },
    {
      "lang": "en",
      "text": "without a condition",
      "offset": 9477.84,
      "duration": 4.2
    },
    {
      "lang": "en",
      "text": "attribute. The next condition is called",
      "offset": 9479.56,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "service completed",
      "offset": 9482.04,
      "duration": 4.68
    },
    {
      "lang": "en",
      "text": "successfully. This indicates that a",
      "offset": 9484.68,
      "duration": 3.96
    },
    {
      "lang": "en",
      "text": "resource ran to completion before moving",
      "offset": 9486.72,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "to the next resource.",
      "offset": 9488.64,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "This isn't used often, but could be as a",
      "offset": 9491.2,
      "duration": 4.239
    },
    {
      "lang": "en",
      "text": "setup resource, a configuration",
      "offset": 9493.6,
      "duration": 3.759
    },
    {
      "lang": "en",
      "text": "validation, or anything where you need",
      "offset": 9495.439,
      "duration": 4.601
    },
    {
      "lang": "en",
      "text": "steps to occur before starting an",
      "offset": 9497.359,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "application. The last and most powerful",
      "offset": 9500.04,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "condition is called",
      "offset": 9502.399,
      "duration": 4.321
    },
    {
      "lang": "en",
      "text": "service_healthy. This means the resource",
      "offset": 9504.76,
      "duration": 3.8
    },
    {
      "lang": "en",
      "text": "is started and is not considered ready",
      "offset": 9506.72,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "until it passes a health check. The",
      "offset": 9508.56,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "health check is a defined method such as",
      "offset": 9511.12,
      "duration": 4.319
    },
    {
      "lang": "en",
      "text": "accessing a specific web page or",
      "offset": 9513.6,
      "duration": 3.759
    },
    {
      "lang": "en",
      "text": "verifying a TCP port answers a",
      "offset": 9515.439,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "connection request.",
      "offset": 9517.359,
      "duration": 3.841
    },
    {
      "lang": "en",
      "text": "Health checks can be defined in Docker",
      "offset": 9519.359,
      "duration": 4.281
    },
    {
      "lang": "en",
      "text": "files or in a Docker Compose file as",
      "offset": 9521.2,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "needed. We won't cover creating our own",
      "offset": 9523.64,
      "duration": 4.52
    },
    {
      "lang": "en",
      "text": "health checks in this course, but we can",
      "offset": 9526,
      "duration": 4.68
    },
    {
      "lang": "en",
      "text": "still use existing ones in our",
      "offset": 9528.16,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "dependencies. Before we complete this",
      "offset": 9530.68,
      "duration": 3.639
    },
    {
      "lang": "en",
      "text": "video, let's look at some extra",
      "offset": 9532.8,
      "duration": 3.12
    },
    {
      "lang": "en",
      "text": "troubleshooting tools available within",
      "offset": 9534.319,
      "duration": 2.841
    },
    {
      "lang": "en",
      "text": "Docker",
      "offset": 9535.92,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "Compose. The command docker compose logs",
      "offset": 9537.16,
      "duration": 4.92
    },
    {
      "lang": "en",
      "text": "will gather the output from all",
      "offset": 9540.56,
      "duration": 4.799
    },
    {
      "lang": "en",
      "text": "resources within an application. Here's",
      "offset": 9542.08,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "an example application using Reddus in a",
      "offset": 9545.359,
      "duration": 3.241
    },
    {
      "lang": "en",
      "text": "web",
      "offset": 9547.6,
      "duration": 3.12
    },
    {
      "lang": "en",
      "text": "application. Notice that the name of the",
      "offset": 9548.6,
      "duration": 4.12
    },
    {
      "lang": "en",
      "text": "resource is prepended to each line of",
      "offset": 9550.72,
      "duration": 3.08
    },
    {
      "lang": "en",
      "text": "the",
      "offset": 9552.72,
      "duration": 3.12
    },
    {
      "lang": "en",
      "text": "output. This would be the same as",
      "offset": 9553.8,
      "duration": 4.519
    },
    {
      "lang": "en",
      "text": "running docker logs container ID for",
      "offset": 9555.84,
      "duration": 4.36
    },
    {
      "lang": "en",
      "text": "each resource in the",
      "offset": 9558.319,
      "duration": 4.321
    },
    {
      "lang": "en",
      "text": "application. You can also run docker",
      "offset": 9560.2,
      "duration": 5
    },
    {
      "lang": "en",
      "text": "compose logs resource name such as",
      "offset": 9562.64,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "docker compose logs web to get just the",
      "offset": 9565.2,
      "duration": 6.08
    },
    {
      "lang": "en",
      "text": "output from the web resource.",
      "offset": 9568.08,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "Another useful tool for troubleshooting",
      "offset": 9571.28,
      "duration": 5.199
    },
    {
      "lang": "en",
      "text": "docker compose is docker compose top.",
      "offset": 9573.12,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "This shows the status of resources",
      "offset": 9576.479,
      "duration": 3.161
    },
    {
      "lang": "en",
      "text": "within an",
      "offset": 9578.08,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "application. This example shows the same",
      "offset": 9579.64,
      "duration": 4.2
    },
    {
      "lang": "en",
      "text": "reddus and web resources with the name",
      "offset": 9582.08,
      "duration": 4.68
    },
    {
      "lang": "en",
      "text": "of the application compose",
      "offset": 9583.84,
      "duration": 5.519
    },
    {
      "lang": "en",
      "text": "test. Welcome back to the last video of",
      "offset": 9586.76,
      "duration": 5.16
    },
    {
      "lang": "en",
      "text": "this course. We're going to cover a few",
      "offset": 9589.359,
      "duration": 4.481
    },
    {
      "lang": "en",
      "text": "outstanding details and review some of",
      "offset": 9591.92,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "the topics we've covered thus far before",
      "offset": 9593.84,
      "duration": 4.559
    },
    {
      "lang": "en",
      "text": "finishing our last exercises.",
      "offset": 9595.76,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "Let's review a task discussed earlier.",
      "offset": 9598.399,
      "duration": 4.481
    },
    {
      "lang": "en",
      "text": "Sharing data between host and container",
      "offset": 9600.96,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "using bind mounts. This is handled with",
      "offset": 9602.88,
      "duration": 5.68
    },
    {
      "lang": "en",
      "text": "the docker run-v command followed by the",
      "offset": 9605.84,
      "duration": 4.84
    },
    {
      "lang": "en",
      "text": "host directory colon container",
      "offset": 9608.56,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "directory. For example, we can use -v",
      "offset": 9610.68,
      "duration": 7.799
    },
    {
      "lang": "en",
      "text": "tilt a/host data colt container data.",
      "offset": 9613.52,
      "duration": 6.879
    },
    {
      "lang": "en",
      "text": "One piece we had not covered previously",
      "offset": 9618.479,
      "duration": 3.761
    },
    {
      "lang": "en",
      "text": "is bind bounds can be applied in",
      "offset": 9620.399,
      "duration": 5.281
    },
    {
      "lang": "en",
      "text": "compose.l files as well. Under each",
      "offset": 9622.24,
      "duration": 5.119
    },
    {
      "lang": "en",
      "text": "resource directory, we can use the",
      "offset": 9625.68,
      "duration": 3.4
    },
    {
      "lang": "en",
      "text": "volumes option as",
      "offset": 9627.359,
      "duration": 4.721
    },
    {
      "lang": "en",
      "text": "shown. Under the volume options, we can",
      "offset": 9629.08,
      "duration": 5.319
    },
    {
      "lang": "en",
      "text": "use the list syntax in YAML starting",
      "offset": 9632.08,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "with a dash spacehost directory colon",
      "offset": 9634.399,
      "duration": 3.641
    },
    {
      "lang": "en",
      "text": "container",
      "offset": 9636.96,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "directory. As with above, we can use",
      "offset": 9638.04,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "dash",
      "offset": 9640.64,
      "duration": 4.679
    },
    {
      "lang": "en",
      "text": "tillday/host data slashcontainer",
      "offset": 9641.72,
      "duration": 6.44
    },
    {
      "lang": "en",
      "text": "data. Note that list syntax here means",
      "offset": 9645.319,
      "duration": 6.361
    },
    {
      "lang": "en",
      "text": "each indented line starting with a dash.",
      "offset": 9648.16,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "While we don't show it here, we can use",
      "offset": 9651.68,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "as many entries as needed for all",
      "offset": 9653.6,
      "duration": 3.64
    },
    {
      "lang": "en",
      "text": "required bind",
      "offset": 9655.28,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "mounts. As a reminder about adding",
      "offset": 9657.24,
      "duration": 4.6
    },
    {
      "lang": "en",
      "text": "containers to specific networks, we can",
      "offset": 9659.68,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "use the d- network flag with the name of",
      "offset": 9661.84,
      "duration": 3.08
    },
    {
      "lang": "en",
      "text": "the",
      "offset": 9664.08,
      "duration": 4.52
    },
    {
      "lang": "en",
      "text": "network. For example, we can use docker",
      "offset": 9664.92,
      "duration": 6.28
    },
    {
      "lang": "en",
      "text": "run-etwork net one to connect a",
      "offset": 9668.6,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "container to the net one",
      "offset": 9671.2,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "network. We can also define a network",
      "offset": 9673.16,
      "duration": 5.08
    },
    {
      "lang": "en",
      "text": "section in compos.l files under a",
      "offset": 9675.76,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "resource.",
      "offset": 9678.24,
      "duration": 3.199
    },
    {
      "lang": "en",
      "text": "The name of a network is added as a",
      "offset": 9679.6,
      "duration": 3.36
    },
    {
      "lang": "en",
      "text": "section with other config options",
      "offset": 9681.439,
      "duration": 3.841
    },
    {
      "lang": "en",
      "text": "available such as assigning a specific",
      "offset": 9682.96,
      "duration": 3.32
    },
    {
      "lang": "en",
      "text": "IP",
      "offset": 9685.28,
      "duration": 3.28
    },
    {
      "lang": "en",
      "text": "address. A quick review for port",
      "offset": 9686.28,
      "duration": 5.72
    },
    {
      "lang": "en",
      "text": "mapping. The docker run-P hostport col",
      "offset": 9688.56,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "container port will connect traffic",
      "offset": 9692,
      "duration": 4.319
    },
    {
      "lang": "en",
      "text": "going to the defined host on the port",
      "offset": 9694.08,
      "duration": 4.239
    },
    {
      "lang": "en",
      "text": "and send it to the container port and",
      "offset": 9696.319,
      "duration": 3
    },
    {
      "lang": "en",
      "text": "vice",
      "offset": 9698.319,
      "duration": 4.681
    },
    {
      "lang": "en",
      "text": "versa. A quick example is using",
      "offset": 9699.319,
      "duration": 5.681
    },
    {
      "lang": "en",
      "text": "-p8000",
      "offset": 9703,
      "duration": 5.08
    },
    {
      "lang": "en",
      "text": "8000. As with bind mounts, we can also",
      "offset": 9705,
      "duration": 6.92
    },
    {
      "lang": "en",
      "text": "map ports in compos.l files. The syntax",
      "offset": 9708.08,
      "duration": 6.76
    },
    {
      "lang": "en",
      "text": "is similar with a ports option under a",
      "offset": 9711.92,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "resource. We can then define the mapping",
      "offset": 9714.84,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "using the list syntax with the",
      "offset": 9717.28,
      "duration": 4.199
    },
    {
      "lang": "en",
      "text": "-ashhostport col container",
      "offset": 9718.92,
      "duration": 5.76
    },
    {
      "lang": "en",
      "text": "port. For the example above, we can use",
      "offset": 9721.479,
      "duration": 7.081
    },
    {
      "lang": "en",
      "text": "-8000 8000. We can map as many ports as",
      "offset": 9724.68,
      "duration": 5.799
    },
    {
      "lang": "en",
      "text": "required using the syntax with one",
      "offset": 9728.56,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "mapping per line.",
      "offset": 9730.479,
      "duration": 4.401
    },
    {
      "lang": "en",
      "text": "We covered some of this previously, but",
      "offset": 9732.72,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "Docker Inspect provides information",
      "offset": 9734.88,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "about provisioned containers, including",
      "offset": 9736.72,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "stopped ones. To run the command, we use",
      "offset": 9738.8,
      "duration": 5.639
    },
    {
      "lang": "en",
      "text": "Docker Inspect ID or",
      "offset": 9741.92,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "name. This provides various levels of",
      "offset": 9744.439,
      "duration": 4.201
    },
    {
      "lang": "en",
      "text": "information, including mounts for",
      "offset": 9746.96,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "mounted data and network settings for",
      "offset": 9748.64,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "information about the networking",
      "offset": 9750.88,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "configuration of the container.",
      "offset": 9752.24,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "The network section under network",
      "offset": 9755.04,
      "duration": 3.52
    },
    {
      "lang": "en",
      "text": "settings will show the name of the",
      "offset": 9756.88,
      "duration": 3.12
    },
    {
      "lang": "en",
      "text": "Docker networks the container",
      "offset": 9758.56,
      "duration": 3.879
    },
    {
      "lang": "en",
      "text": "communicates with and other",
      "offset": 9760,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "details. In this example, the container",
      "offset": 9762.439,
      "duration": 5.201
    },
    {
      "lang": "en",
      "text": "would be connected to the network one",
      "offset": 9765.04,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "network. Let's quickly cover what we're",
      "offset": 9767.64,
      "duration": 5.24
    },
    {
      "lang": "en",
      "text": "going to build in the exercises ahead.",
      "offset": 9770,
      "duration": 4.319
    },
    {
      "lang": "en",
      "text": "We're going to create a basic",
      "offset": 9772.88,
      "duration": 4.12
    },
    {
      "lang": "en",
      "text": "multicontainer data",
      "offset": 9774.319,
      "duration": 4.641
    },
    {
      "lang": "en",
      "text": "application. The first container",
      "offset": 9777,
      "duration": 3.96
    },
    {
      "lang": "en",
      "text": "consists of a Python web application",
      "offset": 9778.96,
      "duration": 3.72
    },
    {
      "lang": "en",
      "text": "that communicates with a",
      "offset": 9780.96,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "database. We'll be using an embedded",
      "offset": 9782.68,
      "duration": 4.6
    },
    {
      "lang": "en",
      "text": "database for this example, but it could",
      "offset": 9784.88,
      "duration": 5.08
    },
    {
      "lang": "en",
      "text": "easily be a database on a separate",
      "offset": 9787.28,
      "duration": 5.199
    },
    {
      "lang": "en",
      "text": "container. Next, we'll add a data client",
      "offset": 9789.96,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "application to communicate with the data",
      "offset": 9792.479,
      "duration": 4.721
    },
    {
      "lang": "en",
      "text": "service. The client is fairly simple,",
      "offset": 9794.92,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "but could be easily",
      "offset": 9797.2,
      "duration": 4.159
    },
    {
      "lang": "en",
      "text": "expanded. All container communication",
      "offset": 9799.08,
      "duration": 4.76
    },
    {
      "lang": "en",
      "text": "will be over HTTP, but it could be done",
      "offset": 9801.359,
      "duration": 5.721
    },
    {
      "lang": "en",
      "text": "using a different protocol as",
      "offset": 9803.84,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "desired. Great work going through",
      "offset": 9807.08,
      "duration": 4.279
    },
    {
      "lang": "en",
      "text": "everything in this course. Let's provide",
      "offset": 9809.2,
      "duration": 5.119
    },
    {
      "lang": "en",
      "text": "a few options for future study. Given",
      "offset": 9811.359,
      "duration": 4.641
    },
    {
      "lang": "en",
      "text": "the generalpurpose capabilities of",
      "offset": 9814.319,
      "duration": 3.521
    },
    {
      "lang": "en",
      "text": "Docker, it can be tricky to determine",
      "offset": 9816,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "what to work on next. The first",
      "offset": 9817.84,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "suggestion is to look through the",
      "offset": 9820.399,
      "duration": 5.08
    },
    {
      "lang": "en",
      "text": "extensive documentation available at",
      "offset": 9821.84,
      "duration": 5.599
    },
    {
      "lang": "en",
      "text": "docs.docker.com. There are many details",
      "offset": 9825.479,
      "duration": 3.641
    },
    {
      "lang": "en",
      "text": "and examples of various ways to",
      "offset": 9827.439,
      "duration": 3.561
    },
    {
      "lang": "en",
      "text": "implement Docker for your",
      "offset": 9829.12,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "environment. Your best learning option",
      "offset": 9831,
      "duration": 4.6
    },
    {
      "lang": "en",
      "text": "is to containerize more applications",
      "offset": 9833.2,
      "duration": 5.279
    },
    {
      "lang": "en",
      "text": "regardless of the purpose or platform.",
      "offset": 9835.6,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "You can containerize custom scripts,",
      "offset": 9838.479,
      "duration": 4.401
    },
    {
      "lang": "en",
      "text": "services, and even games depending on",
      "offset": 9840.8,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "your needs. Each behaves differently and",
      "offset": 9842.88,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "can provide strategies to improve your",
      "offset": 9846,
      "duration": 3.399
    },
    {
      "lang": "en",
      "text": "Docker",
      "offset": 9847.92,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "configurations. You can also create your",
      "offset": 9849.399,
      "duration": 4.121
    },
    {
      "lang": "en",
      "text": "own custom or private repositories to",
      "offset": 9851.52,
      "duration": 3.56
    },
    {
      "lang": "en",
      "text": "store your container",
      "offset": 9853.52,
      "duration": 3.52
    },
    {
      "lang": "en",
      "text": "images. You may wish to look at",
      "offset": 9855.08,
      "duration": 3.8
    },
    {
      "lang": "en",
      "text": "container orchestration platforms such",
      "offset": 9857.04,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "as Docker Swarm or Kubernetes.",
      "offset": 9858.88,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "These are multi-host platforms that",
      "offset": 9861.76,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "provide options to run containers in a",
      "offset": 9863.6,
      "duration": 4.52
    },
    {
      "lang": "en",
      "text": "powerful, scalable, fault tolerant",
      "offset": 9865.6,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "way. If you're primarily a software",
      "offset": 9868.12,
      "duration": 4.199
    },
    {
      "lang": "en",
      "text": "developer, you can use Docker for",
      "offset": 9870.64,
      "duration": 4.12
    },
    {
      "lang": "en",
      "text": "continuous integration and delivery",
      "offset": 9872.319,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "tasks. Finally, you can also look at",
      "offset": 9874.76,
      "duration": 4.519
    },
    {
      "lang": "en",
      "text": "using Docker with specific hardware such",
      "offset": 9877.279,
      "duration": 2.681
    },
    {
      "lang": "en",
      "text": "as",
      "offset": 9879.279,
      "duration": 3.04
    },
    {
      "lang": "en",
      "text": "GPUs. This can allow you to better",
      "offset": 9879.96,
      "duration": 4.2
    },
    {
      "lang": "en",
      "text": "utilize your hardware without requiring",
      "offset": 9882.319,
      "duration": 5.801
    },
    {
      "lang": "en",
      "text": "new setups for each application.",
      "offset": 9884.16,
      "duration": 3.96
    }
  ],
  "cleanText": null,
  "dumpedAt": "2025-07-21T18:43:25.274Z"
}