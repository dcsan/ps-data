{
  "episode": {
    "id": "HUkBz-cdB-k",
    "title": "Terence Tao: Hardest Problems in Mathematics, Physics & the Future of AI | Lex Fridman Podcast #472",
    "publishedAt": "2025-06-14T20:15:34.000Z",
    "description": "Terence Tao is widely considered to be one of the greatest mathematicians in history. He won the Fields Medal and the Breakthrough Prize in Mathematics, and has contributed to a wide range of fields from fluid dynamics with Navier-Stokes equations to mathematical physics & quantum mechanics, prime numbers & analytics number theory, harmonic analysis, compressed sensing, random matrix theory, combinatorics, and progress on many of the hardest problems in the history of mathematics.\nThank you for listening ❤ Check out our sponsors: https://lexfridman.com/sponsors/ep472-sb\nSee below for timestamps, and to give feedback, submit questions, contact Lex, etc.\n\n*CONTACT LEX:*\n*Feedback* - give feedback to Lex: https://lexfridman.com/survey\n*AMA* - submit questions, videos or call-in: https://lexfridman.com/ama\n*Hiring* - join our team: https://lexfridman.com/hiring\n*Other* - other ways to get in touch: https://lexfridman.com/contact\n\n*EPISODE LINKS:*\nTerence's Blog: https://terrytao.wordpress.com/\nTerence's YouTube: https://www.youtube.com/@TerenceTao27\nTerence's Books: https://amzn.to/43H9Aiq\n\n*SPONSORS:*\nTo support this podcast, check out our sponsors & get discounts:\n*Notion:* Note-taking and team collaboration.\nGo to https://lexfridman.com/s/notion-ep472-sb\n*Shopify:* Sell stuff online.\nGo to https://lexfridman.com/s/shopify-ep472-sb\n*NetSuite:* Business management software.\nGo to https://lexfridman.com/s/netsuite-ep472-sb\n*LMNT:* Zero-sugar electrolyte drink mix.\nGo to https://lexfridman.com/s/lmnt-ep472-sb\n*AG1:* All-in-one daily nutrition drink.\nGo to https://lexfridman.com/s/ag1-ep472-sb\n\n*OUTLINE:*\n0:00 - Introduction\n0:49 - First hard problem\n6:16 - Navier–Stokes singularity\n26:26 - Game of life\n33:01 - Infinity\n38:07 - Math vs Physics\n44:26 - Nature of reality\n1:07:09 - Theory of everything\n1:13:10 - General relativity\n1:16:37 - Solving difficult problems\n1:20:01 - AI-assisted theorem proving\n1:32:51 - Lean programming language\n1:42:51 - DeepMind's AlphaProof\n1:47:45 - Human mathematicians vs AI\n1:57:37 - AI winning the Fields Medal\n2:04:47 - Grigori Perelman\n2:17:30 - Twin Prime Conjecture\n2:34:04 - Collatz conjecture\n2:40:50 - P = NP\n2:43:43 - Fields Medal\n2:51:18 - Andrew Wiles and Fermat's Last Theorem\n2:55:16 - Productivity\n2:57:55 - Advice for young people\n3:06:17 - The greatest mathematician of all time\n\n*PODCAST LINKS:*\n- Podcast Website: https://lexfridman.com/podcast\n- Apple Podcasts: https://apple.co/2lwqZIr\n- Spotify: https://spoti.fi/2nEwCF8\n- RSS: https://lexfridman.com/feed/podcast/\n- Podcast Playlist: https://www.youtube.com/playlist?list=PLrAXtmErZgOdP_8GztsuKi9nrraNbKKp4\n- Clips Channel: https://www.youtube.com/lexclips\n\n*SOCIAL LINKS:*\n- X: https://x.com/lexfridman\n- Instagram: https://instagram.com/lexfridman\n- TikTok: https://tiktok.com/@lexfridman\n- LinkedIn: https://linkedin.com/in/lexfridman\n- Facebook: https://facebook.com/lexfridman\n- Patreon: https://patreon.com/lexfridman\n- Telegram: https://t.me/lexfridman\n- Reddit: https://reddit.com/r/lexfridman"
  },
  "channel": {
    "id": "UCSHZKyawb77ixDdsGog4iWA",
    "name": "Lex Fridman",
    "slug": "@lexfridman",
    "url": "https://www.youtube.com/@lexfridman"
  },
  "transcript": "The following is a conversation with Terence Tao. Widely considered to be one of the greatest mathematicians in history. Often referred to as the Mozart of Math, he won the Fields Medal and the Breakthrough Prize in Mathematics and has contributed groundbreaking work to a truly astonishing range of fields in Mathematics and Physics.\n\nThis was a huge honor for me for many reasons, including the humility and kindness that Terry showed to me throughout all our interactions. It means the world. This is the Lex Fridman Podcast. To support it, please check out our sponsors in the description or at lexfridman.com/sponsors.\n\nAnd now, dear friends, here's Terrence Tao.\n\nWhat was the first really difficult research level math problem that you encountered? One that gave you pause maybe. Well, I mean in your undergraduate um education, you learn about the really hard impossible problems like the reman hypothesis, the twin primes conjecture. You can make problems arbitrarily difficult. That's not really a problem. In fact, there's even problems that we know to be unsolvable. What's really interesting are the problems just at the on the boundary between what we can do relatively easily and what are hopeless. Um but what are problems where like existing techniques can do like 90% of the job and then you just need that remaining 10%. Um I think as a PhD student the CA problem certainly caught my eye and it just got solved actually. It's a problem I've worked on a lot in my early research. Historically it came from a little puzzle by the Japanese mathematician Soji Kaya uh in like 1918 or so. Um, so the puzzle is that you you you have um a needle um in on the plane. Um think like like a like driving like on on on a road something and you you want it to execute a U-turn. You want to turn the needle around. Um but you want to do it in as little space as possible. So you want to use as little area in order to turn it around. So um but the needle is infinitely maneuverable. So you can imagine just spinning it around its um as a unit needle. You can spin it around its center. Um, and I think, um, that gives you a disc of of area, I think pi over four. Um, or you can do a three-point U-turn, which is what they we teach people in in the driving schools to do. Uh, and that actually takes area pi over 8. So, it's it's a little bit more efficient than um a rotation. And so, for a while, people thought that was the most efficient uh way to turn things around. But, Mazikovich uh showed that in fact, you could actually uh turn the needle around using as little area as you wanted. So 0001 there was some really fancy multi- um u back and forth U-turn thing that you could you could do that that you could turn a needle around and in so doing it would pass through every intermediate direction. Is this in the two dimensional plane? This is in the two dimensional plane. Yeah. So we understand everything in two dimensions. So the next question is what happens in three dimensions. So suppose like the Hubble space telescope is tube in space and you want to observe every single star in the universe. So you want to rotate the telescope to reach every single direction. And here's unrealistic part. Suppose that space is at a premium, which it totally is not. Uh you want to occupy as little volume as possible in order to rotate your your needle around in order to see every single star in the sky. Um how small a volume do you need to do that? And so you can modify basic construction. And so if your telescope has zero thickness, then you can use as little volume as you need. That's a simple modification of the two dimensional construction. But the question is that if your telescope is not zero thickness but but just very very thin some thickness delta what is the minimum volume needed to be able to see every single direction as a function of delta. So as delta gets smaller as you need gets thinner the volume should go down but but how fast does it go down? Um and the conjecture was that it goes down very very slowly um like logarithmically um uh roughly speaking and that was proved after a lot of work. So this seems like a puzzle. Why is it interesting? So it turns out to be surprisingly connected to a lot of problems in partial differential equations, in number theory, in geometry, comics. For example, in in wave propagation, you splash some some water around um you create water waves and they they travel in various directions. Um but waves exhibit both both particle and wave type behavior. So you can have what's called a wave packet, which is like a a very localized wave that is localized in space and moving a certain direction in time. And so if you plot it in both space and time, it occupies a region which looks like a tube. And so what can happen is that you can have a wave which initially is very dispersed but it all comes it all focuses at a single point later in time. Like you can imagine dropping a pebble into a pond and ripples spread out. But then if you time reverse that that um that scenario and the equations of wave motion are time reversible. You can imagine ripples that are converging um to a single point and then a big splash occurs um maybe even a singularity.\n\nUm and so it's possible to do that. Uh and geometrically what's going on is that there's always s of light rays. Um so like if if if this wave represents light for example um you can imagine this wave as a superp position of photons um all traveling at the speed of light. They all travel on these light rays and they're all focusing at this one point. So you can have a very dispersed wave focus into a very concentrated wave at one point in space and time, but then it defocuses again and it separates. But potentially if the conjecture had a negative solution. So what that meant is that there's there's a very efficient way to pack um tubes pointing different directions into a very very narrow region of of of very narrow volume. Then you would also be able to create waves that start out some there'll be some arrangement of waves that start out very very dispersed but they would concentrate not just at a single point but um um there'll be a large um there'll be a lot of concentrations in space and time and uh um and you could create what's called a blowup where these waves their amplitude becomes so great that the laws of physics that they're governed by are no longer wave equations but something more complicated and nonlinear. Um and so in mathematical physics we care a lot about whether certain equations in in wave equations are stable or not whether they can create um these singularities.\nThere's a famous unsolved problem called the Navia Stokes regularity problem. So the Navia Stokes equations equations that govern the fluid flow for incompressible fluids like water. The question asks if you start with a smooth velocity field of water can it ever concentrate so much that like the velocity becomes infinite at some point that's called a singularity. We don't see that um in real life. You know, if you splash around water on the bathtub, it won't explode on you. Um or or have have water leaving at the speed of light, I think. But potentially, it is possible. Um and in fact, in recent years, the the consensus has has drifted towards the uh the belief that uh that in fact for certain very special initial configurations of of say water that singularities can form. But people have not yet been able to uh to actually establish this. The clay foundation has these seven millennium prize problems has a million dollar prize for solving one of these problems that this is one of them. Of these seven only one of them has been solved the point conjecture by Pelman. So the Ka conjecture is not directly directly related to the Navis Stokes problem but understanding it would help us understand some aspects of things like wave concentration which would indirectly probably help us understand the Navis problem better. Can you speak to the neighbors? So the existence and smoothness like you said millennial prize problem right you've made a lot of progress on this one in 2016 you published a paper finite time blow up for an averaged threedimensional navia stoke equation right so we're trying to figure out if this thing usually doesn't blow up right but can we say for sure it never blows up right yeah so yeah that is literally the the million- dollar question yeah so this is what distinguishes mathematicians from pretty much everybody else like it If something holds 99.99% of the time, um that's good enough for most, you know, uh for for most things, but mathematicians are one of the few people who really care about whether every like 100% really 100% of all um situations are covered by by um yeah, so most fluid most of the time um water that does not blow up. But could you design a very special initial state that does this? And maybe we should say that this is a this is a set of equations that govern in the field of fluid dynamics. Trying to understand how fluid behaves and it's actually turns out to be a really comp you know fluid is yeah extremely complicated thing to try to model. Yeah. So it has practical importance. So this clay price problem concerns what's called the incompressible navio stokes which governs things like water. There's something called the compressible navio stokes which governs things like air. And that's particularly important for weather prediction. Weather prediction it does a lot of computational fluid dynamics. A lot of it is actually just trying to solve the ny stokes equations as best they can. Um also gathering a lot of data so that they can get they can in initialize the equation. There's a lot of moving parts. So it's very important practically. Why is it difficult to prove general things about the set of equations like it not not blowing up? Short answer is Maxwell's demon. Um so exos demon is a concept in thermodynamics like if you have a box of two gases and oxygen and hydrogen uh and maybe you start with all the oxygen one side and nitrogen the other side but there's no barrier between them right then they will mix um and they should stay mixed right there there's no reason why they should unmix but in principle because of all the collisions between them there could be some sort of weird conspiracy that that um like maybe there's a microscopic demon called Maxwell's demon that will um every time a oxygen and nitrogen atom collide they will bounce off in such a way that the oxygen sort of drifts onto one side and then goes to the other and uh you could have an extremely improbable configuration emerge. Uh which we never see. Um and and we statistically it's extremely unlikely but mathematically it's possible that this can happen and we can't rule it out. Um and this is a situation that shows up a lot in mathematics. Um a basic example is the digits of pi 3.14159 and so forth. The digits look like they have no pattern and we believe they have no pattern. On the long term, you should see as many ones and twos and threes as fours and fives and sixes. There should be no preference in the digits of pi to favor let's say 7 over 8. Um, but maybe there's some demon in the digits of pi that that like every time you compute more digits, it sort of biases one digit to another. Um, and this is a conspiracy that should not happen. There's no reason it should happen, but um there's there's there's no way to prove it.\nuh with our current technology. Okay. So getting back to Nabia Stokes, a fluid has a certain amount of energy and because a fluid is in motion, the energy gets transported around and water is also viscous. So if the energy is spread out over many different locations, the natural viscosity of the fluid will just damp out the energy and will it will go to zero. Um and this is what happens um in um uh when we actually experiment with water like you splash around there. there's some turbulence and waves and so forth. But eventually it it settles down and and and the the lower the amplitude, the smaller the velocity, the the more calm it gets. Um but potentially there is some sort of a demon that keeps pushing the uh the energy of the fluid into a smaller and smaller scale and it will move faster and faster and at faster speeds the effective viscosity is relatively less. And so it could happen that that it it creates a some sort of um um what's called a self similar blowup scenario where you know um the energy of fluid starts off at some um large scale and then it all sort of um transfers it energy into a smaller um region of of of the fluid which then at a much faster rate um moves into um an even smaller region and so forth. Um and and each time it does this uh it takes maybe half as as long as as the previous one and then you you could you could actually uh converge to all the energy concentrating in one point in a finite amount of time. Um and that that's uh that scenario is called finite blow up.\nUm so in practice this doesn't happen. Um so water is what's called turbulent. Um so it is true that um if you have a big eddy of water it will tend to break up into smaller eddies but it won't transfer all the the energy from one big eddy into one smaller eddy. It will transfer into maybe three or four and then those must split up into maybe three or four small edies of their own and so the energy gets dispersed to the point where the viscosity can can then keep that thing under control. Um but if it can somehow um concentrate um all the energy keep it all together um and do it fast enough that the viscous effects don't have enough time to calm everything down then this blob can occur. So there were papers who had claimed that oh you just need to take into account conservation energy and just carefully use the viscosity and you can keep everything under control for not just Navia Stokes but for many many types of equations like this and so in the past there have been many attempts to try to obtain what's called global regularity for Navio Stokes which is the opposite of final time blow up that velocity say smooth and it all failed there was always some sign error or some subtle mistake and and it couldn't be salvaged. Um so what I was interested in doing was trying to explain why we were not able to disprove um planet time blow up. I couldn't do it for the actual equations of fluids which were too complicated. But if I could average the equations of motion of naval basically if if um if I could turn off certain types of of ways in which water interacts and only keep the ones that I want. Um, so in particular, um, if, um, if there's a fluid and it could transfer energy from a large Eddie into this small Eddie or this other small Eddie, I would turn off the energy channel that would transfer energy to this this one and and direct it only into um, this smaller Eddie while still preserving the law of conservation of energy. So you're trying to make it blow up. Yeah. Yeah. So I I I basically engineer um, a blow up by changing the laws of physics,\n\n\nWhich is one thing that mathematicians are allowed to do.\nWe can change the equation.\nHow does that help you get closer to the proof of something?\nRight?\nSo, it provides what's called an obstruction in Mathematics.\nUm, so, so what I did was that uh basically if I turned off the um certain parts of the equation, so which usually when you turn off certain interactions make it less nonlinear, it makes it more regular and less likely to blow up.\nBut I found that by turning off a very well-designed set of of of of interactions, I could force all the energy to blow in finite time.\nSo what that means is that if you wanted to prove um global regularity for Navier–Stokes um for the actual equation you had, you must use some feature of the true equation which which my artificial equation um does not satisfy.\nSo it it rules out certain um certain approaches.\nSo um the thing about Math is is it's not just about finding you know taking a technique that is going to work and applying it, but you you need to not take the techniques that don't work.\nUm and for the problems that are really hard, often there are dozens of ways that you might think might apply to solve the problem.\nBut uh it's only after a lot of experience that you realize there's no way that these methods are going to work.\nSo having these counter examples for nearby problems um kind of rules out um uh it saves you a lot of time because you you're not wasting um energy on on things that you now know cannot possibly ever work.\nHow deeply connected is it to that specific problem of fluid dynamics or just some more general intuition you build up about Mathematics?\nRight.\nYeah.\nSo the key phenomenon that uh my my technique exploits is what's called super criticality.\nSo in partial differential equations, often these equations are like a tug-of-war between different forces.\nSo in Navier–Stokes there's the dissipation um force coming from viscosity and it's very well understood.\nIt's linear.\nIt calms things down.\nIf if viscosity was all there was, then then nothing bad would ever happen.\nUm but there's also transport um that that energy from in one location of space can get transported because the fluid is in motion to to other locations.\nUm and that's a nonlinear effect and that causes all the all the problems.\nUm so there are these two competing terms in the Davis equation, the dissipation term and the transport term.\nIf the dissipation term dominates, if it's if it's large, then basically you get regularity.\nAnd if um if the transport term dominates, then uh then we don't know what's going on.\nIt's a very nonlinear situation.\nIt's unpredictable.\nIt's turbulent.\nSo sometimes these forces are in balance at small scales, but not in balance at large scales or or vice versa.\nUm so Navier–Stokes is what's called supercritical.\nSo at at smaller and smaller scales, the transport terms are much stronger than the viscosity terms.\nSo the viscosity are the things that calm things down.\nUm and so this is um um this is why the problem is hard in two dimensions.\nSo the Soviet mathematician Ladish skaya, she in the 60s shows in two dimensions there is no blow up and in two dimensions the nav equations is what's called critical, the effect of transport and the effect of viscosity about the same strength even at very very small scales and we have a lot of technology to handle critical and also subcritical equations and proof um regularity, but for supercritical equations it was not clear what was going on and I did a lot of work and then there's been a lot of follow-up showing that for many other types of supercritical equations you create all kinds of blow up examples.\nOnce the nonlinear effects dominate the linear effects at small scales, you can have all kinds of bad things happen.\nSo this is sort of one of the main insights of this this line of work is that supercriticality versus criticality and subcriticality.\nThis this makes a big difference.\nI mean that's a key qualitative feature that distinguishes some equations for being sort of nice and predictable and you know like like planetary motion and I mean there are certain equations that that you can predict for millions of years and or thousands at least.\nAgain, it's not really a problem, but but there's a reason why we can't predict the weather past 2 weeks into the future because it's a supercritical equation.\nLots of really strange things are going on at very fine scales.\nSo, whenever there is some huge source of nonlinearity, yeah, that can create a huge problem for predicting what's going to happen.\nYeah.\nAnd if the nonlinearity is somehow more and more featured and interesting at at small scales.\nUm I mean there's there's many equations that are nonlinear but um in in many equations you can approximate things by the bulk.\nUm so for example planetary motion, you know if you want to understand the orbit of the moon or Mars or something, you don't really need the micro structure of like the seismology of the moon or or like exactly how the mass is distributed.\nUm you just basically you can almost approximate these planets by point masses and just the aggregate behavior is important um but if you want to model a fluid um like like the weather, you can't just say in Los Angeles the temperature is this, the wind speed is this.\nFor supercritical equations, the finance confirmation is is really important.\nIf we can just linger on the Navier–Stokes uh equations a little bit, so you've suggested maybe you can describe it that one of the ways to uh solve it or to negatively resolve it would be to sort of to construct a liquid computer, right?\nAnd then show that the halting problem from computation theory has consequences for fluid dynamics.\nSo uh show it in that way.\nCan you describe this this?\nYeah.\nSo this came out of of this work of constructing this this this average equation that that blew up.\nUm so one um as as part of how I had to do this.\nSo there this naive way to do it.\nYou you just keep pushing um um every time you you get energy at one scale, you you push it immediately to the next scale as as fast as possible.\nThis is sort of the naive way to to to to force blow up.\nUm it turns out in five and high dimensions this works.\nUm but in three dimensions there was this funny phenomenon that I discovered that if you if you keep if if you change the laws of Physics, you just always keep trying to push um the energy into smaller smaller scales.\nUm what happens is that the energy starts getting spread out into multi many scales at once.\nUm so that you you have energy at one scale, you're pushing it into the next scale and then um as soon as it enters that scale, you also push it to the next scale, but there's still some energy left over from the previous scale.\nUm you're trying to do everything at once.\nUm and this spreads out the energy too much.\nUm and then it turns out that that um it makes it vulnerable for viscosity to come in and actually just damp out everything.\nSo um so it turns out this this direct push doesn't doesn't actually work.\nThere was a separate paper by some other authors that actually showed this um in three dimensions.\nUm so what I needed was to program a delay.\nUm so kind of like air locks.\nSo um I needed an equation which would start with a fluid doing something at one scale.\nIt would push this energy into the next scale, but it would stay there until all the energy from the from the larger scale got transferred and only after you pushed all the energy in, then you sort of open the next gate and and then you you push that in as well.\nSo um by doing that, it kind of the energy inches forward scale by scale in such a way that it's always um localized at one scale at a time.\nUm and then it can resist the effects of viscosity because it's not dispersed.\nUm so in order to make that happen, um yeah, I had to construct a rather complicated nonlinearity.\nUm and it was basically like um you know like was constructed like electronic circuit.\nSo I I actually thank my wife for this because she was trained as a electrical engineer.\nUm and um you know he talked about um uh you know he had to design circuits and so forth.\nAnd you know if if you want a circuit that does a certain thing like maybe have a light that that flashes on and then turns off and then on and then off.\nYou can build it from from more primitive components, you know, capacitors and resistors and so forth and you have to build a diagram and you um and these diagrams you can you can sort of follow your eyeballs and say oh yeah the the current will build up here and then it will stop and then it will do that.\nSo I knew how to build the analog of basic electronic components, you know, like resistors and capacitors and so forth.\nAnd and I would I would stack them together um in in such a way that that I would create something that would open one gate and then there'll be a clock that would and then once the clock hits a certain threshold, it would close it, kind of a rude Goldberg type machine but described mathematically and this ended up working.\nSo what I realized is that if you could pull the same thing off for the actual equations.\nSo if the equations of water support a computation, so um like if you can imagine kind of a steampunk but really water punk uh type of thing where um you know so modern computers are electronic, you know they they they're powered by by electrons passing through very tiny wires and interacting with other electrons and so forth.\nBut instead of electrons, you can imagine these pulses of of water moving at certain velocity and maybe it's they're two different configurations corresponding to a bit being up or down.\nProbably if you had two of these moving bodies of water collide, it would come out with some new configuration which is which would be something like an AND gate or OR gate.\nYou know that if the the the output would depend in a very predictable way on on the inputs and like you could chain these together and maybe create a Turing machine and and then you could you have computers which are made completely out of water um and if you have computers then maybe you can do robotics so I you know hydraulics and so forth um and so you could create some machine which is basically a fluid analog what's called a von Neumann machine.\nSo von Neumann proposed if you want to colonize Mars, the sheer cost of transporting people machines to Mars is just ridiculous.\nBut if you could transport one machine to Mars and this machine had the ability to mine the planet, create some more materials to smelt them and build more copies of the same machine.\nUm, then you could colonize a whole planet um over time.\nUm, so uh if you could build a fluid machine, which uh yeah, so it's it's it's a robot.\nOkay.\nAnd what it would do, it its purpose in life, it's programmed so that it would create a smaller version of itself in some sort of cold state.\nIt wouldn't start just yet.\nOnce it's ready, the big robot configuration water would transfer all his energy into the smaller configuration and then power down.\nOkay?\nAnd then like I clean itself up.\nAnd then what's left is this newest state which would then turn on and do the same thing but smaller and faster.\nAnd then the equation has a certain scaling symmetry.\nOnce you do that, it can just keep iterating.\nSo this in principle would create a blow up uh for the actual Navier–Stokes and this is what I managed to accomplish for this average Navier–Stokes.\nSo it provided the sort of road map to solve the problem.\nNow this is uh a pipe dream because uh there are so many things that are missing for this to actually be a reality.\nUm so um I I I can't create these basic logic gates.\nUm I I don't I don't have these in these special configurations of water.\nUm, I mean there's candidates there things called vortex rings that might possibly work but um um but also you know analog computing is really nasty um compared to digital computing.\nI mean because there's always errors um you you have to you have to do a lot of error correction along the way.\nI don't know how to completely power down the big machine so that it doesn't interfere with the the running of the smaller machine but everything in principle can happen like it doesn't contradict any of the laws of Physics.\nUm so it's sort of evidence that this thing is possible.\nUm there are other groups who are now pursuing ways to make navis blow up which are nowhere near as ridiculously complicated as this.\nUm um they they actually are pursuing much closer to the the direct self similar model which can it doesn't quite work as is, but there could be some simpler scheme than what I just described to make this work.\nThere is a real leap of genius here to go from Navier–Stokes to this Turing machine.\nSo it goes from what the self similar blob scenario that you're trying to get the smaller and smaller blob to now having a liquid toying machine gets smaller and smaller and smaller and somehow seeing how that could be used to say something about a blowup.\nI mean that's a big leap.\nSo there's precedent.\nI mean um so the the thing about Mathematics is that it's really good at um spotting connections between what you think of what you might think of as completely different um problems.\nUm but if if the mathematical form is the same, you you can you you can draw a connection um so um there's a lot of work previously on what called cellular automator, um the most famous of which is Conway's Game of Life.\nThere's this infinite discrete grid and at any given time the grid is either occupied by a cell or it's empty and there's a very simple rule that uh tells you how these cells evolve.\nSo sometimes cells live and sometimes they die.\nUm and this um you know um when I was a a student it was a very popular screen saver to actually just have these these animations going and and they look very chaotic.\nIn fact they look a little bit like turbulent float sometimes.\nBut at some point people discovered more and more interesting structures within this Game of Life.\nUm so for example they discovered this thing called a glider.\nSo a glider is a very tiny configuration of like four or five cells which evolves and it just moves at a certain direction and that's like this this vortex rings, this um yeah so this is an analogy, the Game of Life is kind of like a discrete equation and and um the flu navis is a continuous equation but mathematically they have some similar features um and um so over time people discovered more and more interesting things you could build within the Game of Life.\nThe game life is a very simple system.\nIt only has like three or four rules um to to do it, but but you can design all kinds of interesting configurations inside it.\nUm there's something called a glider gun that does nothing to spit out gliders one at a one one at a time.\nUm and then after a lot of effort, people managed to to create um and gates and or gates for gliders.\nLike there's this massive ridiculous structure which if you if a if you have a stream of gliders um coming in here and a stream of gliders coming in here, then you may produce a stream of gliders coming out.\nIf so maybe if both of\n\n\nof the um streams um\nhave gliders then there'll be an output\nstream, but if only one of them does, then\nnothing comes out. Mhm. So they could\nbuild something like that. And once you\ncould build and um these basic gates,\nthen just from software engineering, you\ncan build almost anything. Um, you can\nbuild a touring machine. I mean, it's\nlike an enormous steampunk type things.\nThey look ridiculous. But then people\nalso generated self-replicating objects\nin the game of life. A massive machine, a\nvon Neumann machine, which over a huge period of\ntime, and it always look like glider guns\ninside doing these very steampunk\ncalculations, it would create another\nversion of itself which could replicate.\nIt's so incredible. A lot of this was\nlike community crowdsourced by like\namateur mathematicians actually. Um, so I\nknew about that, that work, and so\nthat is part of what inspired me to\npropose the same thing with Navier\nStokes. Um, which is a much, as I said,\nanalog is much worse than digital, like\nit's going to be, um, you can't just\ndirectly take the constructions in the\ngame of life and plunk them in. But\nagain, it just it shows it's possible.\nYou know, there's a kind of emergence\nthat happens with these cellular automata.\nLocal rules.\nMaybe it's similar to fluids. I don't\nknow. But local rules operating at scale\ncan create these incredibly complex\ndynamic structures. Do you think any of\nthat is amendable to mathematical\nanalysis?\nDo we have the tools to say something\nprofound about that? The thing is, you\ncan get this emerg in very complicated\nstructures, but only with very carefully\nprepared initial conditions. Yeah. So, so\nthese these these glider guns and and\ngates and and so forth machines, if you\njust plunk down randomly some cells and\nyou and you will not see any of these.\nUm, and that's the analogous situation\nwith Navier Stokes, again, you know, that\nthat with with typical initial\nconditions, you you will not have any of\nthis weird computation going on. Um, but\nbasically through engineering, you know,\nby by by specially designing things in a\nvery special way, you can make clever\nconstructions. I wonder if it's possible\nto prove the sort of the negative of\nlike, basically prove that only through\nengineering can you ever create\nsomething interesting. This this is a\nrecurring challenge in mathematics that\num, I call it the dichotomy between\nstructure and randomness. That most\nobjects that you can generate in\nmathematics are random. They look like\nrand, like the digits of pi. Well, we\nbelieve is a good example. Um, but\nthere's a very small number of things\nthat have patterns. Um, but um, now you\ncan prove something has a pattern by\njust constructing, you know, like if\nsomething has a simple pattern and you\nhave a proof that it it does something\nlike repeat itself every so often. You\ncan do that. But um, and you you can\nprove that that, for example, you can you\ncan prove that most sequences of of\ndigits have no pattern. Um, so like if\nyou just pick digits randomly, there's\nsomething called low large numbers. It\ntells you you're going to get as many\nones as as twos in the long run. Um, but\num, we have a lot fewer tools to to to, if\nI give you a specific pattern like the\ndigits of pi, how can I show that this\ndoesn't have some weird pattern to it.\nSome other work that I spend a lot of\ntime on is to prove what are called\nstructure theorems or inverse theorems\nthat give tests for when something is is\nvery structured. So some functions are\nwhat's called additive, like if you have\na function that maps natural numbers\nwith natural numbers. So maybe um, you\nknow, two maps to four, three maps to six\nand so forth. um, some functions what's\ncalled additive, which means that if you\nadd if you add two inputs together, the\noutput gets gets added as well. uh, for\nexample, multiplying by a constant, if you\nmultiply a number by 10, um, if you if you\nmultiply a plus b by 10, that's the same\nas multiplying a by 10 and b by 10 and\nthen adding them together. So some um,\nfunctions are additive, some are kind of\nadditive, but not completely additive. um,\nso for example, if I take a number n, I\nmultiply by the square root of two and I\ntake the integer part of that. So 10 by\nsquare of two is like 14 point\nsomething. So 10 up to 14. Um, 20 up to\n28. Um, so in that case, additively is\ntrue then. So 10 + 10 is 20 and 14 + 14\nis 28. But because of this rounding,\nsometimes there's roundoff errors and\nand sometimes when you um, add a plus b,\nthis function doesn't quite give you the\nsum of of the two individual outputs, but\nthe sum plus minus one. Um, so it's\nalmost additive, but not quite additive.\nUm, so there's a lot of useful results in\nmathematics and I've worked a lot on\ndeveloping things like this to the\neffect that if if a function exhibits\nsome structure like this, then um, it's\nbasically there's a reason for why it's\ntrue, and the reason is because there's\nthere's some other nearby function which\nis actually um, completely structured\nwhich is explaining this sort of partial\npattern that you have. Um, and so if you\nhave these so inverse theorems, it um, it\ncreates this sort of dichotomy that they\neither the objects that you study are\neither have no structure at all or they\nare somehow related to something that is\nstructured. Um, and in either way, in\neither um, in either case, you can make\nprogress. Um, a good example of this is\nthat there's this old theorem in\nmathematics called sim theorem, proven in\nthe 1970s. It concerns trying to find a\ncertain type of pattern in a set of\nnumbers. The patterns that have make\nprogression things like 3, five, and seven\nor or or 10, 15, and 20 andreli\nproved that um, any set of of numbers\nthat are sufficiently big um, what's\ncalled positive density has um,\narithmetic progressions in it of of any\nlength you wish. um, so for example, um, the\nodd numbers have a set of density 1/2, um,\nand they contain arithmetic progressions\nof any length. um, so in that case, it's\nobvious because the the odd numbers are\nreally, really structured. I can just take\n11, 13, 15, 17. I just I can I can easily\nfind arithmetic progressions in in in\nthat set. Um, but um, zerminism also\napplies to random sets. If I take the\nset of odd numbers and I flip a coin, um,\nand for each number and I only keep the\nnumbers which for which I got a heads,\nokay, so I just flip coins. I just\nrandomly take out half the numbers, I\nkeep one half. So that's a set that has\nno no patterns at all. But just from\nrandom fluctuations, you will still get\na lot of um, um, of arithmetic\nprogressions in that set. Can you prove\nthat\nthere's arithmetic progressions of\narbitrary length within a random? Yes.\nUm, have you heard of the infinite monkey\ntheorem? Usually mathematicians give\nboring names to theorists, but\noccasionally they they give colorful\nnames. Yes. The popular version of the\ninfinite monkey theorem is that if you\nhave an infinite number of monkeys in a\nroom with each with a typewriter, they\ntype out uh text randomly, almost surely\none of them is going to generate the\nentire screw of Hamlet or any other\nfinite string of text. Uh, it will just\ntake some time, quite a lot of time\nactually, but if you have an infinite\nnumber, then it happens. Um, so um,\nbasically the the, if you take an\ninfinite string of of digits or whatever,\num, eventually any finite pattern you\nwish will emerge. Um, it may take a long\ntime, but it will eventually happen. Um,\nin particular, arithmetic progressions of\nany length will eventually happen. Okay.\nBut you need that, but you need an\nextremely long random sequence for this\nto happen. I suppose that's intuitive.\nIt's just infinity. Yeah. Infinity\nabsorbs a lot of sins. Yeah. How are we\nhumans supposed to deal with infinity?\nWell, you can think of infinity as as as\njust an abstraction of um, a finite\nnumber for which you you do not have a\nbound for. Um, that uh, you know, I mean, so\nnothing in real life is truly infinite.\nUm, but you know, you can um, you know, you\ncan ask yourself questions like, you know,\nwhat if I had as much money as I wanted,\nyou know, or what if I could go as fast\nas I wanted, and a way in which\nmathematicians formalize that is\nmathematics has found a formalism to\nidealize instead of something being\nextremely large or extremely small to\nactually be exactly infinite or zero. Um,\nand often the the mathematics becomes a\nlot cleaner when you do that. I mean, in\nphysics, we we joke about uh, assuming\nspherical cows. um, you know, like real\nworld problems have got all kinds of\nreal world effects, but you can idealize,\nsend certain things to infinity, send\ncertain things to zero, um, and um, and the\nmathematics becomes a lot simpler to\nwork with there. I wonder how often\nusing infinity\nuh, forces us to deviate from um, the\nphysics of reality. Yeah. So there's a\nlot of pitfalls. Um, so you know, we we\nspend a lot of time in undergraduate\nmath classes teaching analysis. Um, and\nanalysis is often about how to take\nlimits and and and and whether you you\nknow, so for example, a plus b is always b\nplus a. Um, so when you have a finite\nnumber of terms, you add them, you can\nswap them and there there's no problem.\nBut when you have infinite number of\nterms, there these sort of shell games\nyou can play where you can have a series\nwhich converges to one value, but you\nrearrange it and it suddenly converges\nto another value. And so you can make\nmistakes. You have to know what you're\ndoing when you allow infinity. Um, you\nhave to introduce these epsilons and\ndeltas and and this there's a certain\ntype of way of reasoning that helps you\navoid mistakes. Um,\nin more recent years, um, people have\nstarted taking results that are true in\ninfinite limits and what's called\nfinetizing them. Um, so you know that\nsomething's true eventually, but um, you\ndon't know when. Now give me a rate.\nOkay. Okay, so it's such a, if I have\ndon't have an infinite number of monkeys,\nbut but a large finite number of\nmonkeys, how long do I have to wait for\nH to come out? Um, and that's a more\nquantitative question. Um, and this is\nsomething that you can you can um, attack\nby purely finite methods and you can use\nyour finite intuition. Um, and in this\ncase, it turns out to be exponential in\nthe length of the text that you're\nyou're trying to generate. Um, so um, and\nso this is why you never see the monkeys\ncreate Hamilton. You can maybe see them\ncreate a four-letter word, but nothing\nthat big. And so I personally find once\nyou finitize an infinite statement, it's\nit does become much more intuitive and\nit's no longer so so weird. Um, so even\nif you're working with infinity, it's\ngood to finitize so that you can have\nsome intuition. Yeah. The downside is\nthat the finite groups are just much\nmuch messier and and uh, yeah. So, so the\ninfinite ones are found first, usually\nlike decades earlier, and then later on\npeople finize them. So since we\nmentioned a lot of math and a lot of\nphysics, uh, what is the difference\nbetween mathematics and physics as\ndisciplines, as ways of understanding of\nseeing the world? Maybe we can throw in\nengineering in there. You mentioned your\nwife is an engineer, give it new\nperspective on circuits, right? So this\ndifferent way of looking at the world,\ngiven that you've done mathematical\nphysics, so you you've you've worn all\nthe hats, right? So I think science in\ngeneral is interaction between three\nthings. Um, there's the real world, um,\nthere's is what we observe of the\nreward, our observations, and then our\nmental models as to how we think the\nworld works. Um, so um, we can't directly\naccess reality. Okay. Uh, all we have are\nthe observations, which are incomplete\nand they they have errors. Um, and um,\nthere are many, many cases where we would\num, uh, we want to know, for example, what\nis the weather like tomorrow, and we\ndon't yet have the observation, we'd like\nto a prediction. Um, and then we have\nthese simplified models, sometimes making\nunrealistic assumptions, you know,\nspherical cow type things. Those are the\nmathematical models. Mathematics is\nconcerned with the models. Science\ncollects the observations and it\nproposes the models that might explain\nthese observations. What mathematics\ndoes, we we stay within the model and we\nask what are the consequences of that\nmodel? What observations would what\npredictions would the model make of the\nof future observations, um, or past\nobservations, does it fit observed data?\num, so there's definitely a symbiosis. um,\nit's ma, I guess mathematics is is\nunusual among other disciplines is that\nwe start from hypothesis, like the axims\nof a model and ask what conclusions come\nup from that that model. um, in almost any\nother discipline, uh, you start with the\nconclusions, you know, I want to do this, I\nwant to build a bridge, you know, I I\nwant to to make money. I want to do\nthis. Okay. And then you you you find\nthe path to get there. Um,\na lot there there's a lot less sort of\nspeculation about suppose I did this,\nwhat would happen? Um, you know, planning\nand and and modeling, um, uh, speculative\nfiction maybe is one other place. Uh, but\nuh, that's about it actually. Most of\nthings we do in life is conclusions\ndriven, including physics and science.\nYou, I mean, they want to know, you know,\nwhere is this asteroid going to go? What\nwas what what is the weather going to be\ntomorrow? Um, but um, Bathe also has this\nother direction of of going from the uh,\nthe axioms. What do you think there is\nthis tension in physics between theory\nand experiment? Mhm. What do you think\nis the more powerful way of discovering\ntruly novel ideas about reality? Well,\nyou need both top down and bottom up. Um,\nyeah, it's it's a real interaction\nbetween all these things. So over time,\nthe observations and the theory and the\nmodeling should both get closer to\nreality. But initially, and it is, I mean,\nthis is um, this is always the case. You\nknow, they're always far apart to begin\nwith. Um, but you need one to figure out\nwhere to push the other, you know. So, um,\nif your model is predicting anomalies, um,\nthat are not picked up by experiment,\nthat tells experimenters where to look,\nyou know, um, to to to find more data\nto refine the models. Um, yeah, so it it\nit goes it goes back and forth. Um,\nwithin mathematics itself, there's\nthere's also a theory and experimental\ncomponent. It's just that until very\nrecently, theory has dominated almost\ncompletely, like 99% of mathematics is\ntheoretical mathematics, and there's a\nvery tiny amount of experimental\nmathematics. Um, I mean, people do do it,\nyou know, like if they want to study\nprime numbers or whatever, they can just\ngenerate large data sets and with a so\nonce we had computers, um, we be to do it\na little bit. Um, although even before\nwell, like Gaus, for example, he discovered\nhe conjectured the most basic theorem in\nin number theory to call the prime\nnumber theorem, which predicts how many\nprimes that up to a million, up to a\ntrillion. It's not an obvious question\nand basically what he did was that he\ncomputed, I mean, mostly um, by himself, but\nalso hired human computers, um, people who\nwhose professional job it was to do\narithmetic, um, to compute the first\n100,000 tribes or something and made\ntables and made a prediction. um, that was\nan early example of experimental\nmathematics\num, but until very recently, it was not, um,\nyeah, I mean, theoretical mathematics was\njust much more successful, I mean, because\ndoing complicated mathematical\n\n\nComputations is, uh, was just not not feasible until very recently. Uh, and even nowadays, you know, even though we have powerful computers, only some mathematical things can be, um, explored numerically. There's something called the combinatorial explosion. If you want us to study, for example, Zodius, you want to study all possible subsets of the numbers 1 to 1,000. There's only 1,000 numbers. How bad could it be? It turns out the number of different subsets of 1 to 1,000 is 2 to the power of 1,000, which is way bigger than any computer can currently, can, in fact, anybody ever will ever, um, enumerate. Um, so you have, you have to be, um, there are certain math problems that very quickly become just intractable to attack by direct brute force computation. Uh, chess is another, um, famous example. The number of chess positions, uh, we can't get a computer to fully explore.\n\nBut now we have AI, um, um, we have tools to explore this space, not with 100% guarantees of success, but with experiment, you know, so like, um, we can empirically solve chess now, for example. We have, we have very, very good AIs that, that can, you know, they don't explore every single position in the game tree, but they have found some very good approximation. Um, and people are using actually these chess engines to make, uh, to do experimental chess, um, that they're revisiting old chess theories about, oh, you know, when you do this type of opening, you know, this is a good, this is a good type of move, this is not, and they can use these chess engines to actually refine, in some cases, overturn, um, um, conventional wisdom about chess. And I do hope that, uh, that Mathematics will, will have a larger experimental component in the future, perhaps powered by AI. We'll, of course, talk about that. But in the case of chess, and there's a similar thing in Mathematics that I don't believe it's providing a kind of formal explanation of the different positions. It's just saying which position is better or not that you can intuit it as a human being, and then from that, we humans can construct a theory of the matter.\n\nYou've mentioned the Plato's cave allegory. Mhm. So in case people don't know, it's where people are observing shadows of reality, not reality itself, and they believe what they're observing to be reality. Is that in some sense what mathematicians and maybe all humans are doing is, um, looking at shadows of reality? Is it possible for us to truly access reality? Well, there are these three ontological things: there's actual reality, there's our observations, and our models. Um, and technically, they are distinct, and I think they will always be distinct. Um, but they can get closer, um, over time. Um, you know, so, um, and the process of getting closer often means that you, you have to discard your initial intuitions. Um, so, um, like astronomy provides great examples, you know, like, you know, like your initial model of the world is flat because it looks flat, you know, and, um, and it's, and it's big, you know, and the rest of the universe, the skies is not, you know, like the sun, for example, looks really tiny, um, and so you start off with a model which is actually really far from reality, um, but it fits kind of the observations that you have, um, you know, so, you know, so things look good, you know, but, but over time, as you make more and more observations, bring it closer to reality. Okay. Um, the model gets dragged along with it, and so over time, we had to realize that the earth was round, that it spins. It goes around the solar system. Solar system goes around the galaxy, and so on and so forth. And the guys universe is expanding, the expansion itself expanding, accelerating, and in fact, very recently, in this year. So this, uh, even the acceleration of the universe itself is this evidence that this non-constant, and, uh, the explanation behind why that is, it's catching up. Um, it's catching up. I mean, it's still, you know, the dark matter or dark energy, this, this kind of thing. We have, we have a model that sort of explains that, fits the data really well. It just has a few parameters that, um, you have to specify. Um, but so, you know, people say that's fudge factors, you know, with enough fudge factors, you can explain anything. Um, but, uh, the mathematical point of the model is that, um, you want to have fewer parameters in your model than data points in your observational set. So if you have a model with 10 parameters that explains 10, 10 observations, that is a completely useless model. It's what's called overfitted. But like, if you have a model with, you know, two parameters and it explains a trillion observations, which is basically, uh, so yeah, the, the, the dark matter model, I think, has like 14 parameters, and it explains petabytes of data, um, that, that, that the astronomers have. Um, you can think of a theory like one way to think about, um, physical math theory theory is it's a compression of the universe, um, and data compression. So, you know, you have these petabytes of observations, you'd like to compress it to a model which you can describe in five pages and specify a certain number of parameters, and if it can fit to reasonable accuracy, you know, almost all of your observations. I mean, the more compression that you make, the better your theory. In fact, one of the great surprises of our universe and of everything in it is that it's compressible at all. It's the unreasonable effectiveness of Mathematics. Yeah, Einstein had a quote like that. The, the most incomprehensible thing about the universe is that it is comprehensible, right? And not just comprehensible. You can do an equation like E=MC². There is actually a some mathematical possible explanation for that. Um, so there's this phenomenon in Mathematics called universality. So many complex systems at the macro scale are coming out of lots of tiny interactions at the macro scale, and normally, because of the common form of explosion, you would think that, uh, the macro scale equations must be like infinitely exponentially more complicated than the, the microscale ones, and they are, if you want to solve them completely exactly, like if you want to model, um, all the atoms in a box of air, that's like Avogadro's number is humongous, right? There's a huge number of particles if you actually have to track each one, it'll be ridiculous. This, but certain laws emerge at the microscopic scale that almost don't depend on what's going on at the micros scale or only depend on a very small number of parameters. So if you want to model a gas, um, of, you know, quintillion particles in a box, you just need to know its temperature and pressure and volume and a few parameters, like five or six, and it models almost everything you need to know about these 10 to the 23rd or whatever particles. Um, so we, we have, um, we, we don't understand universality anywhere near as we would like mathematically, but there are much simpler toy models where we do, um, have a good understanding of why universality occurs. Um, um, most basic one is the central limit theorem that explains why the bell curve shows up everywhere in nature, that so many things are distributed by what's called a Gaussian distribution, famous bell curve. There's now even a meme with this curve, and even the meme applies broadly universality to the meme. Yeah. Yes, you can go meta if you like. But there are many, many processes, for example, you can take lots and lots of independent, um, random variables and average them together, um, uh, in various ways. You take a simple average or more complicated average, and we can prove in various cases that these bell curves, these Gaussians emerge, and it is a satisfying, satisfying explanation. Um, sometimes they don't. Um, so, so if you have many different inputs and they're all correlated in some systemic way, then you can get something very far from a bow curve show up. Uh, and this is also important to know when this system fails. So universality is not a 100% reliable thing to rely on, that, um, um, the global financial crisis was a famous example of this. Uh, people thought that, uh, um, mortgage defaults, um, had this sort of, um, Gaussian type behavior, that, that if you, if you ask if a population of, of, of, uh, you know, 100,000 Americans with mortgages, ask what proportion of them would default on the mortgages. Um, if everything was decorated, it would be an asset bell curve, and, and like, you can, you can manage risk with options and derivatives and so forth, and, um, and it, there's a very beautiful theory, um, but if there are systemic shocks in the economy, uh, that can push everybody to default at the same time, that's very non-Gaussian behavior, um, and, uh, this wasn't fully accounted for in 2008.\n\nNow I think there's some more awareness that this is systemic risk is actually a much bigger issue, and, uh, just because the model is pretty, uh, and nice, uh, it may not match reality. Right. So, so the Mathematics of working out what models do is really important. Um, but, um, also the science of validating when the models fit reality and when they don't. Um, I mean, that you need both. Um, and but Mathematics can help because it, it can, for example, these central limit theorems, it tells you that if you have certain aums, like, like non-correlation, that if all the inputs were not correlated to each other, um, then you have this kind of behavior, things are fine. It, it tells you where to look for weaknesses in the model. So if you have a mathematical understanding of central limit theorem, and someone proposes use these Gaussian copy or whatever to model, um, default risk, um, if you're mathematically, um, trained, you would say, okay, but what if this systemic correlation between all your inputs, and so then, then you can ask the economists, you know, how, how, how much of a risk is that, um, and then you can, you can, you can go look for that. So there's always this, this, this synergy between science and Mathematics. A little bit on the topic of universality. Mhm.\nYou're known and celebrated for working across an incredible breadth of Mathematics, reminiscent of Hilbert a century ago. In fact, the great Fields Medal winning mathematician, Tim Gowers, has said that you are the closest thing we get to Hilbert.\nHe's a colleague of yours. Oh yeah. Good friend. But anyway, so you are known for this ability to go both deep and broad in Mathematics. So you're the perfect person to ask, do you think there are threads that connect all the disparate areas of Mathematics? Is there a kind of deep underlying structure, uh, to all of Mathematics? There's certainly a lot of connecting threads. Um, and a lot of the progress of Mathematics has can be represented by taking, by stories of two fields of Mathematics that were previously not connected and finding connections. Um, an ancient example is, um, geometry and number theory, you know. So, so in the times of the ancient Greeks, these were considered different subjects. Um, I mean, mathematicians worked on both. You know, you could work both on geometry, most famously, but also on numbers. Um, but they were not really considered related. Um, I mean, a little bit like, you know, you could say that that this length was five times this length because you could take five copies of this length and so forth. But it wasn't until Descartes who really realized that, who developed analytic geometry, that you can, you can parameterize the plane, a geometric object, by, um, by two real numbers. Every point can be, and so geometric problems can be turned into problems about numbers. Um, and the, the today, this feels almost trivial, like, like there's, there's, there's no content to this, like, of course, uh, you, you know, um, a plane is x and y, and because that's what we teach, and it's internalized. Um, but it was an important development that these, these two fields were unified. Um, and this process has just gone on throughout Mathematics over and over again. Algebra and geometry were separated, and now we have a student algebraic geometry that connects them, and over and over again, and that's certainly the type of Mathematics that, that I enjoy the most. So I think there's sort of different styles to being a mathematician. I think hedgehogs and fox, a fox knows many things a little bit, but a hedgehog knows one thing very, very well. Um, and in Mathematics, there's definitely both hedgehogs and foxes. Um, and then there's people who are kind of, uh, who can play both roles. Um, and I think like ideal collaboration between mathematicians involves a very, you need some diversity, like, um, a fox working with many hedgehogs or or vice versa. So yeah, but I identify mostly as a fox, certainly. I, I like, uh, arbitrage, somehow, you like, like, um, learning how one field works, learning the tricks of that field, and then going to another field which people don't think is related, but I can, I can adapt the tricks. So see the connections between the fields. Yeah. So there are other mathematicians who are far deeper than I am, like, who really, they're really hedgehogs. They, they know everything about one field, and they're much faster and, and, and more effective in that field. But I can, I can give them these extra tools. I mean, you said that you can be both the hedgehog and and the fox, depending on the context, depending on the collaboration. So what can you, if it's at all possible, speak to the difference between those two ways of thinking about a problem? Say you're encountering a new problem, you know, searching for the connections versus like very singular focus. I'm much more comfortable with, with the, uh, the, uh, the fox paradigm. Yeah. So, um, yeah, I, I like looking for analogies, narratives. Um, I, I spend a lot of time, if there's a result I see in one field, and I like the result, it's a cool result, but I don't like the proof, like it uses types of Mathematics that I'm not super familiar with. Um, I often try to reprove it myself using the tools that I favor. Um, often my proof is worse. Um, but, um, by the exercise of doing so, um, I can say, oh, now I can see what the other proof was trying to do. Um, and from that, I can get some understanding of the tools that are used in that field. So it's very exploratory, very doing crazy things in crazy fields, and like reinventing the wheel a lot. Yeah. Whereas the hedgehog style is, uh, I think much more scholarly, you know, you, you, you're very knowledge-based. You, you, you stay up to speed on like all the developments in this field. You, you know all the history. Um, you have a very good understanding of, of exactly the strengths and weaknesses of, of each particular, uh, technique. Um, yeah, uh, I think you, you rely a lot more on sort of calculation than sort of trying to find narratives. Um, so yeah, I mean, I can do that too, but, uh, there are other people who are extremely good at that. Let's step back and, uh, uh, maybe look at the, the a bit of a romanticized version of Mathematics. Mhm. So, uh, I think you've said that early on in your life, uh, math was more like a puzzle-solving activity when you were, uh, young. When did you first encounter a problem or proof where you realize math can have a kind of elegance and beauty to it?\nThat's a good question. Um, when I came to graduate school, uh, in Princeton, um,\n\n\nSo John Conway was there at the time.\nHe passed away a few years ago.\nBut uh, I remember one of the very first research talks I went to was a talk by Conway on what he called extreme proof.\nSo Conway had just had this this amazing way of thinking about all kinds of things in a way that you would normally think of.\nSo um, he thought of proofs themselves as occupying some sort of space, you know.\nSo, so um, if you want to prove something, let's say that there's infinitely many primes, okay, you avoid different proofs, but you could you could rank them in different axes like some proofs are elegant, some are long, some proofs are are um elementary and so forth.\nUm, and so there's this cloud.\nSo the space of all proofs itself has some sort of shape.\nUm, and so he was interested in in extreme points of this shape like out of all all these proofs what is one that is the shortest at the the extent of every everything else or or the most elementary or or whatever.\nUm, and so he gave some examples of well-known theorems and then he would give what he thought was was the extreme proof um in these different aspects.\nUm, and I I just found that really eye opening um that that um you know it's not just getting a proof for a result was interesting but but once you have that proof you know trying to to uh to optimize it in various ways.\nUm, that that proof um uh proofing itself had some craftsmanship to it.\nUm, it it certainly informed my writing style.\nUm, but you know like when you do your your math assignments and as undergraduate your homework and so forth, you you're sort of encouraged to just write down any proof that works, okay, and hand it in and get a get as long as it gets a tick mark, you you move on.\nUm, but if you want your your results to actually be influential and be read by people, um, it can't just be correct.\nIt should also um be a pleasure to read, you know, um motivated um be adaptable to to generalize to other um things.\nUm, it's the same in many other disciplines like like coding.\nIt's a there's a lot of analogies between math and coding.\nI like analogies if you haven't noticed.\nUm, but um, you know like you can code something spaghetti code that works for a certain task and it's quick and dirty and it works.\nBut uh there's lots of good principles for for um writing code well so that other people can use it build upon it and so on and has fewer bugs and whatever.\nUm, and there's similar things with mathemat mathematics.\nSo yeah the first of all there's so many beautiful things there and and is one of the great minds uh in mathematics ever and computer science.\nUh just even considering the space of proofs.\nYeah.\nAnd saying, \"Okay, what does this space look like and what are the extremes?\"\nUh, like you mentioned, coding as an analogy is interesting because there's also this activity called the code golf.\nOh, yeah.\nYeah.\nYeah.\nWhich I also find beautiful and fun where people use different programming languages to try to write the shortest possible program that accomplishes a particular tasks.\nThen I believe there's even competitions on this.\nYeah.\nAnd uh it's also a nice way to stress test not just the sort of the programs or in this case the proofs but also the different languages maybe that's the different notation or whatever to use to to accomplish a different task.\nYeah, you learn a lot.\nI mean it may seem like a frivolous exercise but it can generate all these insights which if you didn't have this artificial um objective to to to pursue you might not see.\nWhat to you is the most beautiful or elegant equation in mathematics?\nI mean one of the things that people often look to in in beauty is the simplicity.\nSo if you look at E= MC², so when when a few concepts come together that's why the oiler identity is often considered uh the most beautiful equation in mathematics.\nDo you do you find beauty in that one and the oil identity?\nYeah.\nWell, as I said, I mean, what I find most appealing is is connections between different things that um so the if e^iπ= -1 um so yeah people oh uses all the fundamental constants okay that that's I mean that's cute um but but to me so the exponential function was interested by oil to measure exponential growth you know so compound interest or decay anything which is continuously growing continuously decreasing growth and decay or dilation or contraction is modeled by the exponential function.\nUm whereas pi uh comes around from circles and rotation right if you want to rotate a needle for example 180° you need to rotate by pi radians and i complex numbers represents the swing between imagine axis of a 90° rotation so a change in direction so the x function represents growth and decay in the direction where you really are um when you stick an i in the exponential it now it's it's instead of motion in the same direction as your current position it's the motion has right angles to composition.\nSo rotation um and then so e^iπ= -1 tells you that if you rotate for time pi you end up at the other direction.\nSo it unifies geometry through dilation and exponential growth or dynamics through this act of of complexification rotation by by i.\nSo it connects together all these tools mathematics.\nYeah.\nYeah.\nDynamic structure and complex and complex and um the complex numbers they all considered almost yeah they were all next door neighbors in mathematics because of this identity.\nDo do you think the thing you mentioned is cute the the the collision of notations from these disparate fields?\nUm, it's just a frivolous side effect or do you think there is legitimate like value in when the notation all the our old friends come together night?\nWell, it's it's it's confirmation that you have the right concepts.\nUm, so when you first study anything um you you have to measure things and give them names.\nUm, and initially sometimes your because your your model is again too far off from reality you give the wrong things the best names and you only find out later what's what's really important physicists can do this sometimes I mean but it turns out okay so actually with physics okay so E= MC² okay so one of the the big things was the E right so when when Aristotle first came up with his laws of of motion and then and then um Galileo or Newton and so forth you know they saw the things they could they could measure they could measure mass and acceleration and force and so forth and so Newtonian mechanics for example F= ma was the famous Newton second law of motion so those were the the primary objects so they gave them the central building in the theory it was only later after people started analyzing these equations that there always seemed to be these quantities that were conserved um so momentum and energy um uh and it's not obvious that things happen energy like it's not something you can directly measure the same way you can measure mass and and and velocity so forth but over time people realize is that this was actually a really fundamental concept.\nHamilton eventually in 19th century reformulated Newton's laws of physics into what's called Hamiltonian mechanics where the energy which is now called the Hamiltonian was the dominant object once you know how to measure the Hamiltonian of any system.\nYou can describe completely the dynamics like what happens to to all the states like it's um it it really was a central actor which was not obvious initially.\nUm, and this uh helped actually uh this change of perspective really helped when quantum mechanics came along.\nUh because um the early physicists who studied quantum mechanics, they had a lot of trouble trying to adapt their Newtonian thinking because everything was a particle and so forth to to to quantum mechanics, you know, because I think because it was a wave.\nIt just looked really really weird.\nUm like you ask what is the quantum version of F equals MA?\nAnd it's really really hard to to give an answer to that.\nUm, but it turns out that the Hamiltonian which was so um secretly behind the scenes in classical mechanics also is the key uh object in um um in quantum mechanics that there's there's also an object called Hamiltonian.\nIt's a different type of object.\nIt's what's called an operator rather than than a function.\nBut um and um but again once you specify it you specify the entire dynamics.\nSo there's something called Shingers equation that tells you exactly how quantum systems evolve once you have a Hamiltonian.\nSo side by side they look completely different objects you know like so one involves particles one involves waves and so forth but with this centrality you could start actually transferring a lot of intuition and facts from classical mechanics to quantum mechanics.\nFor example, in classical mechanics, there's this thing called Noether's theorem.\nEvery time there's a symmetry in a physical system, there is a conservation law.\nSo the laws of physics are translation invariant.\nLike if I move 10 steps to the left, I experience the same laws of physics as if I was here.\nAnd that corresponds to conservation momentum.\nUm if I turn around by by some angle again, I experience the same laws of physics.\nThis corresponds to conservation angular momentum.\nIf I wait for 10 minutes, um I still have the same laws of physics.\nUm, so this time translation variance.\nthis corresponds to the low conservation of energy.\nUm, so there's this fundamental connection between symmetry and conservation.\nUm, and that's also true in quantum mechanics.\nEven though the equations are completely different, but because they're both coming from the Hamiltonian, the Hamiltonian controls everything.\nUm, every time the Hamiltonian has a symmetry, the equations will will have a conservation law.\nUm, so it's it's it's it's once you have the right language, it actually makes things um a lot a lot cleaner.\nOne of the problems why we can't unify quantum mechanics and general relativity yet we haven't figured out what the fundamental objects are like for example we have to give up the notion of space and time being these almost Euclidean type spaces and there has to be um you know and you know we kind of know that at very tiny scales um there's going to be quite fluctuations of space space-time foam um and trying to to use Cartesian coord xyz is going to be it's it's just it's a non-starter but we don't know how to what to replace it with.\nUm, We don't actually have the mathematical um um concepts the analog Hamiltonian that sort of organized everything.\nDoes your gut say that there is a theory of everything.\nSo this is even possible to unify to find this language that unifies general relativity and quantum mechanics?\nI believe so.\nI mean the history of physics has been out of unification much like mathematics um over the years.\nYou know electricity and magnetism were separate theories and then Maxwell unified them.\nyou know, Newton unified the the motions of the heavens with the motions on of objects on the earth and so forth.\nSo, it should happen.\nIt's just that the um u again to go back to this model of the observations and and theory.\nPart of our problem is that physics is a victim's own success that our two big theories of of of physics general relativity and quantum mechanics are so are so good now that together they cover 99.9% of sort of all the observations we can make.\nUm, and you have to like either go to extremely insane particle accelerations or or the early universe or or or things that are really hard to measure um in order to get any deviation from either of these two theories to the point where you can actually figure out how to how to combine them together.\nUm, but I have faith that we, you know, we've we've been doing this for centuries and we've made progress before.\nThere's no reason why we should stop.\nDo you think it will be a mathematician that develops uh theory of everything?\nWhat often happens is that when the physicists need uh um some of mathematics, there's often some precursor that the mathematicians um worked out earlier.\nSo when Einstein started realizing that space was curved, he went to some mathematician and asked is there is there some theory of curved space that the mathematicians already came up with that could be useful and he said oh yeah there's I think Reman came up with something um and so yeah Reman had developed Riemannian geometry um which is precisely you know a theory of spaces that occurred in various general ways which turned out to be almost exactly what was needed um for Einstein's theory.\nThis is going back to Dwick's unreasonable effectiveness of mathematics.\nI think the theories that work well to explain the universe tend to also involve the same mathematical objects that work well to solve mathematical problems.\nUltimately, they're just sort of both ways of organizing data um in in in useful ways.\nIt just feels like you might need to go some weird land that's very hard to to intuit it like you know you have like string theory.\nYeah, that that's that was that was a leading candidate for many decades.\nIt's I think it's slowly falling out of fashion because it's it's not matching experiment.\nSo one of the big challenges of course like you said is experiment is very tough.\nYes.\nBecause of the how effective both theories are.\nBut the other is like just you know you're talking about you're not just deviating from spaceime.\nYou're going into like some crazy number of dimensions.\nYou're doing all kinds of weird stuff that to us we've gone so far from this flat earth that we started at like now we're just it's it's very hard to use our limited ape descendants of uh uh cognition to intuitit what that reality really is like.\nThis is why analogies are so important, you know.\nI mean, so yeah, the round earth is not intuitive because we're stuck on it, but you know, but you know, but round objects in general, we have pretty good intuition over uh and we have intuition about light works and so forth.\nAnd like it's it's actually a good exercise to actually work out how eclipses and phases of of the sun and the moon and so forth can be really easily explained by by by by round earth and round moon, you know, um and models.\nUm, and and you can just take you know a basketball and a golf ball and and and a light source and actually do these things yourself.\nUm, so the intuition is there.\nUm, but yeah you have to transfer it.\nThat is a big leap intellectually for us to go from flat to round earth because you know our life is mostly lived in flat land.\nYeah.\nTo load that information and we all like take it for granted.\nWe take so many things for granted because science has established a lot of evidence for this kind of thing.\nBut you know, we're on a round rock.\nYeah.\nFlying through space.\nYeah.\nYeah.\nAnd it's a big leap and you have to take a chain of those leaps the more and more and more we progress.\nRight.\nYeah.\nSo modern science is maybe again a victim of its own success is that you know in order to be more accurate it has to to move further and further away from your initial intuition.\nAnd so um for someone who hasn't gone through the whole process of science education it looks more more suspicious because of that.\nSo, you know, we we need we need more grounding.\nI mean,\n\n\nI think, um, I mean, you know, there are scientists who do excellent outreach.\nUm, but there's this, there this, there's, there, there's lots of science things that you can do at home.\nThere's lots of YouTube videos.\nI did a YouTube video recent of Grant Sanderson.\nWe talked about this earlier that, uh, you know, how the ancient Greeks were able to measure things like the distance to the moon, distance to the earth, and, you know, using techniques that you, you could also replicate yourself.\nUm, it doesn't all have to be like fancy space telescopes and and very intimidating mathematics.\nYeah, that's, uh, I highly recommend that.\nI believe you give a lecture and you also did an incredible video with Grant.\nIt's a beautiful experience to try to put yourself in the mind of a person from that time.\nMhm.\nShrouded in mystery, right?\nYou know, you're like on this planet, you don't know the shape of it, the size of it.\nYou see some stars, you see some, you see some things and you try to like localize yourself in this world.\nYeah.\nYeah.\nAnd try to make some kind of general statements about distance to places.\nChange your perspective is really important.\nYou say travel broadens the mind.\nThis is intellectual travel.\nYou know, put yourself in the mind of the ancient Greeks or or some other person, some other time period.\nMake hypothesis, spherical cows, whatever, you know, speculate.\nUm, and you know, this is, this is what mathematicians do and somewhat artists do, actually.\nIt's just incredible that given the extreme constraints, you could still say very powerful things.\nThat's why it's inspiring looking back in history.\nHow much can be figured out, right, when you don't have much to figure out stuff like if you propose axioms, then the mathematics lets you follow those a to their conclusions and sometimes you can get quite a, quite a long way from, you know, initial hypothesis.\nIf we can stay in the land of the weird, you mentioned general relativity.\nYou've, uh, you've contributed, uh, to the mathematical understanding of Einstein's field equations.\nCan you explain this work and from a sort of mathematical standpoint, uh, what aspects of general relativity are intriguing to you, challenging to you?\nI have worked on some equations.\nThere's something called the, the wave maps equation or the sigma field model, which is not quite the equation of space-time gravity itself, but of certain fields that might exist on top of space-time.\nUm, so Einstein's equations of relativity just describes space and time itself.\nUm, but then there's other fields that live on top of that.\nThere's the electromagnetic field.\nUm, there's control fields, and there's this whole hierarchy of different equations of which Einstein is considered one of the most nonlinear and difficult.\nBut relatively low in the hierarchy was this thing called the wave maps equation.\nSo it's a wave which at any given point, uh, is fixed to be like on a sphere.\nUm, so, uh, I can think of a bunch of arrows in space and time and and the arrows pointing in in different directions.\nUm, but they propagate like waves.\nIf you wiggle an arrow, it was, it will propagate and make all the arrows move kind of like sheets of wheat in the wheat field.\nAnd I was interested in the global regularity problem again for this question, like, is it possible for, for all the energy here to collect at a point?\nSo the equation I considered was actually what's called a critical equation where it's actually the behavior at all scales is roughly the same.\nUm, and I was able barely to show that, um, that you couldn't actually force a scenario where all the energy concentrated at one point, that the energy had to disperse a little bit, and the moment it dis little bit, it, it would, it would stay regular.\nYeah.\nThis was back in 2000.\nThat was part of why I got interested in Navier–Stokes equations afterwards, actually.\nYeah.\nSo I developed some techniques to, um, solve that problem.\nSo part of it is, it was, um, this problem is really nonlinear, uh, because of the curvature of the sphere.\nUm, this, there was a certain nonlinear effect which was a non-perturbative effect.\nIt was when you sort of looked at it normally, it looked larger than the linear effects of the wave equation.\nUm, and so it was hard to, to keep things under control even when the energy was small.\nBut I developed what's called a gauge transformation.\nSo the equation is kind of like an evolution of of of heaves of wheat, and and they're all bending back and forth, and so there's a lot of motion.\nUm, but like if you imagine like stabilizing the flow by attaching little cameras at different points in space which are trying to move in a way that captures most of the motion, and under this stabilized flow, the flow becomes a lot more linear.\nI discovered a way to transform the, the equation to reduce the amount of of nonlinear effects.\nUm, and then I was able to, to, to solve the equation.\nI found this transformation while visiting my aunt in Australia, and I was trying to understand the dynamics of all these fields, and I, I couldn't do it with pen and paper.\nUm, and I had not enough facility of computers to do any computer simulations.\nSo I ended up closing my eyes, being on, on the floor, and just imagining myself to actually be this vector field and rolling around to try to, to see how to change coordinates in such a way that somehow things in all directions would behave in a reasonably linear fashion.\nAnd yeah, my aunt walked in on me while I was doing that, and she was asking what do I, what am I doing doing this?\nIt's complicated is the answer.\nYeah.\nYeah.\nAnd you know, okay, fine.\nYou know, you're a young man.\nI don't ask questions.\nI, I, I have to ask about the, you know, um, how do you approach solving difficult problems?\nWhat if it's possible to go inside your mind when you're thinking?\nAre you visualizing in your mind the mathematical objects, symbols, maybe?\nWhat are you visualizing in your mind usually when you're thinking?\nUm, a lot of pen and paper.\nOne thing you pick up as a mathematician is sort of, uh, I call it cheating strategically.\nUm, so, uh, the, the beauty of mathematics is that is that you get to change the rule, change the problem, change the rules as you wish.\nThis you don't get to do this for any other field, like, you know, if, if you're an engineer and someone says build a bridge over this, this, you can't say I want to build this up bridge over here instead, or I want to build out of paper in instead of steel.\nUm, but a mathematician, you can, you can do whatever you want.\nUm, it's, it's like trying to solve a computer game where you can, there's unlimited cheat codes available.\nUh, and so, you know, you, you can, you can set this.\nSo there's a dimension that's too large.\nI'll set it to one.\nI'd solve the one dimension problem first.\nSo there's a main term and an error term.\nI'm going to make a spherical car assumption.\nI'll assume the error term is zero.\nAnd so the way you should solve these problems is is not in sort of this iron man mode where you make things maximally difficult.\nUm, but actually the way you should, you should approach any reasonable math problem is that you, if, if there are 10 things that are making your life difficult, find a version of the problem that turns off nine of the difficulties, but only keeps one of them.\nUm, and so that, um, and then that, just so you, you, you install nine cheats.\nOkay.\nYou install 10 cheats, then, then the game is trivial.\nYou saw nine cheats, you solve one problem that, that, that teaches you how, how to deal with that particular difficulty, and then you turn that one off and you turn someone else something else else on, and then you solve that one, and after you, you know how to solve the 10 problems, 10 difficulties separately, then you have to start merging them a few at a time.\nUm, I, I, as a kid, I watched a lot of these Hong Kong action movies.\nUm, it's from a culture.\nUm, and, uh, one thing is that every time there was a fight scene, you know, so maybe the, the hero will get swarmed by a hundred bad guy goons or whatever.\nBut it would always be choreographed so that he'd always be only fighting one person at a time, and then he would defeat that person and move on, and and because of that, he could, he could defeat all of them, right?\nBut whereas if they had fought a bit more intelligently and just swarmed the guy at once, uh, it would make for much, much worse, um, cinema, but, uh, but they would win.\nAre you usually, uh, pen and paper?\nAre you working, uh, with computer and latte?\nI'm mostly pen and paper, actually.\nSo in my office, I have four giant blackboards.\nUm, and sometimes I just have to write everything I know about the problem on the four blackboards and then sit my couch and just sort of see the whole thing.\nIs it all symbols like notation or is there some drawings?\nOh, there's a lot of drawing and a lot of bespoke doodles that that only make sense to me.\nUm, I mean, and and the beauty of blackboard is you erase and it's it's very organic thing.\nUm, I'm beginning to use more and more computers.\nUm, partly because AI makes it much easier to do simple coding things that you know, if I wanted to plot a function before, which is moderately complicated as some iteration or something, you know, I'd have to to remember how to set up a Python program and and and and how does a for loop work and and and debug it, and it would take two hours and so forth, and and now I can do it in 10, 15 minutes is much.\nUm, yeah, I'm using more and more, uh, computers to do simple explorations.\nLet's talk about AI a little bit if we could.\nSo, um, maybe a good entry point is just talking about computer-assisted proofs in general.\nCan you describe the Lean formal proof programming language and how it can help as a proof assistant, and maybe how, uh, it has helped you?\nSo, um, we is a computer language, um, much like sort of standard languages like Python and C and so forth, except that in most languages, the focus is on producing executable code.\nLines of code do things, you know, they, they flip bits or or they make a robot move or or they, they deliver you text on the internet or something.\nUm, so Lean is a language that can also do that.\nUh, it can also be run as a standard traditional language, but it can also produce certificates.\nSo a software like, like Python might do a computation and give you that the answer is seven.\nOkay, that does a sum of 3 + 4 is equal to 7, but, uh, Lean can produce not just the answer, but, but a proof that how it got the, the answer of seven as 3 + 4 and all the steps involved in, in, so it creates these more complicated objects, not just statements, but statements with proofs attached to them.\nUm, and, um, every line of code is just a way of piecing together previous statements to to create new ones.\nSo the idea is not new.\nThese things are, are called proof assistants, and so they provide languages for which you, you can create quite complicated, um, intricate mathematical proofs, and, um, they produce these certificates that that give a 100% um, guarantee that your arguments are correct if you trust the compiler of, but they made the compiler really small and you can, there are several different compilers available for the same for, um, can you give people some intuition about the, the difference between writing on pen and paper versus using Lean programming language?\nHow hard is it to formalize a statement?\nSo Lean, a lot of mathematicians were involved in the design of Lean.\nSo it's, it's designed so that individual lines of code resemble individual lines of mathematical argument, like you might want to introduce a variable.\nYou want want to prove a contradiction.\nYou, you, um, there are various standard things that you can do, and and it's, it's written so ideally it should like a one correspondence.\nIn practice, it isn't because Lean is like explaining a proof to an extremely pedantic colleague who will will point out, okay, did you really mean this, like, what, what happens if this is zero?\nOkay.\nUm, did you, how do you justify this?\nUm, so Lean has a lot of automation in it, um, to try to, to, uh, to be less annoying.\nUm, so for example, um, every mathematical object has to come with a type, like if I, if I talk about X is X a real number or, um, a natural number or or a function or something.\nUm, if you write things informally, um, it's up in terms of context, you say, you know, um, clearly x is equal to let x be the sum of y and z, and y and z were already real numbers, so x should also be a real number.\nUm, so Lean can do a lot of that, um, but every so often it, it says, wait a minute, can you tell me more about what this object is, uh, what type of object it is.\nYou see, you have to think more, um, at a philosophical level.\nWell, not just sort of computations you're doing, but sort of what each object actually, um, is in some sense.\nIs he using something like LLMs to do, uh, the type inference or like you mention the real number?\nIt's, it's using much more traditional what's called good old fashioned AI.\nYeah, you can represent all these things as trees, and there's always algorithm to match one tree to another tree.\nSo it's actually doable to figure out if something is a a real number or a natural number.\nYeah.\nEvery object sort of comes with a history of where it came from, and you can, you can kind of trace.\nOh, I see.\nUm, yeah, so it's, it's designed for reliability.\nSo, uh, modern AIs are not used in, it's a disjoint technology.\nPeople are beginning to use AIs on top of Lean.\nSo when a mathematician tries to program, um, a proof in Lean, um, often there's a step, okay, now I want to use, um, the fundamental thing of calculus, say, okay, to do the next step.\nSo the Lean developers have built this, this massive project called mathlib, a collection of tens of thousands of useful facts about mathematical objects, and somewhere in there is the fundamental theorem of calculus, but you need to find it.\nSo a lot the bottleneck now is actually lemma search, you know, there's a tool that that, you know, is in there somewhere and you need to find it.\nUm, and so you can, there are various search engines specialized for math loop that you can do, um, but there's now these large language models that you can say, um, I need the fundamental calculus at this point, and it say, okay, uh, um, uh, for example, um, when I code, I have GitHub copilot installed as a plugin to my IDE, and it scans my text and it sees what I need, says, you know, I might even type here, okay, now I need to use the final thing with calculus, okay, and then it might suggest, okay, try this, and like maybe 25% of the time it works exactly, and then another 10, 15% of the time it doesn't quite work, but it, it's close enough that I can say, oh, if I just change it here and here, it, it will work, and then like half the time it gives me complete rubbish.\nUm, so, but people are beginning to use AI a little bit on top, um, mostly on the level of basically fancy autocomplete, um, but, uh, you can type half of one line of a proof and it will find, it will tell you, yeah, but a fancy, especially fancy with the sort of capital letter F is, uh, uh, removes some of the friction mathematician might.\n\n\nfeel when they move\nfrom pen and paper to formalizing.\nYes.\nYeah.\nSo, right now I estimate that the effort, time, and effort taken to formalize a proof is about 10 times the amount taken to write it out.\nYeah.\nSo, it's doable, but uh, you don't, it's, it's annoying.\nBut doesn't it like kill the whole vibe of being a mathematician?\nYeah.\nSo, I mean, having a pedantic coworker, right?\nYeah.\nIf if that was the only aspect of it.\nOkay.\nBut um, okay, there, there are some, there's some case it was actually more pleasant to do things formally.\nSo there was a theorem I formalized, and there was a certain constant, 12, um, that that came out at um, in the final statement, and so this 12 had to be carried all through the proof, um, and like everything had to be checked that it goes all the, all these other numbers had to be consistent with this final number 12.\nAnd so we wrote a paper through this theorem with this number 12, and then a few weeks later someone said, \"Oh, we can actually improve this 12 to an 11 by reworking some of these steps.\"\nAnd when this happens with pen and paper, um, like every time you change a parameter, you have to check line by line that every single line of your proof still works, and there can be subtle things that you didn't quite realize.\nSome properties on the number 12 that you didn't even realize that you were taking advantage of.\nSo a proof can break down at a subtle place.\nUm, so we had formalized the proof with this constant 12, and then when this, this new paper came out, uh, we said, \"Okay, let's...\"\nSo that took like three weeks to formalize and and like 20 people to formalize this, this, this original proof.\nI said, \"Oh, but now, now let's, let's um, uh, uh, let's update the 12 to 11.\"\nAnd what you can do with Lean is that you just in your headline theorem, you, you change a 12 to 11.\nYou run the compiler, and like of the thousands of lines of code, you have 90% of them still work, and there's a couple that are lined in red.\nNow I can't justify this, these steps, but it, it immediately isolates which steps you need to change, but you can skip over everything which, which works just fine.\nUm, and if you program things correctly, um, with sort of good programming practices, most of your lines will not be read.\nUm, and there'll just be a few places where you, I mean, if if you don't hard code your constants, but you sort of, uh, um, um, you use smart tactics and so forth.\nYeah, you can localize um, the things you need to change to to a very small um, period of time.\nSo like within a day or two, we had updated our proof to this is very quick process.\nYou um, you make a change, there are 10 things now that don't work.\nFor each one you make a change, and now there's five more things that don't work, but but the process converges much more smoothly than with pen and paper.\nSo that's for writing.\nAre you able to read it?\nLike if somebody else sends a proof, are you able to, like, how, what's, what's the uh, versus paper?\nAnd yeah, so the proofs are longer, but each individual piece is easier to read.\nSo, um, if you take a math paper and you jump to page 27, and you look at paragraph 6, and you have a line of of of text of math, I often can't read it immediately because it assumes various definitions which I have to to go back and and maybe 10 pages earlier this was defined, and this um, the proof is scattered all over the place, and you basically are forced to read fairly sequentially.\nUm, it's, it's not like say a novel where like, you know, in theory you could, you open up a novel halfway through and start reading.\nThere's a lot of context.\nBut when a proven Lean, if you put your cursor on a line of code, every single object there, you can hover over it and it would, it would say what it is, where it came from, where stuff is justified.\nYou can trace things back much easier than sort of flipping through a math paper.\nSo, one thing that Lean really enables is actually collaborating on proofs at a really atomic scale that you really couldn't do in the past.\nSo traditionally with pen and paper, um, when you want to collaborate with another mathematician, um, either you do it as a blackboard where you um, you can really interact, but if you're doing it sort of by email or something, um, basically, yeah, you have to segment it, say, \"I'm going to, I'm going to finish section three, you do section four,\" but uh, you can't really sort of work on the same thing collaboratively at the same time.\nBut with Lean, you can be trying to formalize some portion of the proof and say, \"I got stuck at line 67 here.\nI need to prove this thing, but it, it doesn't quite work here is like the three lines of code I'm having trouble with.\"\nUm, but because all the context is there, someone else can say, \"Oh, okay.\nI recognize what you need to do.\nYou need to to apply this trick or this tool,\" and you can do extremely atomic level conversations.\nSo, because of Lean, I can collaborate, you know, with dozens of people across the world, most of whom I don't have, never met in person.\nUm, and I may not know actually even whether they're um, how reliable they are in in in their um, um, in in the process, but Lean gives me a certificate of of of trust.\nUm, so I can do, I can do trustless mathematics.\nSo there's so many interesting questions there's.\nSo one, you're you're known for being a great collaborator.\nSo what is the right way to approach solving a difficult problem in mathematics?\nWhen you're collaborating, are you doing a divide and conquer type of thing, or are you brains, are you focusing on a particular part and you're brainstorming?\nThere's always a brainstorming process first.\nYeah.\nSo math research projects sort of by their nature when you start, you don't really know how to do the problem.\nUm, it's not like an engineering project where somehow the theory has been established for decades and it's, it's implementation is the main difficulty.\nYou have to figure out even what is the right path.\nSo so this is what I said about about cheating first, you know, um, it's like um, to go back to the bridge building analogy, you know, so first assume you have infinite budget and and like unlimited amounts of of of workforce and so forth.\nNow can you can you build this bridge?\nOkay.\nOkay.\nNow have infinite budget but only finite workforce, right?\nNow can you do that and so forth.\nUm, so uh, I mean, of course, you know, no engineer can actually do this, like I say, they have fixed requirements.\nYes, there's this sort of jam sessions always at the beginning where you try all kinds of crazy things and you, you make all these assumptions that are unrealistic, but you plan to fix later, um, and you try to see if there's even some skeleton of an approach that might work, um, and then hopefully that breaks up the problem into smaller sub problems which you don't know how to do, but then you uh, you focus on on sub ones, and sometimes different collaborators are better at at working on on certain things.\nUm, so one of my themes I'm known for is a theorem of Ben Green, which called the Green-Tao theorem.\nUm, it's a statement that the primes contain arithmetic progressions of any length.\nSo it was a modification of this theoret.\nAnd the way we collaborated was that Ben had already proven a similar result for progressions of length three.\nUm, he showed that sets like the primes contain lots and lots of progressions of length three.\nUm, even and even um, subsets of the prime, certain subsets do, um, but his techniques only worked for um, for length three progressions.\nThey didn't work for longer progressions.\nUm, but I had these techniques coming from agotic theory, which is something that I had been playing with and and uh, I knew better than Ben at the time.\nUm, and so um, if I could justify certain randomness properties of some set relating to primes, like there, there's a certain technical condition which if I could have it, if if Ben could supply me this fact, I could, I could conclude the theorem, but I what I asked was a really difficult question in number theory, which um, he said, \"There's no way we can prove this.\"\nCan so he said, \"Can you prove your part of the theorem using a weaker hypothesis that I have a chance to prove it?\"\nAnd he proposed something which he could prove, but it was too weak for me, I can't use this.\nUm, so there's this, there was this conversation going back and forth.\nUm, so different cheats to.\nYeah.\nYeah.\nI want to cheat more, he wants to cheat less.\nBut eventually we found a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a property which a he could prove and b I could use, um, and then we, we could prove our view, and um, yeah, so there's, there's a, there all kinds of dynamics, you know, I mean, it's every, every um, collaboration has a, has a, has some story, no two are the same.\nAnd then on on the flip side of that, like you mentioned with Lean programming, now that's almost like a different story because you can do, you can create, I think you've mentioned a kind of a blueprint, right, for a problem, and then you can really do a divide and conquer with Lean where you're working on separate parts, right, and they're using the computer system proof checker essentially to make sure that everything is correct along the way.\nYeah.\nSo it makes everything compatible and uh, yeah, and trustable.\nUm, yeah, so currently only a few mathematical projects can be cut up in this way at the current state of the art.\nMost of the Lean activity is on formalizing boos that have already been proven by humans.\nA math paper basically is a boop, a blueprint in a sense.\nIt is taking a a difficult statement like big theorem and breaking up into 100 little lemmas, um, but often not all written with enough detail that each one can be sort of directly formalized.\nA blueprint is like a really pedantically written version of a paper where every step is explained as to as much detail as as as possible and trying to make each step kind of self-contained, um, and or depending on only a very specific number of of previous statements that been proven so that each node of this blueprint graph that gets generated can be tackled independently of of the others, and you don't even need to know how the whole thing works.\nUm, so it's like a modern supply chain, you know, like if you want to create an iPhone or or some other complicated object, um, no one person can can build up um, a single object, but you can a specialist who who just if they're given some widgets from some other company, they can combine them together to form a slightly bigger widget.\nI think that's a really exciting possibility because you can have, if you can find problems that could be broken down this way, then you can have, you know, thousands of contributors, right, distributed.\nSo I told you before about the split between theoretical and experimental mathematics, and right now most mathematics is theoretical, and when you type it, it's experimental.\nI think the platform that Lean and and other software tools so um, GitHub and things like that, um, allow, they will allow experimental mathematics to be to scale up um, to a much greater degree than we can do now.\nSo right now, if you want to um, um, do any mathematical exploration of some mathematical pattern or something, you need some code to write out the pattern, and I mean, sometimes there are some computer algebra packages that help, but often it's just one mathematician coding lots and lots of Python or whatever, and because coding is such an errorprone activity, it's not practical to allow other people to collaborate with you on writing modules for your code because if one of the modules has a bug in it, the whole thing is unreliable.\nUm, so it's these are uh, so you get these bespoke uh, spaghetti code that written by not, not professional programmers, but by mathematicians, you know, and they're clunky and and and slow, and um, and so because of that, it's it's hard to to really massproduce experimental results, um, but um, yeah, but I think with Lean, I mean, so I'm already starting some projects where we are not just experimenting with data, but experimenting with proofs.\nSo I have this project called the equation theories project.\nBasically, we generated about 22 million little problems in abstract algebra.\nMaybe should back up and tell you what what the project is.\nOkay.\nSo abstract algebra studies operations like multiplication and addition and the abstract properties.\nOkay.\nSo multiplication, for example, is commutive.\nX * Y is always Y * X, at least for numbers.\nUm, and it's also associative.\nX * Y * Z is the same as X * Y * Z.\nUm, so um, these operations obey some laws that don't obey others.\nFor example, x * x is not always equal to x.\nSo that law is not always true.\nSo given any any operation, it obeys some laws and not others.\nUm, and so we generated about 4,000 of these possible laws of algebra that certain operations can satisfy.\nAnd our question is which laws imply which other ones?\nUm, so for example, does commutivity imply associativity?\nAnd the answer is no, because it turns out you can describe an operation which obeys the commitive law but doesn't obey the associative law.\nSo by producing an example, you can, you can show that commitivity does not imply associativity, but some other laws do imply other laws by substitution and so forth, and you can write down some some algebraic proof.\nSo we look at all the pairs between these 4,000 laws and this 22 million of these pairs, and for each pair, we ask, does this law imply this um, law?\nIf so, give a, give u, give a proof.\nIf not, give a counter example.\nMhm.\nUm, so 22 million problems, each one of which you could give to like an undergraduate algebra student, and they had a decent chance of solving the problem.\nAlthough there are a few of these 22 million, there like 100 or so that are really quite hard.\nOkay.\nBut a lot are easy, and the project was just to to work out to determine the entire graph, like, like which ones imply which other ones.\nThat's an incredible project by the way.\nSuch a good idea.\nSuch a good test of the very thing we've been talking about at a scale that's remarkable.\nYeah.\nSo it would not have been feasible.\nYeah, I mean, the state-of-the-art in the literature was like, you know, 15 equations and sort of how they apply.\nThat's sort of at the limit of what a human repentant paper can do.\nSo, so you need to scale it up.\nSo, you need to crowdsource, but you also need to\n\n\nTrust.\nAll the, um, I mean, no one person can check 22 million of these proofs.\nYou needed to be computerized, and so it only became possible with Lean.\nUm, we were hoping to use a lot of AI as well.\nUm, so the project is almost complete.\nUm, so of these 22 million, all but two had been settled.\nUm, wow, and, uh, well, actually, and of those two, we have a pen and paper proof of the two, uh, and we, we're formalizing it.\nIn fact, I was this morning, I was working on finishing it.\nUm, so we're almost done on this.\nUm, incredible is, yeah, fantastic.\nHow many people were able to get about 50, um, which in Mathematics is, is considered a huge number.\nIt's a huge number.\nThat's crazy.\nYeah.\nSo we kind of have a paper with 50 authors, uh, and a big appendix of who contribute to what.\nHere's an interesting question.\nNow, to maybe speak even more generally about it, when you have this pool of people, is there a way to, uh, organize the contributions by level of expertise of the people of the contributors?\nNow, okay, uh, I'm asking you a lot of pthead questions here, but I, I'm imagining a bunch of humans and maybe in the future some AIs.\nCan there be like an ELO rating type of situation where like a gamification of this?\nThe beauty of, of these Lean projects is, is that automatically you get all this data, you know, so like, like everything has to be uploaded for this GitHub, and GitHub tracks who contributed what.\nUm, so you could generate statistics from at any, at any later point in time.\nYou can say, oh, this person contributed this many, this many lines of code or whatever.\nI mean, these are very crude metrics.\nUm, I would, I would definitely not want this to become like, you know, part of your tenure review or something.\nUh, um, but, um, I mean, I think already in, in, in enterprise computing, right, people do use some of these metrics as part of, of the assessment of, of performance of a, of an employee.\nUm, again, this is a direction which is a bit scary for academics to go down.\nWe, we don't like metrics so much, and yet academics use metrics, they just use old ones.\nNumber of papers.\nYeah.\nYeah.\nIt's true.\nIt's true that, yeah.\nI mean, um, it feels like this is a metric, while flawed, is, is going in the more in the right direction.\nRight.\nYeah.\nIt's an interesting, at least it's a very interesting metric.\nYeah.\nI think it's interesting to study.\nI mean, I, I think you can, you can do studies of, of whether these are better predictors.\nUm, there's this problem called Goodhart's law.\nIf a statistic is actually used to incentivize performance, it becomes gained.\nUm, and then it is no longer a useful measure.\nOh, humans always.\nYeah.\nYeah.\nI know.\nIt's rational.\nSo what we've done for this project is, is self-report.\nSo, um, there are actually standard categories, um, from the sciences of what types of contributions people give.\nSo there's, there's concept and validation and resources and, and, and coding and so forth.\nUm, so we, we, we, there's a standard list of troll or so categories.\nUm, and we just ask each contributor to, there's a big matrix of all the, of all the authors in all the categories, just to tick the boxes where they think that they contributed.\nUm, and just give a rough idea, you know, like, oh, so you did some coding and, and, uh, and you provided some compute, but you didn't do any of the pen and paper verification or whatever.\nAnd I think that that works out.\nTraditionally, mathematicians just order alphabetically by surname.\nSo we don't have this tradition as in the sciences of, you know, lead author and second author and so forth, like which we're proud of, you know, we make all the authors equal status, but it doesn't quite scale to this size.\nSo a decade ago, I was involved in these things called Polymath projects.\nIt was the crowd-sourcing Mathematics, but without the Lean component, so it was limited by you needed a human moderator to actually check that all the contributions coming in were actually valid, and, and this was a huge bottleneck actually.\nUm, but still, we had projects that were, you know, 10 author or so.\nBut we had decided at the time, um, not to try to decide who did what, um, but to have a single pseudonym.\nSo we created this fictional character called DHJ Polymath in the spirit of Bourbaki.\nBourbaki is, is the pseudonym for a famous group of mathematicians in the 20th century.\nBut, um, and so the paper was authored under the pseudonym.\nSo none of us got the author credit.\nUm, this actually turned out to be not so great for a couple of reasons.\nSo, so one is that if you actually wanted to be considered for tenure or whatever, you could not use this paper in your, uh, uh, as your submitted as one of your publications because it wasn't, you didn't have the formal author credit.\nUm, um, but the other thing that we've recognized much later is that when people referred to these projects, they naturally refer to the most famous person who was involved in the project.\nOh, so this was Tim Gowers' project.\nThis was Terence Tao's project and not mention the other 19 or whatever people that were involved.\nYeah.\nSo we're trying something different this time around where we have everyone's an author.\nUm, but we will have an appendix with this matrix, and we'll see how that works.\nI mean, uh, so both projects are incredible, just the fact that you're involved in such huge collaborations.\nBut I think I saw a talk from Kevin Buzzard about, uh, the Lean programming language just a few years ago, and he was saying that, uh, this might be the future of Mathematics.\nAnd so it's also exciting that you're embracing, uh, one of the greatest mathematicians in the world embracing this what seems like the paving of the future of Mathematics.\nUm, so I have to ask you here about the integration of AI into this whole process.\nSo DeepMind's AlphaProof was trained using reinforcement learning on both failed and successful formal Lean proofs of IMO problems.\nSo this is sort of high-level high school, oh, very high level, yes, very high level high school level Mathematics problems.\nWhat do you think about the system, and maybe what is the gap between this system that is able to prove the high school level problems, uh, versus graduate level, uh, problems?\nYeah, the difficulty increases exponentially with the number of steps involved in the proof.\nIt's a commentatorial explosion, right?\nSo the thing with large language models is, is that they make mistakes.\nAnd so if a proof has got 20 steps and your model has a 10% failure rate, um, at each step, um, of, of going in the wrong direction, like, uh, it's just extremely unlikely to actually, um, reach the end.\nActually, uh, just to take a small tangent here, is how hard is the problem of mapping from natural language to the formal program?\nOh yeah, it's extremely hard actually.\nUm, natural language, you know, it's very fault tolerant.\nUm, like you can make a few minor grammatical errors, and a speaker in the second language can get some idea of what you're saying.\nUm, yeah, but, but formal language, yeah, you, if you get one little thing wrong, um, like the whole thing is, is, is nonsense.\nUm, even formal to formal is, is, is very hard.\nThere, there are different incompatible, um, uh, proofist languages.\nUh, there's Lean, but also Coq and Isabelle and so forth, and actually even converting from a formal language to formal language, um, is, is an unsolved, basically unsolved problem.\nThat is fascinating.\nOkay.\nSo, uh, but once you have an informal language, they're using, um, their RL train model.\nSo some something akin to AlphaZero that they used to go to, then try to come up with proofs.\nThey also have a model, I believe it's a separate model for geometric problems.\nSo what impresses you about the system, and, um, what do you think is the gap?\nYeah, we talked earlier about things that are amazing over time become kind of normalized.\nUm, so yeah, now somehow it's, oh, of course, geometry is a silver problem, right?\nThat's true, that's true.\nI mean, it's still beautiful, yeah, these are great works.\nIt shows what's possible.\nI mean, um, it's, it, um, the approach doesn't scale currently is, yeah, 3 days of Google's survey server time to solve one high school math problem.\nThis is not a scalable, uh, prospect.\nUm, especially with the exponential increase in, um, as, as the complexity, um, increases.\nWe should mention that they got a silver medal performance, the equivalent of, I mean, yeah, equivalent of a silver.\nSo first of all, they took way more time than was allotted, um, and they had this assistance where, where the humans started helped by, by formalizing, um, but, uh, also they, they're giving us those full marks for the solution, which I guess is formally verified.\nSo I guess that, that's, that's fair.\nUm, yeah, um, there, there are efforts, there was, there will be a proposal at some point to actually have an AI math olympiad where at the same time as the human contestants get the, the actual Olympia, um, problems, AIs will also be given the same problems with the same time period, um, and the outputs will have to be graded by the same judges, um, um, and which means that will have be written in natural language rather than formal language.\nOh, I hope that happens.\nI hope that this IMO, it happens.\nI hope, I hope next one, it won't happen this IMO, the performance is not good enough in, in the time period, and, and, uh, um, but there are smaller competitions, um, there are competitions where the, the answer is a, is a number rather than a long form proof, um, and that's, that's, um, AI are actually a lot better at, um, problems where there's a specific numerical answer, um, because it's, it's easy to, to, to, uh, to reinforce, do reinforcement learning on it.\nYeah, you got the right answer, you got the wrong answer.\nIt's, it's a very clear signal.\nBut a long form proof either has to be formal, and then the Lean can give it a thumbs up, thumbs down, or it's informal.\nUm, but then you need a human to grade it to tell, uh, and if you're trying to do billions of, of reinforcement learning, um, you know, um, um, runs, you're not, you can't hire enough humans to, uh, to grade those.\nUm, it's already hard enough for, for the last language to do reinforcement learning on, on just the regular text that that people get.\nBut now if you actually hire people not just give thumbs up, thumbs down, but actually check the, the output mathematically.\nYeah, that's too expensive.\nSo if we, uh, just explore this possible future, what, what, what is the thing that humans do that's most special in, um, in Mathematics?\nSo that you could see AI, uh, not cracking for a while.\nSo inventing new theories.\nSo coming up with new conjectures versus, uh, proving the conjectures, right?\nBuilding new abstractions, new representations, maybe, uh, an AI turn style with seeing new connections between disparate fields.\nIt's a good question.\nUm, I think the nature of what mathematicians do over time has changed a lot.\nUm, you know, um, so a thousand years ago, mathematicians had to compute the date of Easter, uh, and there was really complicated, uh, calculations, you know, but it's all automated, been automated for centuries, we don't need that anymore, you know, they used to navigate, to do spherical navigation, spherical trigonometry to navigate how to get from, from, um, the old world to the new, or very complicated calculations, again, we've been automated.\nUm, you know, even a lot of undergraduate Mathematics, even before AI, um, like Wolfram Alpha, for example.\nIt's not a language model, but it can solve a lot of undergraduate level math tasks.\nSo on the computational side, verifying routine things like having a problem and, um, and say, here's a problem in partial equations.\nCould you solve it using any of the 20 standard techniques?\nUm, and they say, yes, I've tried all 20, and here are the 100 different permutations, and, and here's my results.\nUm, and that type of thing, I think it will work very well.\nUm, type of scaling to once you solve one problem to to make the AI attack 100 adjacent problems.\nUm, the things that humans do still.\nYeah.\nSo, so where the AI really struggles right now, um, is knowing when it's made a wrong turn.\nUm, that it can say, &quot;Oh, I'm going to solve this problem.\nI'm going to split up this problem into, um, into these two cases.\nI'm going to try this technique.&quot;\nAnd, um, sometimes if you're lucky and it's a simple problem, it's the right technique, and you solve the problem, and sometimes it, it will get, it will have a problem, it would propose an approach which is just complete nonsense.\nUm, and but like it looks like a proof.\nUm, so this is one annoying thing about LM generated Mathematics.\nSo, um, yeah, we, we, we've had human generated Mathematics as very low quality, um, uh, like, you know, submissions, people who don't have the formal training and so forth.\nBut if a human proof is bad, you can tell it's bad pretty quickly.\nIt makes really basic mistakes.\nBut the AI generated proofs, they can look superficially flawless.\nUh, and that's partly because that's what the reinforcement learning has actually trained them to do, right?\nTo, to make things, to, to produce text that looks like, um, what is correct, which for many applications is good enough.\nUm, uh, so the errors often really subtle, and then when you spot them, they're really stupid.\nUm, like, you know, like no human would have actually made that mistake.\nYeah, it's actually really frustrating in the programming context because I, I program a lot, and yeah, when a human makes, when low-quality code, there's something called code smell, right?\nYou can, you can tell, you can tell immediately like, okay, there's signs.\nBut with, with a generated code of, and then you're right, eventually you find an obvious dumb thing that just looks like good code.\nYeah.\nSo, um, it's very tricky to and frustrating for some reason to.\nYeah, to work.\nYeah.\nSo the sense of smell.\nOkay, there you go.\nThis is, this is one thing that humans have.\nUm, and there's a metaphorical mathematical smell that, uh, this we, it's not clear how to get the AI to duplicate that eventually.\nUm, I mean, so the way, um, AlphaZero and so forth make progress on go and chess and so forth is, is in some sense they have developed a sense of smell for go and chess positions, you know, that that this position is good for white, is good for black.\nUm, they can't initiate why.\nUm, but just having that, that sense of smell lets them strategize.\nSo if AIs gain that ability to sort of a sense of viability of certain proof strategies, say, so, so you can say, I'm going to try to break up this problem into two small subtasks, and they can say, well, this looks good, two tasks look like they're simpler tasks than than your main task, and they still got a good chance of being true.\nUm, so this is good to try, or no, you've, you made the problem worse because each of the two sub problems is actually harder than your original problem, which is actually what normally happens if you try a random, uh, thing to try, normally actually, it's very easy to transform a problem into even harder problem.\nMhm.\nVery rarely do you problem transport a simpler problem.\nUm, yeah, so if they can pick up a sense of smell, then they could maybe start competing with human level mathematicians.\nSo, this is a hard question, but not competing, but collaborating.\nYeah.\n\n\nIf okay, hypothetical.\n\nIf I gave you an oracle that was able to do some aspect of what you do, and you could just collaborate with it.\nYeah.\nYeah.\nWhat would that oracle?\nWhat would you like that oracle to be able to do?\nWould you like it to uh maybe be a verifier?\nLike check Mhm.\nDo the codes like you're Yes.\nuh professor to this is the correct this is a good this is a promising fruitful direction.\nYeah.\nYeah.\nOr or would you like it to uh generate possible proofs and then you see which one is the right one?\nUm or would you like it to maybe generate different representation different totally different ways of seeing this problem?\nYeah, I think all of the above.\nUm a lot of it is we don't know how to use these tools because it's a paradigm that is not um yeah we have not had in the past systems that are competent enough to understand complex instructions.\nMhm.\nUm that can work at massive scale but are also unreliable.\nUh like it's it's an interesting uh bit unreliable in subtle ways while we while providing sufficiently good output.\nUm it's a interesting combination.\nUm you know I mean you have you have like graduate students that you work with who kind of like this but not at scale um you know and and and we have previous software tools that um can work at scale but but very narrow um so we have to figure out how to how to use um I mean um so Tim C actually imagine he actually foresaw like in in 2000 he was envisioning what Mathematics would look like in in actually two and a half decades and that's funny yeah.\nHe he wrote in his in in his article like a a a hypothetical conversation between a mathematical assistant of the future um and himself you know trying to solve a problem and they would have have a conversation that sometimes the human would would propose an idea and the AI would would evaluate it and sometimes the AI would propose an idea um and u and sometimes that computation was required and a would just go and say okay I've checked the 100 cases needed here or um the first you you said this is true for all n I've checked for n up to 100 um and it looks good so far or hang on there's a problem at n equals 46 you so just a free form conversation where you don't know in advance where things are going to go but just based on on I think ideas get proposed on both sides calculations get proposed on both sides.\nI've had conversations with AI where I say okay let's we're going to collaborate to solve this math problem and it's a problem that I already know the solution to so I I try to prompt it okay so here's the problem I suggest using this tool and then you'll find this this lovely argument using a totally different tool which eventually goes you know, into the weeds and say, \"No, no, no.\nIf I using this, okay, and it might start using this and then it'll go back to the tool that I wanted to to before.\"\nUm, and like you have to keep railroading it um onto the path you want.\nAnd like I I could eventually force it to give the proof I wanted.\nUm, but it was like hurting cats um like and the amount of personal effort I had to take to not just sort of prompt it, but also check it output because it like a lot of what it looked like was going to work.\nI know there's a problem on online 17 and basically arguing with it.\nUm like it was more exhausting than doing it unassisted.\nSo like it but that's the current state of the art.\nI wonder if there's there's a phase shift that happens to where it's no longer feels like hurting cats and maybe it'll surprise us how quickly that comes.\nI I believe so.\nUm so in formalization I I mentioned before that it takes 10 times longer to formalize a proof than to write it by hand with these modern AI tools is and also just better tooling um the lean um um developers are doing a great job adding more and more features and making it user friendly.\nIt's going up from 9 to 8 to 7.\nOkay, no big deal.\nBut one day it will drop below one.\nUm and that's a phase shift because suddenly um it makes sense when you write a paper to to write it in lean first or through a conversation with AI who is generally um on the fly with you and it becomes natural for journals to accept you know maybe they'll offer expedite refereeing you know if if a paper has already been formalized in in lean um they'll just ask the referee to comment on on the significance of the results and how it connects to literature and not worry so much about the correctness.\nUm because that's been certified.\nUm papers are getting longer and longer in Mathematics and actually it's harder and harder to get good refereeing for um the really long ones unless they're really important.\nIt is actually an issue which and the formalization is coming in at just the right time for this to be and the easier and easier to guess because of the tooling and all the other factors then you're going to see much more like math lib will grow potentially exponentially.\nIt's a it's a it's a virtuous uh cycle.\nOkay.\nI mean one facet of this type that happened in the past was the adoption of LaTeX.\nSo so LaTeX is this type setting language that all mathematicians use now.\nSo in the past people use all kinds of word processors and typewriters and whatever but at some point LaTeX became easier to use than all other competitors and that people just switched you know within a few years like it was just a dramatic um pay shift.\nIt's a wild out there question, but what what year how far away are we from a uh AI system being a collaborator on a proof that wins the Fields Medal.\nSo that level.\nOkay.\nUm well, it depends on the level of collaboration.\nI mean, no, like it deserves to be to get the Fields Medal.\nlike so half and half already like I I can imagine if it was a winning paper having some AI systems in writing it you know uh just you know like the order complete alone is already I I use it like it speeds up my my own writing um um like you know you you can have a theorem you have a proof and the proof has three cases and I I write down the proof of the first case and the autocomplete just suggests all right now now here's how the proof of second case could work and like it was exactly correct that was great saved me like 5 10 minutes of uh of typing but in that case The AI system doesn't get the Fields medal.\nNo.\nUh are we talking 20 years, 50 years, 100 years?\nWhat do you think?\nOkay.\nSo I I gave a prediction in print.\nSo by 2026, which is now next year, um there will be math collaborations, you know, where the AI, so not Fields Medal winning, but but like actual research level math like published ideas that in part generated by AI.\nUm maybe not the ideas but at least uh some of the computations um um the verifications.\nYeah.\nI mean has that already happened?\nHas that already happened?\nYeah.\nThere are there are problems that were solved uh by a complicated process conversing with AI to propose things and the human goes and tries it and the contract doesn't work but it might propose a different idea.\nUm it it's it's hard to disentangle exactly.\nUm there are certainly math results which could only have been accomplished because there was a math method human mathematician and an AI involved.\nUm but it's hard to sort of disentangle credit.\nUm I mean these tools they they do not uh replicate all the skills needed to do Mathematics but they can replicate sort of some non-trivial percentage of them you know 30 40%.\nThey can fill in gaps.\nUm, you know, so, uh, coding is is is a is a good example, you know.\nSo, I I um um it's annoying for me to code in Python.\nI'm not I'm not a native um I'm not a professional um programmer.\nUm, but um the with AI that the the friction cost of of doing it is is is much reduced.\nUh so it it fills in that gap for me.\nUm AI is getting quite good at literature review.\nUm I mean there's still a problem with um hallucinating you know the references that don't exist.\nUm but this I think is a civil war problem if you train in the right way and so forth you can you can and um and verify um you know using the internet um you know um you should in a few years get to the point where you you have a a lemma that you need and uh we say has anyone proven this lemma before and it will do basically a fancy web search AI assistant and say yeah yeah there are these six papers where something similar has happened and I mean it you can ask it right now and it'll give you six papers of which maybe one is is legitimate and relevant.\nOne exists but is not relevant and four are hallucinated.\nUm it has a non-zero success rate right now, but uh it's there's so much garbage.\nUh so much the signal to noise ratio is so poor that it's it's um it's most helpful when you already somewhat know the literature.\nUm and you just need to be prompted to be reminded of a paper that was already subconsciously in your memory versus helping you discover new you were not even aware of but is the correct citation.\nYeah, that's yeah, that it can sometimes do.\nBut but when it does, it's it's buried in in a list of options for which the other that are bad.\nYeah.\nI mean, being able to automatically generate a related work section that is correct.\nYeah.\nThat's actually a beautiful thing that might be another phase shift because it assigns credit correctly.\nYeah.\nIt does.\nIt breaks you out of the silos of Yeah.\nYeah.\nYeah.\nthought, you know.\nYeah.\nNo, there's a big hump to overcome right now.\nI mean, it's it's like self-driving cars, you know.\nthe the safety margin has to be really high for it to be um uh to be feasible.\nSo yeah, so there's a last mile problem um with a lot of AI applications um that uh you know they can develop tools that work 20% 80% of the time but it's still not good enough um and in fact even worse than good some ways.\nI mean another way of asking the Fields metal question is what year do you think you'll wake up and be like real surprised?\nyou read the headline, the news of something happened that AI did like you know real breakthrough something it doesn't you know like feels metal even hypothesis it could be like really just this alpha zero moment with go that kind of thing right um yeah this this decade I can I can see it like making a conjecture between two unrelated two two things that people thought was unrelated oh interesting generating a conjecture that's a beautiful conjecture Yeah.\nAnd and actually has a real chance of being correct and and and meaningful and um because that's actually kind of doable I suppose but the word of the data is Yeah.\nNo, that would be truly amazing.\nUm the current models struggle a lot.\nI mean so um a version of this is um I mean the physicists have a dream of getting the AI to discover new new laws of Physics.\nUm you know the the dream is you just feed it all this data.\nOkay.\nand and this is here's a new patent that we didn't see before but it actually even struggle the current state of the art even struggles to discover old laws of Physics um from the data uh or if it does there's a big concern contamination that that it did it only because like somewhere in this training data it some new um you know boils law or whatever ball you're trying to to to reconstruct um part of it is that we don't have the right type of training data for this um yeah so for laws of Physics like we we don't have like a million different universes with a million infant laws of nature.\nUm and um like a lot of what we're missing in math is actually the negative space of so we have published things of things that people have been able to prove um and conjectures that ended up being verified um or maybe counter examples produced but um we don't have data on on things that were proposed and they're kind of a good thing to try but then people quickly realized that it was the wrong conjecture and then they they said oh but we we should actually change um our claim to modify it in this way to actually make it more plausible.\nUm there's this there's a trial and error process which is a real integral part of human mathematical discovery which we don't record cuz it's embarrassing.\nUh we make mistakes and and we only like to publish our wins.\nUm and uh the AI has no access to this data to train on.\nUm I sometimes joke that basically AI has to go through um grad school and actually you know go to grad courses, do the assignments, go to office hours, make mistakes, um get advice on how to correct the mistakes and learn from that.\nLet me uh ask you if I may about uh Grigori Perelman.\nMhm.\nYou mentioned that you try to be careful in your work and not let a problem completely consume you.\njust you really fall in love with the problem and really cannot rest until you solve it.\nBut you also hasted to add that sometimes this approach actually can be very successful.\nAn example you gave is Grigori Perelman who proved the point conjecture and did so by working alone for 7 years with basically little contact with the outside world.\nCan you explain this one millennial prize problem that's been solved point conjecture and maybe speak to the journey that Grigori Perelman's been on.\nAll right.\nSo it's it's a question about curb spaces.\nEarth is a good example.\nSo you can think of a 2D surface in being round could maybe be a Taurus with a hole in it or it can have many holes and there there are many different topologies up priori that that a surface could have.\num even if you assume that it's it's bounded and and uh and smooth and so forth.\nSo we have figured out how to classify surfaces as a first approximation everything is determined by something called the genus how many holes it has.\nSo a sphere has genus 0 a donut has genus one and so forth and one way you can tell these surfaces apart probably the sphere has which is called simply connected if you take any closed loop on the sphere like a big closed little rope you can contract it to a point and while staying on the surface and the sphere has this property but a taurus doesn't if on a taurus and you take a rope that goes around say the the outer diameter taurus there's no way it can't get through the hole there's no way to to contract it to a point so it turns out that the this the sphere is the only surface with this property of contractability up to like continuous deformationations of the sphere.\nSo um things that I want to call topologically um equivalent of the sphere.\nSo point asked the same question in higher dimensions.\nUm so this it becomes hard to visualize because um surface you can think of as embedded in three dimensions but a curved free space we don't have good intuition of 4D space to to to live and and there are also 3D spaces that can't even fit into\n\n\nFour dimensions. You need five or six or or higher. But anyway, uh mathematically, you can still pose this question that if you have a bounded three-dimensional space now, which is also has this simply connected property that every loop can be contracted. Can you turn it into a three-dimensional version of a sphere? And so this is the Poincaré conjecture. Weirdly, in higher dimensions, four and five, it was actually easier. So uh it was solved first in higher dimensions. There's somehow more room to do the deformation. It's easier to to move things around to a sphere. But three was really hard. So people tried many approaches. There's sort of commentary approaches where you chop up the the surface into little triangles or or tetrahedra and you you just try to argue based on how the faces interact each other. Um there were um algebraic approaches. There's there's various algebraic objects like things called the fundamental group that you can attach to these homology and cohomology and and and all these very fancy tools. Um they also didn't quite work. Um but Richard Hamilton's proposed a um partial differential equations approach. So you take um you take so the problem is that you so you have this object which is so secretly is a sphere, but it's given to you in a in a really um in in a weird way. So like like think of a ball that's been kind of crumpled up and twisted and it's not obvious that it's a ball. Um but um like if you if you have some sort of surface which is which is a deformed sphere, you could um you could for example think of it as a surface of a balloon. You could try to inflate it. You you blow it up. Um and naturally as you fill it with air, um the the wrinkles will sort of smooth out and it will turn into um um a nice round sphere. Um unless of course it was a torus or something, in which case it would get stuck at some point, like if you instead of torus, it would there'll be a point in the middle when the inner ring shrinks to zero, you get you get a singularity and you can't blow up any further. You can't flow any further. So he created this flow, which is called Richie flow, which is a way of taking an arbitrary surface or or space and smoothing it out to make it rounder and rounder to make it look like a sphere. And he wanted to show that that either uh this process would give you a sphere or it would create a singularity. Um actually very much like how PDEs either they have global regularity or finite blow, like basically it's almost exactly the same thing. It's all connected. Um and so and and he showed that for two dimensions, two-dimensional surfaces surfaces, um if you started simply connected, no singularities ever formed, um you never ran into trouble and you could flow and it would give you a sphere. And it so he he got a new proof of the two-dimensional result. But by the way, that's a beautiful explanation of reach flow and its application in this context. How difficult is the mathematics here? Like for the 2D case, is it? Yeah, these are quite sophisticated equations on par with the Einstein equations, slightly simpler, but um Um yeah, but but they were considered hard nonlinear equations to solve. Um and there's lots of special tricks in 2D that that that helped. But in 3D, the problem was that uh this equation was actually super critical, the same problems as Navier Stokes. As you blow up, um maybe the curvature could get constraint in finer, smaller, smaller regions and it um it looked more and more nonlinear and things just look worse and worse and there could be all kinds of singularities that showed up. Um some singularities, um like if there's these things called neck pinches where where the uh the surface sort of creates behaves like like a like a a barbell and it it pinches at a point. Some some singularities are simple enough that you can sort of see what to do next. You just make a snip and then you can turn one surface into two and evolve them separately. But there was there was a the prospect that there's some really nasty, like knotted singularities showed up that you you couldn't see how to um resolve in any way that you couldn't do any surgery to. Um so you need to classify all the singularities, like what are all the possible ways that things can go wrong. Um so what Perelman did was first of all, he he made the problem, he turned the problem a super critical problem to a critical problem. Um I said before about how um the invention of the of of energy, the Hamiltonian, like really clarified um Newtonian mechanics. Um uh so he introduced something which is now called Perelman's reduced volume and Perelman's entropy. He introduced new quantities, kind of like energy that look the same at every single scale and turned the problem into a critical one where the nonlinearities actually suddenly looked a lot less scary than they did before. Um and then he had to solve, he still had to analyze the singularities of this critical problem. Uh and that itself was a problem similar to this wake up thing I worked on actually, um so on the on the level of difficulty of that. So he managed to classify all the singularities of this problem and show how to apply surgery to each of these and through that was able to to resolve the Poincaré conjecture. Um quite like a lot of really ambitious steps. Um and like like nothing that a large language model today, for example, could I mean um at best uh I could imagine a model proposing this idea as one of hundreds of different things to try, um but the other 99 would be complete dead ends, but you'd only find out after months of work. He must have had some sense that this was the right track to pursue because you know, I it takes years to get them from A to B. So you've done like you said. Actually, you see even strictly mathematically, but more broadly in terms of the process, he's done similarly difficult things. What what can you infer from the process he was going through because he was doing it alone? What are some low points in a process like that? When you start to like you've mentioned hardship, like uh AI doesn't know when it's failing. What happens to you? You're sitting in your office when you realize the thing you did for the last few days, maybe weeks, weeks. Yeah. Is a failure? Well, for me, I switch to a different problem. Uh so, uh as said, I'm I'm a fox. I'm not a hedgehog. But you legitimately, that is a break that you can take is is to step away and look at a different problem. Yeah, you can modify the problem too. Um I mean um yeah, you can ask some cheat if if there's a specific thing that's blocking you, that this um some bad case keeps showing up that that that for which your tool doesn't work, you can just assume by fiat this this bad case doesn't occur. So you you do some magical thinking um for the but but but strategically okay for the point to see if the rest of the argument goes through. Um if there's multiple problems uh with with with your approach, then maybe you just give up, okay? But if this is the only problem that you know, but everything else checks out, then it's still worth fighting. Um so yeah, you have to do some some sort of forward reconnaissance sometimes to uh you know, and that is sometimes productive to assume like, okay, we'll figure it out. Oh yeah, yeah, eventually. Um Sometimes, actually, it's even productive to make mistakes. So um one of the I mean um there was a project which actually u we won some prizes for actually, four other people. Um we worked on this PD problem again, actually, this blow of regularity type problem. Um and it was considered very hard. Um Sean Bain, who was another Fields medalist, who worked on a special case of this, but he could not solve the general case. Um and we worked on this problem for two months and we found, we thought we solved it. We we had this this cute argument that if everything fit and we were excited, uh we were planning celebrationally um to all get together and have champagne or something. Um and we started writing it up. Um and one of one of us, not me actually, but another co-author said, \"Oh, um in this in this lemma here, we um we have to estimate these 13 terms that that show up in this expansion.\" And we estimate 12 of them, but in our notes, I can't find the estimation of the 13th. Can you can someone supply that? And I said, \"Sure, I'll look at this.\" And actually, yeah, we didn't cover, we completely omitted this term and this term turned out to be worse than the other 12 terms put together. Um in fact, we could not estimate this term. Um and we tried for a few more months and all different permutations and there was always this one thing, one term that we could not control. Um and so like um this was very frustrating. Um but because we had already invested months and months of effort into this already, um we stuck at this. We we tried increasingly desperate things and and crazy things. Um and after two is, we found an approach which was actually somewhat different by quite a bit from our initial um strategy, which did actually didn't generate these problematic terms and and and actually solve the problem. So we we solved a problem after 2 years, but if we hadn't had that initial false dawn of nearly solving a problem, we would have given up by month two or something and and worked on an easier problem. Um yeah, if we had known it would take two years, not sure we would have started the project. Yeah, sometimes actually having the incorrect, you know, it's like Columbus's incorrect version of measurement of the size of the earth. He thought he was going to find a new trade route to India, or at least that was how he sold it in his prospectus. I mean, it could be that he actually secretly knew, but just on the psychological element.\nDo you have like emotional or like self-doubt that just overwhelms you moments like that? You know, because this stuff, it feels like math is is so engrossing that like it can break you when you like invest so much yourself in the problem and then it turns out wrong. You could start to, in a similar way, chess has broken some people. Yeah. Um I I think different mathematicians have different levels of emotional investment in what they do. I mean, I think for some people it's just a job. You know, you you have a problem and if it doesn't work out, you you you go on the next one. Um yeah, so the fact that you can always move on to another problem, um it reduces the emotional connection. I mean, there are cases, you know, so there are certain problems that are what I call back diseases, where where where just latch on to that one problem and they spend years and years thinking about nothing but that one problem and um you know, maybe their career suffers and so forth, but okay, this big win, this will you know, once I once I finish this problem, I will make up for all the years of of of lost opportunity. But that's that's I mean, occasionally, occasionally it works. But I I um I really don't recommend it for people without the the right fortitude. Yeah. So I I've never been super invested in any one problem. Um one thing that helps is that we don't need to call our problems in advance. Uh um well, uh when we do grant proposals, we say we we will study this set of problems. But even then, we don't promise definitely by 5 years I will supply a proof of all these things. You know, or um you promise to make some progress or discover some interesting phenomena. Uh and maybe you don't solve the problem, but you find some related problem that you you can say something new about and that's that's a much more feasible task. But I'm sure for you there's problems like this. You have you have um made so much progress towards the hardest problems in the history of mathematics. So is there is there a problem that just haunts you? It sits there in the dark corners, you know, twin prime conjecture, Riemann hypothesis, global conjecture. Twin prime, that sounds again. So, I mean, the problem is like a Riemann hypothesis, those are so far out of reach. Why do you think so? Yeah. There's no even viable strate, like even if I activate all my all the cheats that I know of in this problem, like it there's just still no way to get me to be um like it's um I think it needs a breakthrough in another area of mathematics to happen first and for someone to recognize that it that would be a useful thing to transport into this problem. So we we should maybe step back for a little bit and just talk about prime numbers. Okay. So they're often referred to as the atoms of mathematics. Can you just speak to the structure that these uh atoms, the natural numbers, have two basic operations attached to them? Addition and multiplication. Um so if you want to generate the natural numbers, you can do one of two things. You can just start with one and add one to itself over and over again and that generates you the natural numbers. So additively, they're very easy to generate, 1, 2, 3, 4, 5. Or you can take the prime, if you want to generate multiplicatively, you can take all the prime numbers, 2, 3, 5, 7, and multiply them all together. Um and together that gives you all the the natural numbers except maybe for one. So there these two separate ways of thinking about the natural numbers from an additive point of view and point of view. Um and separately, they're not so bad. Um so like any question about that only was addition is relatively easy to solve and any question that only was multiplication is easy to solve. Um but what has been frustrating is that you combine the two together. Um and suddenly you get this extremely rich. I mean, we know that there are statements in number theory that are actually as undecidable. There are certain polynomials in some number of variables. You know, is there a solution in the natural numbers and the answer depends on on an undecidable statement, um like like whether um the aims of of mathematics are consistent or not. Um but um yeah, but even this, the simplest problems that combine something multiplicative, such as the primes, with something additive, such as shifting by two, uh separately we understand both of them well, but if you ask when you shift the prime by two, do you can you get a how often can you get another prime? We it's been amazingly hard to relate the two, and we should say that the twin prime conjecture is just that it posits that there are infinitely many pairs of prime numbers that differ by do. Yes. Now the interesting thing is that you have been very successful at pushing forward the field in answering these complicated questions uh of this variety, like you mentioned the Green-Tao theorem. It proves that prime numbers contain arithmetic progressions of any length, right? Which is mind-blowing that you can prove something like that, right? Yeah. So, what we've realized because of this this this type of of research is that there's different patterns have different levels of uh indestructibility. Um so, so what makes the twin prime problem hard is that if you take all the primes in the world, you know, 3, 5, 7, 11, so forth, there are some twins in there. 11 and 13 is a twin prime pair of twin primes and so forth. But you could easily\n\n\nIf you wanted to redact the primes to get rid of to get rid of the um these twins, like the twins, they show up and they're infinitely many of them, but they're actually reasonably sparse.\nUm, not there, there's not, I mean, initially there's quite a few, but once you got to the millions, the trillions, they become rarer and rarer, and you could actually just, you know, if if someone was given access to the database of primes, you just edit out a a few primes here and there, they could make the twin prime conjecture false by just removing like 0.01% of the primes or something, um, just well-chosen to to um, to do this.\nAnd so you could present a censored database of the primes which passes all of the statistical tests of the primes.\nYou know that it it obeys things like the paralle theorem and and other texts about the primes, but doesn't contain any true primes anymore.\nUm, and this is a real obstacle for the twin prime conjecture.\nIt means that any proof strategy to actually find twin primes in the ecto primes must fail when applied to these slightly edited primes.\nAnd so it must be some very um subtle, delicate feature of the primes that you can't just get from like like aggregate statistical analysis.\nOkay.\nSo that's all, yeah, on the other hand, progressions has turned out to be much more robust.\nUm, like you can take the primes and you can eliminate 99% of the primes actually, you know, and you can take take any 99% you want, and uh, it turns out, and another thing we prove is that you still get arithmetic progressions.\nUm, arithmetic progressions are much, you know, they're like cockroaches of arbitrary length.\nYes, that's crazy.\nI mean, so so this for for people who don't know, arithmetic progressions is a sequence of numbers that differ by some fixed amount.\nYeah, but it's again like it's infinite monkey type phenomenon for any fixed length of your set.\nYou don't get arbitrary as progressions.\nYou only get quite short progressions.\nBut you're saying twin prime is not an infinite monkey phenomena.\nI mean, it's a very subtle monkey.\nIt's still an infinite monkey phenomenon.\nYeah.\nIf the primes were really genuinely random, if the primes were generated by monkeys, um, then yes, in fact, the infinite monkey theorem would, Oh, but you're saying that twin prime is it doesn't, you can't use the same tools, like the, it doesn't appear random almost.\nWell, we don't know.\nYeah, we, we, we believe the prior behave like a random set.\nAnd so the reason why we care about the twin prime conjecture is is a test case for whether we can genuinely confidently say with with 0% chance of error that the primes behave like a random set.\nOkay.\nRandom.\nYeah.\nRandom versions of the primes we know contain twins.\nUm, at least with with 100% probability or probably tending to 100% as you go out further and further.\nUm, yeah.\nSo the primes we believe that they're random.\nUm, the reason why arithmetic progressions are indestructible is that regardless of whether you looks random or looks um structured like periodic, in both cases, um, arithmetic regressions appear, but for different reasons.\nUm, and this is basically all the ways in which the there are many proofs of of these sort of arithmetic region epithems, and they're all proven by some sort of dichotomy where your set is either structured or random, and in both cases, you can say something, and then you put the two together.\nUm, but in twin primes, if if the primes are random, then you're happy, you win.\nBut if your primes are structured, they could be structured in in a specific way that eliminates the twin the twins.\nUh, and we can't rule out that one conspiracy, and yet you were able to make a, as I understand, progress on the Kupal version.\nRight.\nYeah.\nSo, um, the one funny thing about conspiracies is that any one conspiracy theory is really hard to disprove, that you know, if if you believe the water is won by lizards, you say, here's some evidence that that it it's not run by lizards, well, that that evidence was planted by the lizards.\nYeah.\nRight.\nYou may have encountered this kind of phenomen.\nYeah.\nSo like, like, um, a pure, like, there's there's almost no way to um, definitively rule out a con, and the same is true in mathematics, that a con is to solely devote devoted to learning twin primes, you know, like it would, you have to also infiltrate other areas of mathematics to sort of, but but like it could be made consistent, at least as far as we know, but there's a weird phenomenon that you can make one um, one conspiracy rule out other conspiracies.\nSo you know, if the if the world is is run by lizardists, it can't also be run by Right.\nRight.\nSo one unreasonable thing is is is hard to dispute, but but more than one, there are there are tools.\nUm, so yeah, so for example, we we know there's infinitely many primes that are um, no two which are um, so there infinite pair of primes which differ by at most um, 246, actually, is is a is the current.\nSo there's like a bound, yes, on the right.\nSo like there's twin primes, this thing called cousin primes that differ by by four.\nUm, there's called sexy primes that differ by six.\nUh, what are sexy primes?\nPrimes that differ by six.\nThe name is much less, the concept is much less exciting than the name suggests.\nGot it.\nUm, so you can make a conspiracy rule out one of these, but like once you have like 50 of them, it turns out that you can't rule out all of them at once.\nIt just it requires too much energy somehow in this conspiracy space.\nHow do you do the bound part?\nHow do you, how do you develop a bound for the difference between the prize that okay, so, um, that there's an infinite number of, so it's ultimately based on what's called the pigeonhole principle.\nUm, so the pigeonhole principle, uh, it's a statement that if you have a number of pigeons and they all have to go into into pigeon holes, and you have more pigeons than pigeon holes, then one of the pigeon holes has to have at least two pigeons in, so there has to be two pigeons that that are close together.\nSo for instance, if you have 100 numbers and they all range from one to a thousand, um, two of them have to be at most 10 apart.\nMhm.\nBecause you can divide up the numbers one to 100 into 100 pigeon holes.\nLet's let's say you have, if you have 101 numbers, 100 one numbers, then two of them have to be distance less than 10 apart because two of them have to belong to the same pigeon hole.\nSo it's a basic um, basic feature of uh, a basic principle in mathematics.\nUm, so it doesn't quite work with the primes directly because the primes get sparer and sparser as you go out, that fewer and fewer numbers are prime.\nBut it turns out that there's a way to assign weights to the to to numbers, like um, so there are numbers that are kind of almost prime, but they're not, they, they don't have no factors at all other than themselves in one, but they have very few factors.\nUm, and it turns out that we understand almost primes a lot better than primes.\nUm, and so for example, it was known for a long time that there were twin almost primes.\nThis has been worked out.\nSo almost primes are something we can't understand.\nSo you can actually restrict attention to a a suitable set of almost primes and uh, whereas the primes are very sparse overall, relative to the almost primes actually are much less sparse.\nThey make um, you can set up a set of almost primes where the primes have density like say 1%.\nUm, and that gives you a shot at proving by applying some sort of original principle that that those pairs of primes are just only 100 100 apart.\nBut in order to with the twin pan conjecture, you need to get the density of primes inside the also size up to up to a first of 50%.\nUm, once you get up to 50%, you will get twin primes.\nBut uh, unfortunately, there are barriers.\nUm, we know that that no matter what kind of good set of almost primes you pick, the density primes can never get above 50%.\nIt's called the parity barrier.\nUm, and I would love to find, yes.\nSo one of my long-term dreams is to find a way to breach that barrier because it would open up not only the trip conjecture, the go back conjecture, and many other problems in number theory are currently blocked because our current techniques would require improve going beyond this theoretical um, parity barriers.\nIt's like it's like pulling past the speed of light.\nYeah.\nSo we just say a twin prime conjecture, one of the biggest problems in the history of mathematics, go by conjecture also, um, they feel like nextdoor neighbors.\nUh, has there been days when you felt you saw the path?\nOh, yeah.\nUm, um, yeah, uh, sometimes you try something and it it works super well.\nUm, you you again, again, the sense of methac smell, uh, we talked about earlier, uh, you learn from experience when things are going too well, because there are certain difficulties that you sort of have to encounter.\nUm, um, I think the way a colleague might put it is that, um, you know, like if if you are on the streets in New York and you put in a blindfold and you put in a car and and, um, after some hours, um, you the blindfold's off and you're in Beijing.\nUm, you know, I mean, that was too easy somehow, like, like there was no ocean being crossed.\nEven if you don't know exactly what how what what was done, you're suspecting that that something wasn't right.\nBut is that still in the back of your head to do you return to these to the prime, do you return to the prime numbers every once in a while to see?\nYeah, when I have nothing better to do, which is less and less tired, which is I get busy with so many things these days, but yeah, when I have free time and I'm not and I'm too frustrated to to work on my sort of real research projects, and I also don't want to do my administrative stuff, I don't want to do some errands for my family, um, I can play with these these things, um, for fun, uh, and usually you get nowhere.\nYeah, you have you have to learn to just say, okay, fine, once again, nothing happened, I I will move on.\nUm, yeah, very occasionally, one of these problems I actually solved, or sometimes as you say, you think you solved it, and then you're euphoric for maybe 15 minutes, and then you think I should check this because this is too easy, too good to be true, and it usually is.\nWhat's your gut say about when these problems would be uh solved, when prime and go back?\nPrime, I think we'll keep getting, keep getting more partial results.\nUm, it does need at least one, this parity barrier is is the biggest remaining obstacle.\nUm, there are simpler versions of the conjecture where we are getting really close.\nUm, so I think we will in 10 years, we will have many more much closer results.\nMay not have the whole thing.\nUm, yeah, so trens is somewhat close, reman hypothesis, I have no, I mean, it has to happen by accident, I think.\nSo the reman hypothesis is a kind of more general conjecture about the distribution of prime numbers, right?\nYeah, it's it's states are sort of viewed multiplicatively, like for questions only involving multiplication, no addition, the primes really do behave as randomly as as you could hope.\nSo there's a phenomenon in probability called square root cancellation that um, you know, like if you want to poll, say America upon on some issue, um, and you you ask one or two voters and you may have sampled a bad sample, and then you get you get a really imprecise um measurement of of the full average, but if you sample more and more people, the accuracy gets better and better, and it actually improves like the square root of the number of people you you sample.\nSo yeah, if you sample a thousand people, you can get like a 2, 3% margin of error.\nSo in the same sense, if you measure the primes in a certain multiplicative sense, there's a certain type of statistic you can measure, and it's called the reman's data function, and it fluctuates up and down, but in some sense, um, as you keep averaging more and more, if you sample and more and more, the fluctuation should go down as if they were random, and there's a very precise way to quantify that, and the reman hypothesis is a very elegant way that captures this, but um, as with many others in mathematics, we have very few tools to show that something really genuinely behaves like really random.\nAnd this is actually not just a little bit random, but it's it's asking that it behaves as random as it actually random set, this this square root cancellation, and we know actually, because of things related to the parity problem, actually, that most of us usual techniques cannot hope to settle this question.\nUm, the proof has to come out of left field.\nUm, yeah, but uh, what that is, yeah, no one has any serious proposal.\nUm, yeah, and and there's there's various ways to sort of, as I said, you can modify the primes a little bit and you can destroy the human hypothesis.\nUm, so like it has to be very delicate.\nYou can't apply something that has huge margins of error.\nIt has to just barely work.\nUm, and like, um, there's like all these pits pitfalls that you have like dodge very adeptly.\nThe prime numbers are just fascinating.\nYeah.\nYeah.\nWhat, what to you is um, most mysterious about the prime numbers?\nSo that's a good question.\nSo like, conjecturally, we have a good model of them.\nI mean, like, as I said, I mean, they have certain patterns, like the primes are usually odd, for instance, but apart from this of obvious patterns, they behave very randomly, and just assuming that they behave, so there's something called the crema random model of the primes that that after a certain point, primes just behave like a random set.\nUm, and there's various slight modifications this model, but this has been a very good model.\nIt matches the numeric.\nIt tells us what to predict.\nLike I can tell you with complete certainty the truth is true.\nUh, the random model gives overwhelming odds it is true.\nI just can't prove it.\nMost of our mathematics is optimized for solving things with patterns in them.\nUm, and the primes have this anti-attern, um, as do almost everything really.\nBut we can't prove that.\nYeah.\nI guess it's not mysterious that the prize be kind of random because there no reason for them to be um, uh, to have any kind of secret pattern, but what is mysterious is what is the mechanism that really forces the randomness to happen.\nUh, and this is just absent.\nAnother incredibly surprisingly difficult problem is the colots's conjecture.\nOh, yes.\nSimple to state, beautiful to visualize in its simplicity, and yet extremely uh, difficult to solve, and yet you have been able to make progress.\nUh, Paular said about the coloss conjecture that mathematics may not be ready for such problems.\nOthers have stated that it is an extraordinarily difficult problem, completely out of reach, this is in 2010, out of reach of present-day mathematics, and yet you have made some progress.\nWhy is it so difficult to make?\nCan you actually even explain what it is?\nOh, yeah.\nSo, it's it's it's a problem that you can explain.\nUm, yeah, it um, it helps with some um, visual aids, but yeah.\n\n\n, so you take any natural number like, say, 13. And you apply the following procedure to it. So, if it's even, you divide it by two, and if it's odd, you multiply by three and add one. So, even numbers get smaller, odd numbers get bigger. So, 13 will become 40 because 13 * 3 is 39. Add one, you get 40. So, it's a simple process for odd numbers and even numbers. They're both very easy operations. And then you put it together. It's still reasonably simple. Um, but then you ask what happens when you iterate it. You take the output that you just got and feed it back in. So, 13 becomes 40. 40 is now even, divide by 2 is 20. 20 is still even, divide by 10, 2, 10, 5, and then 5 * 3 + 1 is 16. And then 8, 4, 2, 1. So, uh, and then from 1 it goes 1, 4, 2, 1, 4, 2, 1. It cycles forever. So this sequence I just described, um, yeah, 13, 40, 20, 10, so these are also called hailstone sequences because there's an oversimplified model of hailstone formation, yeah, which is not actually quite correct, but it's somehow taught to high school students as a first approximation is that, um, like a little nugget of ice gets, gets an ice crystal forms in a cloud, and it, it goes up and down because of the wind, and sometimes when it's cold, it gets, acquires a bit more mass, and maybe it melts a little bit, and this process of going up, down creates this s of partially melted ice, which event hell stone, and eventually it falls out the earth. So the conjecture is that no matter how high you start up, like you take a number which is in the millions or billions, you go this process that that goes up if you're odd and down if you're even, eventually, um, goes down to to earth all the time, no matter where you start with this very simple algorithm, you end up at one, and you might climb for a while, right? Yeah, so yeah, if you plot it, um, these sequences, they look like Brownian motion, um, they look like the stock market, you know, they just go up and down in a, in a seemingly random pattern, and in Usually that's what happens, that that if you plug in a random number, you can actually prove at least initially that it would look like, um, random walk. Um, and that's actually a random walk with a downward drift. Um, it's like if you're always gambling on, on roulette at at the casino with odds slightly weighted against you. So sometimes you you win, sometimes you lose, but over in the long run you lose a bit more than you win. Um, and so normally your wallet will hit, will go to zero, um, if you just keep playing over and over again. So statistically it makes sense. Yes. So, so the result that I I proved, roughly speaking, such that that statistically, like 99% of all inputs would, would drift down to, maybe not all the way to one, but to be much, much smaller than what you started. So, it's it's like if I told you that if you go to a casino, most of the time you end up, if you keep playing for long enough, you end up with a smaller amount in your wallet than when you started. That's kind of like the what the result that I proved. So why is that result, like, can you continue down that thread to prove the full conjecture? Well, the problem is that, um, my I I used arguments from probability theory, um, and there's always this exceptional event. So you know, so in probability we have this, this law of large numbers, um, which tells you things like if you play a casino with a, um, a game at a casino with a losing, um, expectation over time, you are guaranteed or almost surely, with probably probability as close to 100% as you wish, you're guaranteed to lose money. But there's always this exceptional outlier. Like it is mathematically possible that even in when the game is is the odds are not in your favor, you could just keep winning slightly more often than you lose. Very much like how in Navier–Stokes equations there could be, you know, um, most of the time, um, your waves can disperse. There could be just one outlier choice of initial conditions that would lead you to blow up. And there could be one outlier choice of, um, um, special number that they stick in that shoots off infinity while all other numbers crash to earth, uh, crash to one. Um, in fact, um, there's some mathematicians, um, who Alex Kovvich, for instance, who've proposed that, um, that actually, um, these collat, uh, iterations are like the similar automator, um, actually if you look at what they happen on in binary, they do actually look a little bit like, like these Game of Life type patterns. Um, and in an analogy to how the Game of Life can create these, these massive, like self-plicating objects and so forth, possibly you could create some sort of heavier than air flying machine, a number which is actually encoding this machine, which is just whose job it is is to encode is to create a version of itself which, which is larger, heavier than air machine encoded in a number that flies forever. Yeah. So Conway in fact worked on worked on this problem as well. Oh, wow. So Conway, so similar in fact, that was one of inspirations for the Navier–Stokes project that Conway studied generalizations of the collapse problem where instead of multiplying by three and adding one or dividing by two, you have a more complicated branch, but but instead of having two cases, maybe you have 17 cases, and then you go up and down, and he showed that once your iteration gets complicated enough, you can actually encode Turing machines, and you can actually make these problems undecidable and and do things like this. In fact, he invented a programming language for uh, these kind of fractional linear transformations. He called a factrat as a play on forrat. Uh, and he showed that that you could, um, you can program it was too incomplete. You could, you could, uh, um, you could make a program that if if your number you insert in was encoded as a prime, it would sink to zero. It would go down, otherwise it would go up, uh, and things like that. Um, so the general class of problems is is really uh, as complicated as all of Mathematics. Some of the mystery of the cellular automa that we talked about, uh, having a fra mathematical framework to say anything about cellular automa, maybe the same kind of framework is required, yeah, injecture, yeah, if you want to do it not statistically, but you really want 100% of all inputs to to fall to earth, yeah. So what might be feasible is is statistically 99%, you know, go to one, but like everything, yeah, that looks hard. What would you say is out of these within reach famous problems is the hardest problem we have today? Is there a reman hypothesis? We want is up there. Um, P = NP is a good one because like, uh, that's that's a meta problem, like if you solve that in the, um, in the positive sense, that you can find a P = NP algorithm, that potentially this solves a lot of other problems as well, and we should mention some of the conjectures we've been talking about. You know, a lot of stuff is built on top of them. Now there's ripple effects. P = NP has more ripple effects than basically any other, right? If the reman hypothesis is disproven, um, that would be a big mental shock to the number theorist, uh, but it would have follow on effects for, um, cryptography, um, because a lot of cryptography uses number theory, um, it uses number theory constructions involving primes and so forth, and, um, it relies very much on the intuition that number theories are built over many, many years of what operations involving prime behave randomly and what ones don't. Um, and in particular, our encryption, um, methods are designed to turn text with information on it into text which is indistinguishable from, um, from random noise. So, um, and hence we believe to be almost impossible to crack, um, at least mathematically. Um, but, uh, if something has core to our belief as human hypothesis is is wrong, it means that there are, there are actual patterns of the primes that we not aware of, and if there's one, there's probably going to be more. Um, and suddenly a lot of our crypto systems are in doubt. Yeah. But then how do you then say stuff about the the primes? Yeah. That you're going towards the Collatz conjecture again. Um, because if I, I, you want it to be random, right? You want it to be randomly. Yeah. So more broadly, I'm just looking for more tools, more ways to show that that that things are random. How do you prove a conspiracy doesn't happen, right? Is there any chance to you that P equals NP? Is there some Can you imagine a possible universe? It is possible. I mean, there's, there's various uh, scenarios. I mean, there there's one where it is technically possible, but in practice is never actually implementable. The evidence is sort of slightly pushing in favor of no, that we probably is not equal to NP. I mean, it seems like it's one of those cases similar, similar to reman hypothesis that I think the evidence is leaning pretty heavily on the no. Certainly more on the no than on on the yes. The funny thing about P = NP is that we have also a lot more obstructions than we do for almost any other problem. Um, so while there's evidence, we also have a lot of results ruling out many, many types of approaches to the problem. Uh, this is the one thing that the computer scientists have actually been very good at. It's actually saying that that certain approaches cannot work. No go theorems. It could be undecidable. We don't Yeah, we don't know. There's a funny story I read that when you won the Fields Medal, somebody from the internet wrote you and asked, uh, you know, what are you going to do now that you've won this prestigious award? And and then you just quickly, very humbly said that, you know, this a shiny metal is not going to solve any of the problems I'm currently working on. So, I'm just I'm going to keep I'm going to keep working on them. It's just first of all, it's funny to me that you would answer an email in that context, and second of all, it, um, it just shows your humility. But anyway, uh, maybe you could speak to the Fields Medal, but it's another way for me to ask uh about Grigori Perelman. What do you think about him famously declining the Fields Medal and the Millennial Prize, which came with a $1 million of prize money? He stated that I'm not interested in money or fame. The prize is completely irrelevant for me. If the proof is correct, then no other recognition is needed. Yeah. No, he's he's somewhat of an outlier. Um, even among mathematicians who tend to uh, to have uh, somewhat idealistic views. I've never met him. I think I'd be interested to meet him one day, but I I never had the chance. I know people who met him, but he's always had strong views about certain things. Um, you know, I mean, it's it's not like he was completely isolated from the math community. I mean, he would he would give talks and write papers and so forth. Um, but at some point he just decided not to engage with the rest of the community. He was he was disillusioned or something. Um, I don't know. Um, and he decided to to uh, uh, to peace out, uh, and you know, collect mushrooms in St. Petersburg or something. And then that's that's fine. You know, and you can you can do that. Um, I mean that's another sort of flip side. I mean, we are not a lot of our problems that we solve, you know, they some of them do have practical application, and that's that's great, but uh, like if you stop thinking about a problem, you know, so he's he hasn't published since in in this field, but that's fine, there's many, many other people who've done so as well. Um, yeah, so I guess one thing I didn't realize initially with the Fields Medal is that it it sort of makes you part of the establishment. Um, you know, so you know most mathematicians, you there's uh, just career mathematicians, you know, you just focus on publishing the next paper, maybe getting one to promote one one rank, you know, and and starting a few projects, maybe taking some students or something. Yeah. But then suddenly people want your opinion on things, and uh, you have to think a little bit about, you know, things that you might just so foolishly say because, you know, no one's going to listen to you. Uh, it's more important now. Is it constraining to you? Are you able to still have fun and be a rebel and try crazy stuff and well play with ideas? I have a lot less free time than I had previously. Um, I mean, mostly by choice. I mean, I I I obviously I have the option to sort of uh, decline. So I decline a lot of things. I I could decline even more. Um, or I could acquire a reputation for being so unreliable that people don't even ask anymore. Uh, this is I love the different algorithms here. This is great. This is it's always an option. Um, but you know, um, there are things that are like, I mean, so I mean, I I I don't spend as much time as I do as a postto, you know, just just working on one problem at a time or um, fooling around. I still do that a little bit, but yeah, as you advance in your career, somehow the more soft skills, so math somehow frontloads all the technical skills to the early stages of your career. So, um, yeah, so it's as a post office publisher or parish, you're you're incent, you're incentivized to basically focus on on proving very technical themsel, um, as well as proof the theorems. Um, but then as as you get more senior, you have to start, you know, mentoring and and and and giving interviews, uh, and uh, and trying to shape, um, direction of the field both research wise and and you know, uh, sometimes you have to uh, u, you know, do various administrative things, and it's kind of the right social contract because you you need to to work in the trenches to see what can help mathematicians. The other side of the establishment, sort of the the really positive thing is that, um, you get to be a light that's an inspiration to a lot of young mathematicians or young people that are just interested in Mathematics. It's like it's just how the human mind works. This is where I would probably uh, say that I like the Fields Medal, that it does inspire a lot of young people somehow. I don't this just how human brains work. Yeah. At the same time, I also want to give sort of respect to somebody like Grigori Perelman who is critical of awards in his mind. Those are his principles, and any human that's able for their principles to like do the thing that most humans would not be able to do, it's beautiful to see. Some recognition is is necessarily important. Uh, but yeah, it's it's also important to not let these things take over your life. um, and like only be concerned about uh, getting the next big award or whatever. Um, I mean, yeah, so again, you see these people try to only solve like a really big math problems and not work on on on things that are less uh, sexy, if you wish, but but but actually still interesting and instructive as you say, like the way the human mind works, it's um, we understand things better when they're attached\n\n\nto humans, and also,\nuh, if they're attached to a small number\nof humans, like this. This way, our human\nmind is wired. We can comprehend the\nrelationships between, you know, 10 or\n20 people, you know, but once you get\nbeyond like 100 people, like there,\nthere's a limit, I think.\nThere's a name for it, um, beyond which, uh,\nit just becomes the other.\nUm, and so we have, you have to simplify the pole\nmaster, you know, 99.9% of humanity\nbecomes the other, um, and, uh, often these\nmodels are incorrect, and this causes\nall kinds of problems. But, um, so, yeah, so\nto humanize a subject, you know, if you\nidentify a small number of people and\nsay, you know, these\nrepresentative people of the subject,\nrole models, for example, um, that has some\nrole, um, but it can also be, um, uh, yeah,\ntoo much of it can be harmful because\nit's\nI'll be the first to say that my own\ncareer path is not that of a typical\nmathematician. Um, I, the very accelerated\neducation, I skipped a lot of classes. Um,\nI think I was had very fortunate\nmentoring opportunities, um, and I think I\nwas at the right place at the right time.\nJust because someone doesn't have\nmy, um, trajectory, you, it doesn't mean\nthat they can't be good mathematicians.\nI mean, they be good mathematician in\na very different style. Uh, and we need\npeople of a different style. Um, and you\nknow, even if, and sometimes too much\nfocus is given on the person who\ndoes the last step to complete, um, a\nproject in Mathematics or elsewhere.\nThat's, that's really taken, you know,\ncenturies or decades with lots and lots\nof building, lots of previous work. Um,\nbut that's a story that's difficult to\ntell, um, if you're not an expert because,\nyou know, it's easier to just say one\nperson did this one thing. You know, it\nmakes for a much simpler history. I\nthink on the whole, it, um, is a hugely\npositive thing to talk about Steve\nJobs as a representative of Apple, when I\npersonally know, and of course, everybody\nknows the incredible design, the\nincredible engineering teams, just the\nindividual humans on those teams.\nThey're not a team. They're individual\nhumans on a team, and there's a lot of\nbrilliance there. But it's just a nice\nshorthand, like a very, like pi. Yeah.\nSteve Jobs. Yeah. Yeah. As a starting\npoint, you know, as a first\napproximation, that's how you, and then\nread some biographies, and then look into\nmuch deeper. First approximation. Yeah.\nThat's right. Uh, so you mentioned you\nwere a Princeton to, um, Andrew Wiles at\nthat time. He's a professor there. It's\na funny moment how history is just all\ninterconnected. And at that time, he\nannounced that he proved Fermat's Last\nTheorem. What did you think, maybe\nlooking back now with more context about\nthat moment in math history? Yes. So I\nwas a graduate student at the time. I\nmean, I vaguely remember, you know, there\nwas press attention, and, uh, um, we all had\nthe same, um, we had pigeon holes in the\nsame mail room, you know. So we all\npicked our mail, and like suddenly Andrew\nWiles's mailbox exploded to be overflowing.\nThat's a good, that's a good metric.\nYeah. Um, you know, so, yeah, we, we all\ntalked about it at tea and so forth. I\nmean, we, we didn't understand, most of us\ndidn't understand the proof, um, we\nunderstand sort of high-level details. Um,\nfact, there's an ongoing project to\nformalize it in Lean, right? Kevin Buzzard.\nYeah, can, can we take that small tangent?\nIs it, is it how difficult does that, cuz\nas, as I understand the proof for, uh,\nfor Fermat's Last Theorem has like\nsuper complicated objects. Yeah, really\ndifficult to formalize now. Yeah, I guess,\nyeah, you're right, the objects that they\nuse, um, you can define them. Uh, so\nthey've been defined in Lean. Okay. So,\nso just defining what they are can be\ndone. Uh, that's really not trivial, but\nit's been done. But there's a lot of\nreally basic facts about, um, these\nobjects that have taken decades to prove,\nand that they're in all these different\nmath papers, and so lots of these have to\nbe formalized as well. Um, Kevin's, uh,\nKevin Buzzard's goal, actually, he has a\nfive-year grant to formalize Fermat's Last\nTheorem, and his aim is that he doesn't\nthink he will be able to get all the way\ndown to the basic axioms, but he wants to\nformalize it to the point where the only\nthings that he needs to rely on as black\nboxes are things that were known by 1980\nto, um, to number theorists at the time.\nUm, and then some other person, some other\nwork would have to be done to, to, to get\nfrom there. Um, so it's, it's a different\narea of Mathematics than, um, the type of\nMathematics I'm used to. Um, um, in\nanalysis, which is kind of my area, um,\nthe objects we study are kind of much\ncloser to the ground. We study, I study\nthings like prime numbers and and\nfunctions and things that are within\nscope of a high school, um, math education\nto at least, uh, define. Um, yeah, but then\nthere's this very advanced algebraic\nside of number theory where people have\nbeen building structures upon structures\nfor quite a while. Um, and it's, it's a\nvery sturdy structure. It's, it's been,\nit's been very, um, at the base at least,\nis extremely well developed in the\ntextbooks and so forth. But, um, um, it\ndoes get to the point where, um, if you, if\nyou haven't taken these years of study,\nand you want to ask about what, what is\ngoing on at, um, like level six of of this\ntower, you have to spend quite a bit of\ntime before they can even get to the\npoint where you can see, you see\nsomething you recognize. What, uh,\ninspires you about his journey that we\nsimilar as we talked about seven years\nmostly working in secret? Yeah. Uh, that\nis a romantic, uh, Yeah. So it kind of\nfits with sort of the romantic image\nI think people have of mathematicians to\nthe extent they think of them at all as\nthese kind of eccentric, uh, you know,\nwizards or something. Um, so that\ncertainly kind of, uh, uh, accentuated that\nperspective, you know. I mean, it is a\ngreat achievement. His style of solving\nproblems is so different from my own, um,\nbut which, but which is great. I mean, we,\nwe need people. Speak to it like what, uh,\nin terms of like the, you like the\ncollaborative, I like moving on from a\nproblem if it's giving too much\neverybody. Um, got it. But you need the\npeople who have the tenacity and the\nfearlessness. Um, you, I've collaborated\nwith with people like that where, where I\nwant to give up, uh, cuz the first\napproach that we tried didn't work, and\nthe second one didn't approach, but\nthey're convinced, and they have the\nthird, fourth, and the fifth approach\nworks. Um, and I have to eat my words.\nOkay. I didn't think this was going to\nwork, but yes, you were right all along.\nAnd we should say for people who don't\nknow, not only are you known for the\nbrilliance of your work, but the\nincredible productivity, just the number\nof papers, which are all of very high\nquality. So there's something to be said\nabout being able to jump from topic to\ntopic. Yeah, it works for me. Yeah, I\nmean, there are also people who are very\nproductive, and they focus very deeply on\nYeah. I think everyone has to find their\nown workflow. Um, like one thing which is\na shame in Mathematics is that we have\nMathematics, there's sort of a one size\nfits all approach to teach teaching\nMathematics, um, and you know, so we have a\ncertain curriculum and so forth. I mean,\nyou know, maybe like if you do math\ncompetitions or something, you get a\nslightly different experience, but, um, I\nthink many people, um, they don't find\ntheir, their native math language, uh,\nuntil very late, or usually too late, so\nthey, they stop doing Mathematics, and\nthey have a bad experience with a\nteacher who's trying to teach them one\nway to do Mathematics. They don't like\nit. Um, my theory is that, um, humans don't\ncome, evolution has not given us a math\ncenter of a brain directly. We have a\nvision center and a language center and\nsome other centers, um, which have\nevolution has honed, but we, it doesn't, we\ndon't have innate sense of Mathematics.\nUm, but our other centers are\nsophisticated enough that different\npeople, we, we, we can repurpose other\nareas of our brain to do Mathematics. So\nsome people have figured out how to use\nthe visual center to do Mathematics, and\nso they think very visually when they do\nMathematics. Some people have repurposed\ntheir, their language center, and they\nthink very symbolically. Um, you know,\num, some people, like if they are very\ncompetitive, and they, they like gaming,\nthere's a type, there's this part of your\nbrain that's very good at, at, at, uh, at\nsolving puzzles and games, and, and, and\nthat can be repurposed. But like when I\ntalked about the mathematicians, you\nknow, they don't quite think, they, I can\ntell that they're using some different\nstyles of of thinking than I am. I mean,\nnot, not disjoint, but they, they may\nprefer visual. Like I, I don't actually\nprefer visual so much. I need lots of\nvisual aids myself. Um, you know,\nMathematics provides a common language.\nSo, we can still talk to each other even\nif we are thinking in in different ways.\nBut you can tell there's a different\nset of subsystems being used in the\nthinking process, like they take\ndifferent paths. They're very quick at\nthings that I struggle with, and vice\nversa. Um, and yet they still get to the\nsame goal. Um, that's beautiful. And\nyeah, but I mean, the way we educate,\nunless you have like a personalized\ntutor or something. I mean, education\nsort of just by natural scale has to be\nmass-produced, you know, you have to teach\nto 30 kids, and you know, if they have 30\ndifferent styles, you can't, you can't\nteach 30 different ways. On that topic,\nwhat advice would you give to students,\nuh, young students who are struggling\nwith math and but are interested in it\nand would like to get better? Is there\nsomething in this, Yeah. um, in this\ncomplicated educational context, what,\nwhat would you, Yeah, it's a tricky\nproblem. One nice thing is that there\nare now lots of sources for mathematical\nenrichment outside the classroom. Um, so\nin, in, in my day, there already, there are\nmath competitions. Um, and you know, there\nalso like popular math books in the\nlibrary. Um, yeah, but, but now you have,\nyou know, YouTube, uh, there, there are\nforums just devoted to solving, you know,\nmath puzzles, and, um, and math shows up in\nother places, you know, like, um, for\nexample, there, there are hobbyists who\nplay poker for fun, uh, and, um, they, they\nyou know, they for very specific reasons\nare interested in very specific\nprobability questions, um, and, and they\nactually know, there's a community of\namateur proists in in in poker, um, in\nchess, in baseball. I mean, there's,\nthere's, there's, uh, yeah, um, there's math\nall over the place. Um, and I'm, I'm, I'm\nhoping actually with, with these new sort\nof tools for Lean and so forth, that\nactually we can incorporate the broader\npublic into math research projects, um,\nlike this is almost, is, doesn't happen at\nall currently. So in the sciences,\nthere's some scope for citizen science,\nlike astronomers, uh, they amateurs who\ndiscover comets, and there's biologists,\nthere people who could identify\nbutterflies and so forth. Um, and in\nMathematics\nwhere, um, amateur mathematicians can like\ndiscover new primes and so forth, but, but\npreviously, because we have to verify\nevery single contribution, um, like most\nmathematical research projects, it would\nnot help to have input from the general\npublic. In fact, it would, it would just\nbe be time-consuming because just error\nchecking and everything. Um, but you know,\none thing about these formalization\nprojects is that they are bringing\ntogether more, bringing in more people.\nSo I'm sure there are high school\nstudents who've already contributed to\nsome of these, these formalizing projects\nwho contributed into math lib. Um, you\nknow, you don't need to be a PhD holder\nto just work on one atomic thing.\nThere's something about the\nformalization here that also at as a\nvery first step opens it up to the\nprogramming community too. The people\nwho are already comfortable with\nprogramming. It seems like programming\nis somehow, maybe just the feeling, but it\nfeels more accessible to folks than\nmath. Math is seen as this like extreme,\nespecially modern Mathematics, seen as\nthis extremely difficult to enter area,\nand programming is not. So that could be\njust an entry point. You can execute\ncode, and you can get results. You know,\nyou can print a hello world pretty\nquickly. Um, you know, like if, uh, if\nprogramming was taught as almost\nentirely theoretical subject where you\njust taught the the computer science,\nthe theory of functions and and and\nroutines and so forth, and and outside of\nsome, some very specialized homework\nassignments, you're not actually program\nlike on the weekend for fun. Yeah. Or\nYeah. They would be as considered as\nhard as math. Mhm. Um, Yeah. Yeah. So, as\nI said, you know, there are communities\nof non- mathematicians where they're\ndeploying math for some very specific\npurpose, you know, like, like optimizing\ntheir poker game, and, and for them, then\nmath becomes fun for them. Uh, what\nadvice would you give in general to\nyoung people, how to pick a career, how\nto find themselves? Like that's a tough,\ntough, tough question. Yeah. So, um,\nthere's a lot less certainty now in the\nworld, you know. I mean, I, there was this\nperiod after the war where, uh, at least\nin the West, you know, if you came from a\ngood demographic, you, uh, you know, like\nyou, there was a very stable path to to a\ngood career, you go to college, you get an\neducation, you pick one profession, and\nyou stick to it, becoming much more a\nthing of the past. So I think you just\nhave to be adaptable and flexible. I\nthink people have to get skills that are\ntransferable, you know, like, like learning\none specific programming language or one\nspecific subject of Mathematics or\nsomething. It's, it's, it's that itself is\nnot a super transferable skill, but sort\nof knowing how to, um, reason with with\nabstract concepts or how to problem\nsolve when things go wrong. So these are\nthings which I think we will still need\neven as our tools get, get better, and\nyou know, you, you would be working with AI\nsport and so forth. But actually, you're\nan interesting case study. I mean, you're\nlike a\none of the great living mathematicians,\nright? And then you had a way of doing\nthings, and then all of a sudden, you\nstart learning, I mean, first of all, you\nkept learning new fields, but you learn\nLean. That's not, that's a non-trivial\nthing to learn. Like that's a, that's a,\nfor a lot of people, that's an extremely\nuncomfortable leap to take, right? Yeah,\nmathematicians, um, first of all, I've\nalways been interested in new ways to do\nMathematics. I, I, I feel like a lot of the\nways we do things right now are\ninefficient. Um, I, I, I spend, me, my\ncolleagues, we spend a lot of time doing\nvery routine computations or doing\nthings that other mathematicians would\ninstantly know how to do, and we don't\nknow how to do them. Uh, and why can't we\nsearch and get a quick response? And so\nthat's why I've always been interested\nin exploring new workflows.\nAbout four or five years ago, I was on a\ncommittee where we had to ask for ideas\nfor interesting workshops to run at a\nmath institute. And at the time, Peter\nSchulze had just formalized one\n\n\nOf his, um, new theorems.\nAnd, um, there are some other developments in computer-assisted proof that look quite interesting.\nAnd I said, \"Oh, we should, we should, uh, um, we should run a workshop on this.\nThis be a good idea.\"\nUm, and then I was a bit too enthusiastic about this idea.\nSo I, I got volunte.\nUm, so I did with a bunch of other people, Kevin Bisard and Jordan Ellenberg and, and a bunch of other people.\nUm, and it was, it was a, a nice success.\nWe brought together a bunch of mathematicians and computer scientists and other people, and, and we got up to speed and state, um, and it was really interesting, um, developments that, that most mathematicians didn't know was going on.\nUm, that lots of nice proofs of concept, you know, just sort of hints of, of what was going to happen.\nThis was just before chat GBD, but there was even then there was one talk about language models and the potential, um, capability of those in the future.\nSo that got me excited about the subject.\nSo I started giving talks, um, about this is something we should, more of us should start looking at, um, now that I'd arranged to run this conference, and then chat GPT came out, and like, suddenly AI was everywhere.\nAnd so, uh, I got interviewed a lot, um, about, about this topic, um, and in particular, um, the interaction between AI and formal proof assistance, and I said, yeah, they should be combined.\nThis, this is, this is, um, this perfect synergy to happen here.\nAnd at some point, I realized that I have to actually do not just talk the talk, but walk the book, you know, like, you know, I don't work in machine learning, I, and I don't work in proof formalization, and there's a limit to how much I can just rely on authority and saying, you know, I, I'm a, I'm a warn mathematician, just trust me, you know, when I say that this is going to change athletics, and I'm not doing it any, when I don't do any of it myself.\nSo I felt like I had to actually, uh, uh, justify it.\nYeah, a lot of what I get into, actually, I don't quite see in advance as how much time I'm going to spend on it, and it's only after I'm sort of waste deep in, in, in, in, in a project that I, I, I realized by that point I'm committed.\nWell, that's deeply admirable that you're willing to go into the fray, be in some small way a beginner, right?\nOr have some of the sort of challenges that a beginner would, right?\nNew concepts, new ways of thinking also, you know, sucking at a thing that others, I think, I think in that talk, you could be a Fields Medal winning mathematician and undergrad knows something better than you.\nYeah.\nUm, I think mathematics inherently, I mean, mathematics is so huge these days that nobody knows all of modern mathematics.\nUm, and inevitably we make mistakes, and, um, you know, uh, you can't cover up your mistakes with just sort of bravado and, and, uh, I mean, because people will ask for your proofs, and if you don't have the proofs, you don't have the proofs.\nUm, I don't love math.\nYeah.\nSo it does keep us honest.\nI mean, not, not, I mean, you can still, it's not a perfect, uh, panacea, but I think, uh, we do have more of a culture of admitting error than because we're forced to all the time.\nBig ridiculous question.\nI'm sorry for it once again.\nWho is the greatest mathematician of all time?\nMaybe one who's no longer with us.\nUh, who are the candidates?\nZyler, Gaus, Newton, Raman, Hilbert.\nSo, first of all, as, as mentioned before, like, there's, there's some time dependent on the day.\nYeah.\nLike, like if, if you, if you plot cumulatively over time, for example, Uklid, like, like sort of like is, is one of the leading contenders.\nUm, and then maybe some unnamed anonymous mathematicians before that, um, you know, whoever came up with the concept of, of numbers, you know, you know, um, do mathematicians today still feel the impact of Hilbert?\nJust, oh yeah, directly of everything that's happened in the 20th century.\nYeah, Hilbert spaces, we have lots of things that are named after him, of course, just the arrangement of mathematics and just the introduction of certain concepts.\nI mean, 23 problems have been extremely influential.\nThere's some strange power to the declaring ing which problems are hard to solve.\nThe statement of the open problems.\nYeah.\nI mean, this is bystander effect in everywhere.\nLike if no one says you should do X, everyone just moves around waiting for somebody else to, to, uh, to do something, and, and like nothing gets done.\nUm, so, and, and like it, like it's one, one thing that actually, uh, you have to teach undergraduates in mathematics is that you should always try something.\nSo, um, you see a lot of paralysis, um, in an undergraduate trying a math problem.\nIf they recognize that there's a certain technique that that can be applied, they will try it, but there are problems for which they see none of their standard techniques obviously applies, and the common reaction is then just paralysis, I don't know what to do, or, um, or I think there's a quote from the Simpsons, I've tried nothing and I'm all out of ideas.\nUm, so, you know, like the next step then is to try anything, like, no matter how stupid, um, and in fact, almost as stupid of the better, um, which you know, and one a technique which is almost guaranteed to fail, but the way it fails is going to be instructive, um, like it fails because you, you, you're not at all taking into account this hypothesis, oh, this hypothesis must be useful, that's a clue.\nI, I think you also suggested somewhere this, this fascinating approach, which really stuck with me, I started using it and really works.\nI think you said it's called structured procrastination.\nNo, yes, it's when you really don't want to do a thing.\nDo you imagine a thing you don't want to do more?\nYes.\nThat's worse than that.\nAnd then in that way, you procrastinate by not doing the thing that's worse.\nYeah.\nYeah.\nIt's a nice, it's a nice hack.\nIt actually works.\nYeah.\nYeah.\nThis, um, I mean, with anything, like, you know, I mean, like you, um, psychology is really important, like you, you talk to athletes, like marathon runners and so forth, and, and they talk about what's the most important thing, is it their training regimen or the diet and so forth.\nActually, so much of it is actually psychology.\nUm, you know, just tricking yourself to, to think that the problem is feasible, um, so that you can, you're motivated to do it.\nIs there something our human mind will never be able to comprehend?\nWell, I sort of, as a mathematician, I mean, you, there must be some suffer that you can't understand.\nThat was the first thing that came to mind.\nSo that, but even broadly, is there, are we li, is there something about our mind that's we're going to be limited even with the help of mathematics?\nWell, okay, I mean, like, how much augmentation are you willing, like, like, for example, if, if I didn't even have pen and paper, um, like if I had no technology whatsoever, okay, so I'm not allowed blackboard, pen and paper, right?\nYou're already much more limited than you would be incredibly limited, even language, the English language is a technology.\nIt's a, it's one that's been very internalized.\nSo, you're right.\nThere really the, the, the formulation of the problem is incorrect because there really is no longer a just a solo human.\nWe're already augmented in extremely complicated, intricate ways, right?\nYeah.\nYeah.\nWe're already like a collective intelligence.\nYes.\nYeah.\nYes.\nSo, humanity plural has much more intelligence in principle on it good days than than the individual humans put together.\nIt can also have less.\nOkay.\nBut, uh, um, yeah, so yeah, mathemat, mathematical community plural is, is incredibly super intelligent, uh, entity, um, that, uh, no single human mathematician can, can come closer to, to replicating.\nYou see it a little bit on these like question analysis sites.\nUm, so this math overflow, which is the math version of stack overflow, and like sometimes you get like this very quick responses to very difficult questions from the community.\nUm, and it's, it's, it's a pleasure to watch actually as a, as an expert.\nI'm a fan spectator of that, uh, of that site, just seeing the brilliance of the different people, the, um, the depth of knowledge that people have and the, the willingness to engage in the in the rigor and the nuance of the particular question.\nIt's pretty cool to watch.\nIt's fun.\nIt's almost like just fun to watch.\nUh, what gives you hope about this whole thing we have going on, human civilization?\nI think, uh, yeah.\nUm, the younger generation is always like, like really creative and enthusiastic and and inventive.\nUm, it's a pleasure working with, with, with, uh, with young students.\nUm, you know, the, uh, the progress of science tells us that the problems that used to be really difficult can become extremely, you know, can become like trivial to solve.\nYou know, I mean, like it was like navigation, you know, just just knowing where you were on the planet was this horrendous problem.\nPeople died, um, you know, or or lost fortunes because they couldn't navigate, you know, and we have devices in our pockets that do this automatically for us, I guess, a completely solved problem, you know.\nSo things that are seem unfeasible for us now could be maybe just sort of homework exercises for.\nYeah.\nBut one of the things I find really sad about the finitness of life is that I won't get to see all the cool things we create as a civilization.\nYou know that, cuz in the next 100 years, 200 years, just imagine showing, showing up in 200 years.\nYeah.\nWell, already plenty has happened, you know, like if, if you could go back in time and and talk to your teenage self or something, you know what I mean?\nYeah.\nAnd just the internet and and our AI.\nI mean, again, they, they've been in, they're beginning to be internalized and say, yeah, of course, an AI can understand our voice and and give reasonable, you know, slightly incorrect answers to to any question, but yeah, this was mind-blowing even 2 years ago, and in the moment, it's hilarious to watch on the internet and so on, the the drama, uh, people take everything for granted very quickly, and then they, we humans seem to entertain ourselves with drama out of anything that's created.\nSomebody needs to take one opinion, another person needs to take an opposite opinion, argue with each other about it.\nBut when you look at the arc of things, I mean, just even in progress of robotics.\nYeah.\nJust to take a step back and be like, \"Wow, this is beautiful that we humans are able to create this.\"\nYeah.\nWhen the infrastructure and the culture is is healthy, you know, the community of humans can be so much more intelligent and mature and and and rational than the individuals within it.\nWell, one place I can always count on rationality is the comment section of your blog, which I'm a big fan of.\nThere's a lot of really smart people there.\nAnd thank you, of course, for, uh, for putting those ideas out on the blog, and it's I can't tell you how, uh, honored I am that you would spend your time with me today.\nI was looking forward this for a long time, Terry.\nI'm a huge fan.\nUm, you inspire me.\nYou inspire millions of people.\nThank you so much for talking.\nOh, thank you.\nIt was a pleasure.\nThanks for listening to this conversation with Terence Tao.\nTo support this podcast, please check out our sponsors in the description or at lexfridman.com/sponsors.\nAnd now, let me leave you with some words from Galileo Galile.\nMathematics is a language with which God has written the universe.\nThank you for listening and hope to see you next time.\n"
}