{
  "episodeId": "QDz4htGbOC4",
  "channelSlug": "@ailabs-393",
  "title": "This just changed the way that MCPs are built (Postman Builder)",
  "publishedAt": "2025-05-29T20:18:26.000Z",
  "rawLines": [
    {
      "lang": "en",
      "text": "So, in one of my previous videos, I said",
      "offset": 0.16,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "that front end is dead. And to explain",
      "offset": 2.48,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "what I meant, I'm going to talk to you",
      "offset": 4.48,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "about APIs. Every app you build is",
      "offset": 6.16,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "controlled by its internal APIs. And",
      "offset": 8.4,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "when it needs to fetch data from",
      "offset": 10.559,
      "duration": 4.481
    },
    {
      "lang": "en",
      "text": "external sources, it uses external APIs.",
      "offset": 12.16,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "These internal APIs can actually be",
      "offset": 15.04,
      "duration": 3.999
    },
    {
      "lang": "en",
      "text": "hosted on MCP servers, which is a",
      "offset": 16.96,
      "duration": 4.319
    },
    {
      "lang": "en",
      "text": "protocol that allows AI agents powered",
      "offset": 19.039,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "by large language models to control",
      "offset": 21.279,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "those APIs. And if they are able to",
      "offset": 23.279,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "control the APIs, they can effectively",
      "offset": 25.199,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "control the entire application. This",
      "offset": 27.359,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "means you no longer need a traditional",
      "offset": 29.279,
      "duration": 3.601
    },
    {
      "lang": "en",
      "text": "front end to manage everything because",
      "offset": 31.119,
      "duration": 4.001
    },
    {
      "lang": "en",
      "text": "AI models can now operate the whole app",
      "offset": 32.88,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "on your behalf. You can use the fast API",
      "offset": 35.12,
      "duration": 5.279
    },
    {
      "lang": "en",
      "text": "MCP library to set this up. These MCPS",
      "offset": 37.52,
      "duration": 5.199
    },
    {
      "lang": "en",
      "text": "can now be integrated directly into AI",
      "offset": 40.399,
      "duration": 4.241
    },
    {
      "lang": "en",
      "text": "agents which you can configure inside",
      "offset": 42.719,
      "duration": 4.081
    },
    {
      "lang": "en",
      "text": "your applications. I demonstrated a",
      "offset": 44.64,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "library called MCPUs where you simply",
      "offset": 46.8,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "plug in the MCP and the library",
      "offset": 49.44,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "automatically gives you an agent. In",
      "offset": 51.52,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "this way, you are essentially",
      "offset": 53.68,
      "duration": 3.44
    },
    {
      "lang": "en",
      "text": "programming large language models to",
      "offset": 55.12,
      "duration": 3.759
    },
    {
      "lang": "en",
      "text": "control your application using these",
      "offset": 57.12,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "MCPs. Now, when it comes to external",
      "offset": 58.879,
      "duration": 4.641
    },
    {
      "lang": "en",
      "text": "APIs, if you are developing applications",
      "offset": 61.28,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "that rely heavily on outside data, you",
      "offset": 63.52,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "are still going to need them. For",
      "offset": 65.92,
      "duration": 3.199
    },
    {
      "lang": "en",
      "text": "example, if your app wants to use",
      "offset": 67.2,
      "duration": 4.239
    },
    {
      "lang": "en",
      "text": "location or navigation data from Google",
      "offset": 69.119,
      "duration": 4.481
    },
    {
      "lang": "en",
      "text": "Maps, then it will need access to those",
      "offset": 71.439,
      "duration": 4.561
    },
    {
      "lang": "en",
      "text": "external APIs. We are now moving toward",
      "offset": 73.6,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "AIdriven applications. So, the question",
      "offset": 76,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "becomes, how would your AI agent access",
      "offset": 78.24,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "that data? Today I want to show you a",
      "offset": 80.64,
      "duration": 3.839
    },
    {
      "lang": "en",
      "text": "really simple way to make that happen.",
      "offset": 82.72,
      "duration": 3.759
    },
    {
      "lang": "en",
      "text": "I'll be introducing you to Postman's new",
      "offset": 84.479,
      "duration": 4.401
    },
    {
      "lang": "en",
      "text": "MCP generator. Postman, as you might",
      "offset": 86.479,
      "duration": 4.481
    },
    {
      "lang": "en",
      "text": "know, is a platform used for testing",
      "offset": 88.88,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "APIs, but now they have introduced a",
      "offset": 90.96,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "powerful tool that lets you generate an",
      "offset": 93.2,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "MCP server for any API you want. What's",
      "offset": 95.2,
      "duration": 4.879
    },
    {
      "lang": "en",
      "text": "even better is that the server is hosted",
      "offset": 98,
      "duration": 4.479
    },
    {
      "lang": "en",
      "text": "locally, not on some remote platform. So",
      "offset": 100.079,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "any application you build can include",
      "offset": 102.479,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "the MCP server right within it. Let's",
      "offset": 104.159,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "search for Google Maps. Just like I",
      "offset": 106.399,
      "duration": 3.281
    },
    {
      "lang": "en",
      "text": "mentioned earlier, you'll see there are",
      "offset": 108.159,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "multiple API documentation sets",
      "offset": 109.68,
      "duration": 4.079
    },
    {
      "lang": "en",
      "text": "available for it. If we open up the core",
      "offset": 111.759,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "APIs, we can see a wide variety of data",
      "offset": 113.759,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "ready for use. For example, the air",
      "offset": 116.399,
      "duration": 4.561
    },
    {
      "lang": "en",
      "text": "quality API contains a huge amount of",
      "offset": 118.399,
      "duration": 4.641
    },
    {
      "lang": "en",
      "text": "information that you can access and use",
      "offset": 120.96,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "freely. The roads API is another great",
      "offset": 123.04,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "example. You can pull whatever data you",
      "offset": 125.28,
      "duration": 3.52
    },
    {
      "lang": "en",
      "text": "need and implement it in your",
      "offset": 127.28,
      "duration": 3.44
    },
    {
      "lang": "en",
      "text": "application without much complexity.",
      "offset": 128.8,
      "duration": 3.439
    },
    {
      "lang": "en",
      "text": "Postman has provided a very",
      "offset": 130.72,
      "duration": 2.96
    },
    {
      "lang": "en",
      "text": "straightforward method for setting this",
      "offset": 132.239,
      "duration": 3.201
    },
    {
      "lang": "en",
      "text": "up. In this video, I'm going to show you",
      "offset": 133.68,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "how to generate an MCP server for any",
      "offset": 135.44,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "API you choose. The API documentation",
      "offset": 138,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "available is vast and detailed. You'll",
      "offset": 140.48,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "find documentation for platforms like",
      "offset": 142.64,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "Figma, X, and OpenAI, as well as",
      "offset": 144.64,
      "duration": 4.959
    },
    {
      "lang": "en",
      "text": "financial APIs like those for Mastercard",
      "offset": 147.2,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "and Stripe. It's an incredibly",
      "offset": 149.599,
      "duration": 3.28
    },
    {
      "lang": "en",
      "text": "wide-ranging collection. And the best",
      "offset": 151.12,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "part is you can generate MCP servers for",
      "offset": 152.879,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "any of them. Even if you do not want to",
      "offset": 155.2,
      "duration": 3.119
    },
    {
      "lang": "en",
      "text": "integrate them into your own",
      "offset": 156.959,
      "duration": 3.201
    },
    {
      "lang": "en",
      "text": "applications, you can still use them",
      "offset": 158.319,
      "duration": 3.761
    },
    {
      "lang": "en",
      "text": "inside Claw Desktop where they can be",
      "offset": 160.16,
      "duration": 4.719
    },
    {
      "lang": "en",
      "text": "operated however you see fit. So let me",
      "offset": 162.08,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "guide you through the entire process of",
      "offset": 164.879,
      "duration": 4.321
    },
    {
      "lang": "en",
      "text": "what you actually need to do. First, for",
      "offset": 166.8,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "any API you want to convert into an MCP",
      "offset": 169.2,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "server, you simply begin by searching",
      "offset": 171.84,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "for it. If you have learned programming",
      "offset": 173.92,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "the traditional way, you will probably",
      "offset": 175.76,
      "duration": 3.839
    },
    {
      "lang": "en",
      "text": "remember that one of the very first",
      "offset": 177.76,
      "duration": 3.839
    },
    {
      "lang": "en",
      "text": "projects many of us completed while",
      "offset": 179.599,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "learning to work with APIs was a simple",
      "offset": 181.599,
      "duration": 4.961
    },
    {
      "lang": "en",
      "text": "weather map application. In my own case,",
      "offset": 184.159,
      "duration": 5.121
    },
    {
      "lang": "en",
      "text": "I used the open weather map API as part",
      "offset": 186.56,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "of my learning process. Right here, you",
      "offset": 189.28,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "can see several different types of APIs",
      "offset": 191.36,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "available for use. This section is",
      "offset": 193.36,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "focused on documentation, but the",
      "offset": 195.28,
      "duration": 3.44
    },
    {
      "lang": "en",
      "text": "important thing is that all of these",
      "offset": 197.12,
      "duration": 3.36
    },
    {
      "lang": "en",
      "text": "APIs are going to be converted into",
      "offset": 198.72,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "tools for your MCP server. If we go",
      "offset": 200.48,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "ahead and select all of them, each of",
      "offset": 202.8,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "the three requests will be turned into",
      "offset": 204.72,
      "duration": 4.239
    },
    {
      "lang": "en",
      "text": "individual tools that belong to a single",
      "offset": 206.56,
      "duration": 4.959
    },
    {
      "lang": "en",
      "text": "MCP server. In our case, that would be",
      "offset": 208.959,
      "duration": 4.881
    },
    {
      "lang": "en",
      "text": "the open weather MCP server, which will",
      "offset": 211.519,
      "duration": 4.321
    },
    {
      "lang": "en",
      "text": "now include these three tools. You can",
      "offset": 213.84,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "see that it shows three requests have",
      "offset": 215.84,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "been selected. The next step is to add",
      "offset": 217.76,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "them. And once that is done, you will",
      "offset": 219.76,
      "duration": 3.839
    },
    {
      "lang": "en",
      "text": "see that the requests have been added.",
      "offset": 221.68,
      "duration": 3.36
    },
    {
      "lang": "en",
      "text": "Now, we just need to click on the",
      "offset": 223.599,
      "duration": 3.841
    },
    {
      "lang": "en",
      "text": "generate button. After about 10 to 30",
      "offset": 225.04,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "seconds, the MCP server will be fully",
      "offset": 227.44,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "generated. Once it is ready, you will",
      "offset": 229.92,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "notice that the MCP server has been",
      "offset": 231.92,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "created, but it is not hosted on any",
      "offset": 233.92,
      "duration": 4.239
    },
    {
      "lang": "en",
      "text": "remote server. This MCP server is",
      "offset": 236.08,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "designed to run locally on your own",
      "offset": 238.159,
      "duration": 3.681
    },
    {
      "lang": "en",
      "text": "machine. To make that possible, they",
      "offset": 240,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "provide a zip file that contains the",
      "offset": 241.84,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "complete codebase for the MCP server",
      "offset": 243.76,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "which you can run locally. All you need",
      "offset": 246.08,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "to do at this point is download the zip",
      "offset": 247.92,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "file. You can see that the zip file has",
      "offset": 249.84,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "been downloaded. Now, you are going to",
      "offset": 252.08,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "extract the zip file and place it into",
      "offset": 253.68,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "any folder you prefer. I am going to",
      "offset": 255.76,
      "duration": 3.599
    },
    {
      "lang": "en",
      "text": "move it into this folder. Since I",
      "offset": 257.6,
      "duration": 3.52
    },
    {
      "lang": "en",
      "text": "already had the file there, I will just",
      "offset": 259.359,
      "duration": 3.521
    },
    {
      "lang": "en",
      "text": "replace it. Now the folder has been",
      "offset": 261.12,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "successfully moved and I am going to",
      "offset": 262.88,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "open my terminal. As you can see, I am",
      "offset": 264.72,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "already inside my developer folder. I",
      "offset": 266.96,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "will navigate into the folder I just",
      "offset": 269.12,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "copied which is named Postman MCP",
      "offset": 270.8,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "server. Inside this MCP server folder, I",
      "offset": 273.28,
      "duration": 5.199
    },
    {
      "lang": "en",
      "text": "will run the command npm install which",
      "offset": 276.24,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "will install all the necessary",
      "offset": 278.479,
      "duration": 3.28
    },
    {
      "lang": "en",
      "text": "dependencies. If this part is",
      "offset": 280,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "unfamiliar, there is actually a full",
      "offset": 281.759,
      "duration": 4.081
    },
    {
      "lang": "en",
      "text": "guide that explains everything I am",
      "offset": 283.84,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "doing right now. As you can see, npm",
      "offset": 285.84,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "install has been executed and once it",
      "offset": 288.08,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "completes, we are ready to run the",
      "offset": 290.32,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "server locally. All the dependencies",
      "offset": 292.08,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "have now been installed. The next",
      "offset": 294.08,
      "duration": 5.08
    },
    {
      "lang": "en",
      "text": "command we need to run is node mcp",
      "offset": 295.84,
      "duration": 5.84
    },
    {
      "lang": "en",
      "text": "server.js. This is a javascript file",
      "offset": 299.16,
      "duration": 4.92
    },
    {
      "lang": "en",
      "text": "that will start our mcp server. Once",
      "offset": 301.68,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "that command has been run, the mcp",
      "offset": 304.08,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "server will be up and running. We can",
      "offset": 306.32,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "stop it at this point and also open it",
      "offset": 308.24,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "to see how it works. As you can see, it",
      "offset": 310.08,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "has opened successfully. Another",
      "offset": 312.32,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "important thing to keep in mind is that",
      "offset": 314.16,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "every MCP server you create will include",
      "offset": 316,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "environment variables or API keys that",
      "offset": 318.56,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "need to be set. Postman handles this by",
      "offset": 321.12,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "automatically inserting them into yourv",
      "offset": 323.44,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "file. All you need to do is retrieve the",
      "offset": 326.24,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "appropriate keys, paste them into the",
      "offset": 328.32,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "file, and your MCP server will be ready",
      "offset": 330.4,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "to use. You no longer have to pass the",
      "offset": 332.72,
      "duration": 5.12
    },
    {
      "lang": "en",
      "text": "API key manually through the MCP server",
      "offset": 334.8,
      "duration": 4.959
    },
    {
      "lang": "en",
      "text": "command which is a helpful feature. This",
      "offset": 337.84,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "is the MCP server file and this is the",
      "offset": 339.759,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "MCP that has been generated for us. You",
      "offset": 342.08,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "can go ahead and modify it however you",
      "offset": 344.479,
      "duration": 3.681
    },
    {
      "lang": "en",
      "text": "want which is a really useful option.",
      "offset": 346.32,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "Now Postman has also mentioned that we",
      "offset": 348.16,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "can test the MCP server using Postman",
      "offset": 350.16,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "itself. This functionality is not",
      "offset": 352.88,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "limited to just the MCP servers",
      "offset": 354.8,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "generated by Postman. You can test any",
      "offset": 356.72,
      "duration": 4.319
    },
    {
      "lang": "en",
      "text": "MCP server using Postman which is",
      "offset": 358.8,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "incredibly convenient. But what if you",
      "offset": 361.039,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "want to run your MCP server in cursor? I",
      "offset": 362.8,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "am going to show you how to do that. If",
      "offset": 365.199,
      "duration": 3.681
    },
    {
      "lang": "en",
      "text": "you're enjoying the video, I'd really",
      "offset": 367.12,
      "duration": 3.519
    },
    {
      "lang": "en",
      "text": "appreciate it if you could subscribe to",
      "offset": 368.88,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "the channel. We're aiming to hit 25,000",
      "offset": 370.639,
      "duration": 4.081
    },
    {
      "lang": "en",
      "text": "subscribers by the end of this month,",
      "offset": 373.12,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "and your support really helps. We share",
      "offset": 374.72,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "videos like this three times a week, so",
      "offset": 376.72,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "there's always something new and useful",
      "offset": 378.72,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "for you to check out. Before I continue,",
      "offset": 380.4,
      "duration": 4.239
    },
    {
      "lang": "en",
      "text": "I need to get the API key. So, I am here",
      "offset": 382.4,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "in the Open Weather dashboard, and I",
      "offset": 384.639,
      "duration": 3.921
    },
    {
      "lang": "en",
      "text": "have my API key available right here.",
      "offset": 386.56,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "Now I am going to head back into cursor",
      "offset": 388.56,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "open the env file and paste my API key",
      "offset": 390.72,
      "duration": 5.759
    },
    {
      "lang": "en",
      "text": "there. Now here in cursor in the MCP",
      "offset": 393.6,
      "duration": 4.719
    },
    {
      "lang": "en",
      "text": "servers section this is what you are",
      "offset": 396.479,
      "duration": 4.081
    },
    {
      "lang": "en",
      "text": "going to do. First we are going to add a",
      "offset": 398.319,
      "duration": 4.801
    },
    {
      "lang": "en",
      "text": "global MCP server. Since we do not have",
      "offset": 400.56,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "a template to paste at the moment I am",
      "offset": 403.12,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "going to ask it to generate a simple MCP",
      "offset": 405.36,
      "duration": 4.559
    },
    {
      "lang": "en",
      "text": "template that will be used with node",
      "offset": 408,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "going forward. The template has now been",
      "offset": 409.919,
      "duration": 3.601
    },
    {
      "lang": "en",
      "text": "generated. We do not need the",
      "offset": 412,
      "duration": 3.52
    },
    {
      "lang": "en",
      "text": "environment file that came with it. So",
      "offset": 413.52,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "let's go ahead and remove that. You can",
      "offset": 415.52,
      "duration": 3.679
    },
    {
      "lang": "en",
      "text": "see that the command is currently set to",
      "offset": 417.28,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "run with node. Next, we need to replace",
      "offset": 419.199,
      "duration": 4.321
    },
    {
      "lang": "en",
      "text": "the path with the actual location of our",
      "offset": 421.36,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "MCP server. To do that, go back to your",
      "offset": 423.52,
      "duration": 4.079
    },
    {
      "lang": "en",
      "text": "terminal. You will see the path where",
      "offset": 426,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "your MCP server is located. To get the",
      "offset": 427.599,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "full path, simply type the command and",
      "offset": 430.08,
      "duration": 4.239
    },
    {
      "lang": "en",
      "text": "press enter. The output will give you",
      "offset": 432.319,
      "duration": 4.081
    },
    {
      "lang": "en",
      "text": "the complete directory path. Inside",
      "offset": 434.319,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "cursor, you are going to paste that full",
      "offset": 436.4,
      "duration": 5
    },
    {
      "lang": "en",
      "text": "path followed by the file name MCP",
      "offset": 438.479,
      "duration": 5.361
    },
    {
      "lang": "en",
      "text": "server.js. For example, this is my full",
      "offset": 441.4,
      "duration": 5.639
    },
    {
      "lang": "en",
      "text": "path and I am just adding MCPS server.js",
      "offset": 443.84,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "to the end of it. The command stays as",
      "offset": 447.039,
      "duration": 3.521
    },
    {
      "lang": "en",
      "text": "node and now you can rename the server",
      "offset": 448.8,
      "duration": 3.519
    },
    {
      "lang": "en",
      "text": "to anything you like. For example, let's",
      "offset": 450.56,
      "duration": 3.919
    },
    {
      "lang": "en",
      "text": "name it weather MCP agent. At this",
      "offset": 452.319,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "point, we have the weather MCP agent",
      "offset": 454.479,
      "duration": 4.321
    },
    {
      "lang": "en",
      "text": "created. Press command and S to save the",
      "offset": 456.479,
      "duration": 4.401
    },
    {
      "lang": "en",
      "text": "JSON file. If you go back into your",
      "offset": 458.8,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "settings, you will see that the MCP",
      "offset": 460.88,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "server is now listed and all the tools",
      "offset": 462.8,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "are available. These tools include get",
      "offset": 464.8,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "weather history, get current weather,",
      "offset": 466.8,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "and get forecasted weather. There are no",
      "offset": 469.12,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "issues showing up which means the API",
      "offset": 471.36,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "key has been placed correctly and",
      "offset": 473.44,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "everything is being accessed without any",
      "offset": 475.28,
      "duration": 4.319
    },
    {
      "lang": "en",
      "text": "problems. The MCP server is now running",
      "offset": 477.28,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "and you can follow this same approach",
      "offset": 479.599,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "for any other platform whether you are",
      "offset": 481.28,
      "duration": 3.44
    },
    {
      "lang": "en",
      "text": "working with Windinssurf cloud or",
      "offset": 483.199,
      "duration": 3.521
    },
    {
      "lang": "en",
      "text": "desktop. It will work with all of them.",
      "offset": 484.72,
      "duration": 3.759
    },
    {
      "lang": "en",
      "text": "If you want to build agents around it,",
      "offset": 486.72,
      "duration": 4.479
    },
    {
      "lang": "en",
      "text": "you can use the MCPUs library. This is a",
      "offset": 488.479,
      "duration": 4.801
    },
    {
      "lang": "en",
      "text": "very powerful library that allows you to",
      "offset": 491.199,
      "duration": 4.881
    },
    {
      "lang": "en",
      "text": "use MCP servers as agents directly in",
      "offset": 493.28,
      "duration": 4.639
    },
    {
      "lang": "en",
      "text": "your code. For instance, if your",
      "offset": 496.08,
      "duration": 3.519
    },
    {
      "lang": "en",
      "text": "application is based around weather",
      "offset": 497.919,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "information, you could add this MCP",
      "offset": 499.599,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "server agent into it and create a",
      "offset": 501.759,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "feature where a user gives a voice",
      "offset": 503.759,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "command with the name of a place and the",
      "offset": 505.759,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "app automatically returns the weather",
      "offset": 507.759,
      "duration": 3.521
    },
    {
      "lang": "en",
      "text": "data. There is so much you can do with",
      "offset": 509.599,
      "duration": 3.281
    },
    {
      "lang": "en",
      "text": "this. If you browse through the",
      "offset": 511.28,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "available options, you will notice there",
      "offset": 512.88,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "are a huge number of documented APIs.",
      "offset": 514.88,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "For example, you can use the Discord API",
      "offset": 517.44,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "if you are building a social media",
      "offset": 519.68,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "automation tool that reposts content",
      "offset": 521.36,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "across different platforms. Everything",
      "offset": 523.76,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "is already here and you do not have to",
      "offset": 525.68,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "build it manually. A language model can",
      "offset": 527.6,
      "duration": 3.679
    },
    {
      "lang": "en",
      "text": "handle everything for you through the",
      "offset": 529.68,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "MCP server. If you run a search, you",
      "offset": 531.279,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "will even find an official Instagram API",
      "offset": 533.44,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "workspace. You can also find one for",
      "offset": 535.839,
      "duration": 4.921
    },
    {
      "lang": "en",
      "text": "Facebook and for X as",
      "offset": 537.76,
      "duration": 5.68
    },
    {
      "lang": "en",
      "text": "well. This is a really powerful tool and",
      "offset": 540.76,
      "duration": 4.12
    },
    {
      "lang": "en",
      "text": "the number of things you can build with",
      "offset": 543.44,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "it is truly impressive. Okay, so you can",
      "offset": 544.88,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "clearly see that I asked it about the",
      "offset": 547.36,
      "duration": 3.599
    },
    {
      "lang": "en",
      "text": "weather in the UK, specifically in",
      "offset": 549.12,
      "duration": 3.839
    },
    {
      "lang": "en",
      "text": "Birmingham. It called the tool, passed",
      "offset": 550.959,
      "duration": 4.081
    },
    {
      "lang": "en",
      "text": "in the location along with the units in",
      "offset": 552.959,
      "duration": 3.841
    },
    {
      "lang": "en",
      "text": "which we wanted the temperature and",
      "offset": 555.04,
      "duration": 3.44
    },
    {
      "lang": "en",
      "text": "successfully retrieved the current",
      "offset": 556.8,
      "duration": 3.28
    },
    {
      "lang": "en",
      "text": "weather. It used the current weather",
      "offset": 558.48,
      "duration": 3.359
    },
    {
      "lang": "en",
      "text": "tool and it responded that the",
      "offset": 560.08,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "temperature is 18° C. If we go and",
      "offset": 561.839,
      "duration": 4.641
    },
    {
      "lang": "en",
      "text": "check, we can confirm that it is",
      "offset": 564.88,
      "duration": 3.44
    },
    {
      "lang": "en",
      "text": "accurately fetching the data from the",
      "offset": 566.48,
      "duration": 4.479
    },
    {
      "lang": "en",
      "text": "open weather API. That brings us to the",
      "offset": 568.32,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "end of this video. If you'd like to",
      "offset": 570.959,
      "duration": 3.201
    },
    {
      "lang": "en",
      "text": "support the channel and help us keep",
      "offset": 572.48,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "making tutorials like this, you can do",
      "offset": 574.16,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "so by using the super thanks button",
      "offset": 576.16,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "below. As always, thank you for watching",
      "offset": 578,
      "duration": 6.2
    },
    {
      "lang": "en",
      "text": "and I'll see you in the next one.",
      "offset": 579.92,
      "duration": 4.28
    }
  ],
  "cleanText": "So, in one of my previous videos, I said that front end is dead. And to explain what I meant, I'm going to talk to you about APIs. Every app you build is controlled by its internal APIs. And when it needs to fetch data from external sources, it uses external APIs. These internal APIs can actually be hosted on MCP servers, which is a protocol that allows AI agents powered by large language models to control those APIs. And if they are able to control the APIs, they can effectively control the entire application. This means you no longer need a traditional front end to manage everything because AI models can now operate the whole app on your behalf. You can use the fast API MCPUse Library to set this up. These MCPs can now be integrated directly into AI agents which you can configure inside your applications. I demonstrated a library called MCPUse where you simply plug in the MCP and the library automatically gives you an agent. In this way, you are essentially programming large language models to control your application using these MCPs. Now, when it comes to external APIs, if you are developing applications that rely heavily on outside data, you are still going to need them. For example, if your app wants to use location or navigation data from Google Maps, then it will need access to those external APIs. We are now moving toward AI-driven applications. So, the question becomes, how would your AI agent access that data? Today I want to show you a really simple way to make that happen. I'll be introducing you to Postman Builder's new MCP generator. Postman, as you might know, is a platform used for testing APIs, but now they have introduced a powerful tool that lets you generate an MCP server for any API you want. What's even better is that the server is hosted locally, not on some remote platform. So any application you build can include the MCP server right within it. Let's search for Google Maps. Just like I mentioned earlier, you'll see there are multiple API documentation sets available for it. If we open up the core APIs, we can see a wide variety of data ready for use. For example, the air quality API contains a huge amount of information that you can access and use freely. The roads API is another great example. You can pull whatever data you need and implement it in your application without much complexity. Postman has provided a very straightforward method for setting this up. In this video, I'm going to show you how to generate an MCP server for any API you choose. The API documentation available is vast and detailed. You'll find documentation for platforms like Figma, X, and OpenAI, as well as financial APIs like those for Mastercard and Stripe. It's an incredibly wide-ranging collection. And the best part is you can generate MCP servers for any of them. Even if you do not want to integrate them into your own applications, you can still use them inside Claude Desktop where they can be operated however you see fit. So let me guide you through the entire process of what you actually need to do. First, for any API you want to convert into an MCP server, you simply begin by searching for it. If you have learned programming the traditional way, you will probably remember that one of the very first projects many of us completed while learning to work with APIs was a simple weather map application. In my own case, I used the OpenWeather API as part of my learning process. Right here, you can see several different types of APIs available for use. This section is focused on documentation, but the important thing is that all of these APIs are going to be converted into tools for your MCP server. If we go ahead and select all of them, each of the three requests will be turned into individual tools that belong to a single MCP server. In our case, that would be the OpenWeather API MCP server, which will now include these three tools. You can see that it shows three requests have been selected. The next step is to add them. And once that is done, you will see that the requests have been added. Now, we just need to click on the generate button. After about 10 to 30 seconds, the MCP server will be fully generated. Once it is ready, you will notice that the MCP server has been created, but it is not hosted on any remote server. This MCP server is designed to run locally on your own machine. To make that possible, they provide a zip file that contains the complete codebase for the MCP server which you can run locally. All you need to do at this point is download the zip file. You can see that the zip file has been downloaded. Now, you are going to extract the zip file and place it into any folder you prefer. I am going to move it into this folder. Since I already had the file there, I will just replace it. Now the folder has been successfully moved and I am going to open my terminal. As you can see, I am already inside my developer folder. I will navigate into the folder I just copied which is named Postman MCP server. Inside this MCP server folder, I will run the command npm install which will install all the necessary dependencies. If this part is unfamiliar, there is actually a full guide that explains everything I am doing right now. As you can see, npm install has been executed and once it completes, we are ready to run the server locally. All the dependencies have now been installed. The next command we need to run is node mcp server.js. This is a javascript file that will start our MCP server. Once that command has been run, the MCP server will be up and running. We can stop it at this point and also open it to see how it works. As you can see, it has opened successfully. Another important thing to keep in mind is that every MCP server you create will include environment variables or API keys that need to be set. Postman handles this by automatically inserting them into your .env file. All you need to do is retrieve the appropriate keys, paste them into the file, and your MCP server will be ready to use. You no longer have to pass the API key manually through the MCP server command which is a helpful feature. This is the MCP server file and this is the MCP that has been generated for us. You can go ahead and modify it however you want which is a really useful option. Now Postman has also mentioned that we can test the MCP server using Postman itself. This functionality is not limited to just the MCP servers generated by Postman. You can test any MCP server using Postman which is incredibly convenient. But what if you want to run your MCP server in Cursor AI? I am going to show you how to do that. If you're enjoying the video, I'd really appreciate it if you could subscribe to the channel. We're aiming to hit 25,000 subscribers by the end of this month, and your support really helps. We share videos like this three times a week, so there's always something new and useful for you to check out. Before I continue, I need to get the API key. So, I am here in the OpenWeather API dashboard, and I have my API key available right here. Now I am going to head back into Cursor AI, open the .env file and paste my API key there. Now here in Cursor AI in the MCP servers section this is what you are going to do. First we are going to add a global MCP server. Since we do not have a template to paste at the moment I am going to ask it to generate a simple MCP template that will be used with node going forward. The template has now been generated. We do not need the environment file that came with it. So let's go ahead and remove that. You can see that the command is currently set to run with node. Next, we need to replace the path with the actual location of our MCP server. To do that, go back to your terminal. You will see the path where your MCP server is located. To get the full path, simply type the command and press enter. The output will give you the complete directory path. Inside Cursor AI, you are going to paste that full path followed by the file name MCP server.js. For example, this is my full path and I am just adding MCPS server.js to the end of it. The command stays as node and now you can rename the server to anything you like. For example, let's name it weather MCP agent. At this point, we have the weather MCP agent created. Press command and S to save the JSON file. If you go back into your settings, you will see that the MCP server is now listed and all the tools are available. These tools include get weather history, get current weather, and get forecasted weather. There are no issues showing up which means the API key has been placed correctly and everything is being accessed without any problems. The MCP server is now running and you can follow this same approach for any other platform whether you are working with Windinssurf cloud or desktop. It will work with all of them. If you want to build agents around it, you can use the MCPUse Library. This is a very powerful library that allows you to use MCP servers as agents directly in your code. For instance, if your application is based around weather information, you could add this MCP server agent into it and create a feature where a user gives a voice command with the name of a place and the app automatically returns the weather data. There is so much you can do with this. If you browse through the available options, you will notice there are a huge number of documented APIs. For example, you can use the Discord API if you are building a social media automation tool that reposts content across different platforms. Everything is already here and you do not have to build it manually. A language model can handle everything for you through the MCP server. If you run a search, you will even find an official Instagram API workspace. You can also find one for Facebook and for X as well. This is a really powerful tool and the number of things you can build with it is truly impressive. Okay, so you can clearly see that I asked it about the weather in the UK, specifically in Birmingham. It called the tool, passed in the location along with the units in which we wanted the temperature and successfully retrieved the current weather. It used the current weather tool and it responded that the temperature is 18° C. If we go and check, we can confirm that it is accurately fetching the data from the OpenWeather API. That brings us to the end of this video. If you'd like to support the channel and help us keep making tutorials like this, you can do so by using the super thanks button below. As always, thank you for watching and I'll see you in the next one.\n",
  "dumpedAt": "2025-07-21T18:43:26.007Z"
}