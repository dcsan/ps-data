{
  "episodeId": "fD8NLPU0WYU",
  "channelSlug": "@ailabs-393",
  "title": "Agile Coding Is HEREâ€¦ 90% AI Coding Is Already Done With This",
  "publishedAt": "2025-07-15T15:08:47.000Z",
  "rawLines": [
    {
      "lang": "en",
      "text": "Ever since AI came around, it has",
      "offset": 0.16,
      "duration": 4.159
    },
    {
      "lang": "en",
      "text": "enabled many people to easily create",
      "offset": 2.159,
      "duration": 4.561
    },
    {
      "lang": "en",
      "text": "websites and even apps. The problem is",
      "offset": 4.319,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "most people skip the proper software",
      "offset": 6.72,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "development process and just go to",
      "offset": 8.639,
      "duration": 3.761
    },
    {
      "lang": "en",
      "text": "cursor asking it to build an app or",
      "offset": 10.4,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "clone a site. While this quick approach",
      "offset": 12.4,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "might work for demos, it doesn't create",
      "offset": 14.32,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "productionready software. That's why the",
      "offset": 16.4,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "industry has evolved from simple vibe",
      "offset": 18.4,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "coding to sophisticated context",
      "offset": 20.48,
      "duration": 3.44
    },
    {
      "lang": "en",
      "text": "engineering. Today, I'm going to show",
      "offset": 22.48,
      "duration": 3.28
    },
    {
      "lang": "en",
      "text": "you how to take this even further. You",
      "offset": 23.92,
      "duration": 3.599
    },
    {
      "lang": "en",
      "text": "can now have an entire software",
      "offset": 25.76,
      "duration": 3.759
    },
    {
      "lang": "en",
      "text": "development team working right inside",
      "offset": 27.519,
      "duration": 4.481
    },
    {
      "lang": "en",
      "text": "your IDE. Whether it's cursor AI or",
      "offset": 29.519,
      "duration": 4.401
    },
    {
      "lang": "en",
      "text": "cloud code, this framework can build",
      "offset": 32,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "whatever you want, no matter how big it",
      "offset": 33.92,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "is. Before I tell you about this",
      "offset": 35.76,
      "duration": 3.2
    },
    {
      "lang": "en",
      "text": "framework, let me give you some",
      "offset": 37.6,
      "duration": 3.44
    },
    {
      "lang": "en",
      "text": "background so you understand how I found",
      "offset": 38.96,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "this and why it's so important. In one",
      "offset": 41.04,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "of my previous videos, I introduced a",
      "offset": 43.04,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "framework that enabled Claude code to",
      "offset": 45.2,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "work through command files, assigning",
      "offset": 47.36,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "different roles to simulate a complete",
      "offset": 49.44,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "software development team. It",
      "offset": 51.6,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "essentially supported development across",
      "offset": 53.36,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "the entire software development life",
      "offset": 55.28,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "cycle. But the problem was there was no",
      "offset": 57.36,
      "duration": 3.999
    },
    {
      "lang": "en",
      "text": "documentation. And even when there was",
      "offset": 59.44,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "some documentation, there still wasn't a",
      "offset": 61.359,
      "duration": 4.401
    },
    {
      "lang": "en",
      "text": "clear proper workflow implemented in",
      "offset": 63.52,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "that framework. Someone actually",
      "offset": 65.76,
      "duration": 3.52
    },
    {
      "lang": "en",
      "text": "commented under that video pointing out",
      "offset": 67.36,
      "duration": 3.759
    },
    {
      "lang": "en",
      "text": "that it was based on a workflow I'm",
      "offset": 69.28,
      "duration": 3.519
    },
    {
      "lang": "en",
      "text": "about to show you. That led me to",
      "offset": 71.119,
      "duration": 3.441
    },
    {
      "lang": "en",
      "text": "discover this new method which is called",
      "offset": 72.799,
      "duration": 4.161
    },
    {
      "lang": "en",
      "text": "the BMAD method. It's by a contributor",
      "offset": 74.56,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "named BMAD Code who also has a YouTube",
      "offset": 76.96,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "channel. And honestly, this workflow is",
      "offset": 79.36,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "really, really amazing. The BMAD method",
      "offset": 81.36,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "stands for breakthrough method for agile",
      "offset": 83.92,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "AIdriven development, and I'll link its",
      "offset": 86.08,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "GitHub repository in the description",
      "offset": 88.24,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "below. Agile development is the standard",
      "offset": 90.08,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "approach software engineers use when",
      "offset": 92.32,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "building real software products. This",
      "offset": 94.4,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "method involves building software in",
      "offset": 96.4,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "small chunks, testing those chunks, and",
      "offset": 98.32,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "shipping them incrementally. The typical",
      "offset": 100.4,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "workflow starts with a PRD, a product",
      "offset": 102.32,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "requirement document, which lists the",
      "offset": 104.64,
      "duration": 3.839
    },
    {
      "lang": "en",
      "text": "features that need to be built without",
      "offset": 106.64,
      "duration": 3.839
    },
    {
      "lang": "en",
      "text": "any technical details. It's just the",
      "offset": 108.479,
      "duration": 3.761
    },
    {
      "lang": "en",
      "text": "main list of features that are needed.",
      "offset": 110.479,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "The development team then breaks this",
      "offset": 112.24,
      "duration": 3.839
    },
    {
      "lang": "en",
      "text": "into smaller tasks, works on those",
      "offset": 114.079,
      "duration": 4.161
    },
    {
      "lang": "en",
      "text": "chunks one by one, tests them, and",
      "offset": 116.079,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "gradually ships the final product",
      "offset": 118.24,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "through iteration. This BMAD workflow",
      "offset": 120.079,
      "duration": 4.881
    },
    {
      "lang": "en",
      "text": "enables exactly that same process. What",
      "offset": 122.32,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "makes it a gamecher is how it brings",
      "offset": 124.96,
      "duration": 3.999
    },
    {
      "lang": "en",
      "text": "together everything I've shown you on",
      "offset": 127.04,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "this channel. tools that make cursor go",
      "offset": 128.959,
      "duration": 4.721
    },
    {
      "lang": "en",
      "text": "step by step and context engineering",
      "offset": 131.36,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "concepts combining them into one unified",
      "offset": 133.68,
      "duration": 5.279
    },
    {
      "lang": "en",
      "text": "system. The method works across all IDs.",
      "offset": 136.4,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "So whether you're using cursor, windsurf",
      "offset": 138.959,
      "duration": 4.321
    },
    {
      "lang": "en",
      "text": "or clawed code inside your terminal,",
      "offset": 141.12,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "this workflow slots right into your",
      "offset": 143.28,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "setup. I'll walk you through exactly how",
      "offset": 145.2,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "this method works and by the end I'll",
      "offset": 147.12,
      "duration": 3.839
    },
    {
      "lang": "en",
      "text": "show you how to install it and get it",
      "offset": 149.12,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "running inside your own project. Since",
      "offset": 150.959,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "the claude code method I previously",
      "offset": 153.04,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "showed lacked proper documentation, you",
      "offset": 154.959,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "might be wondering how you're actually",
      "offset": 157.28,
      "duration": 3.679
    },
    {
      "lang": "en",
      "text": "going to learn this new workflow. Well,",
      "offset": 158.879,
      "duration": 3.681
    },
    {
      "lang": "en",
      "text": "that's exactly why I'm making this",
      "offset": 160.959,
      "duration": 3.681
    },
    {
      "lang": "en",
      "text": "video. The BMAD method doesn't have that",
      "offset": 162.56,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "issue. It comes with solid user",
      "offset": 164.64,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "documentation built right in. It's",
      "offset": 166.64,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "complete, clear, and everything you need",
      "offset": 168.64,
      "duration": 3.599
    },
    {
      "lang": "en",
      "text": "is there. But here's the thing. I'm",
      "offset": 170.4,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "going to show you the entire workflow",
      "offset": 172.239,
      "duration": 3.921
    },
    {
      "lang": "en",
      "text": "step by step in this video. So, you'll",
      "offset": 174.16,
      "duration": 4.079
    },
    {
      "lang": "en",
      "text": "only need to dive into the documentation",
      "offset": 176.16,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "if you want access to extra commands and",
      "offset": 178.239,
      "duration": 4.321
    },
    {
      "lang": "en",
      "text": "additional information. The method also",
      "offset": 180.64,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "includes a dedicated agent called",
      "offset": 182.56,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "orchestrator. When it's loaded, as you",
      "offset": 184.4,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "can see here, it gets activated and",
      "offset": 186.48,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "guides you through the entire process.",
      "offset": 188.64,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "It helps you understand how the system",
      "offset": 190.64,
      "duration": 3.679
    },
    {
      "lang": "en",
      "text": "works and keeps everything moving",
      "offset": 192.56,
      "duration": 3.599
    },
    {
      "lang": "en",
      "text": "smoothly. Here's the best part. This",
      "offset": 194.319,
      "duration": 3.681
    },
    {
      "lang": "en",
      "text": "workflow isn't just for software",
      "offset": 196.159,
      "duration": 3.921
    },
    {
      "lang": "en",
      "text": "developers. It's for anyone who wants to",
      "offset": 198,
      "duration": 4.239
    },
    {
      "lang": "en",
      "text": "build and ship software. And the entire",
      "offset": 200.08,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "process can be handled by AI agents.",
      "offset": 202.239,
      "duration": 4.561
    },
    {
      "lang": "en",
      "text": "I'll also show you a bonus method using",
      "offset": 204.56,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "AI to dive deeper into this project",
      "offset": 206.8,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "after you've learned the workflow",
      "offset": 208.959,
      "duration": 3.441
    },
    {
      "lang": "en",
      "text": "because there's so much potential here",
      "offset": 210.56,
      "duration": 3.52
    },
    {
      "lang": "en",
      "text": "that's seriously worth exploring",
      "offset": 212.4,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "further. To start the workflow, I needed",
      "offset": 214.08,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "two files, the PRD and the architecture",
      "offset": 216.56,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "file which the agents need to make the",
      "offset": 219.04,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "full app. For that, I went back to the",
      "offset": 221.04,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "GitHub repository and navigated to the",
      "offset": 223.04,
      "duration": 4.559
    },
    {
      "lang": "en",
      "text": "disc folder, then into Teams and open",
      "offset": 225.36,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "the team fullstack.txt",
      "offset": 227.599,
      "duration": 4.161
    },
    {
      "lang": "en",
      "text": "file. You can download this file. It",
      "offset": 229.68,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "contains everything the AI agent needs.",
      "offset": 231.76,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "I use this for brainstorming with chat",
      "offset": 234,
      "duration": 4.799
    },
    {
      "lang": "en",
      "text": "GPT, Claude or Gemini. They recommend",
      "offset": 236.159,
      "duration": 4.881
    },
    {
      "lang": "en",
      "text": "Gemini since it's most cost effective,",
      "offset": 238.799,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "but chat GPT works perfectly fine. I",
      "offset": 241.04,
      "duration": 4.479
    },
    {
      "lang": "en",
      "text": "uploaded the file with their recommended",
      "offset": 243.599,
      "duration": 4.401
    },
    {
      "lang": "en",
      "text": "instruction where I told the AI that the",
      "offset": 245.519,
      "duration": 4.161
    },
    {
      "lang": "en",
      "text": "operating system instructions were",
      "offset": 248,
      "duration": 3.28
    },
    {
      "lang": "en",
      "text": "attached and it must not break",
      "offset": 249.68,
      "duration": 3.839
    },
    {
      "lang": "en",
      "text": "character. I used the brainstorm command",
      "offset": 251.28,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "in this framework. The asterisk symbol",
      "offset": 253.519,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "triggers different built-in commands for",
      "offset": 255.76,
      "duration": 4.479
    },
    {
      "lang": "en",
      "text": "both commands and agents. The brainstorm",
      "offset": 257.919,
      "duration": 4.641
    },
    {
      "lang": "en",
      "text": "command started asking me questions to",
      "offset": 260.239,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "understand what I wanted to build. I",
      "offset": 262.56,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "described an iOS productivity app with",
      "offset": 264.479,
      "duration": 5.041
    },
    {
      "lang": "en",
      "text": "feature ideas. It set up a brainstorming",
      "offset": 266.96,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "session and gave me different paths to",
      "offset": 269.52,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "proceed. I explained what I wanted and",
      "offset": 271.6,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "didn't want and it suggested new",
      "offset": 273.68,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "features like iOS widgets. For UI",
      "offset": 275.52,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "design, it provided sample interactions,",
      "offset": 278,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "color-coded categories, smart filters,",
      "offset": 280.72,
      "duration": 5.039
    },
    {
      "lang": "en",
      "text": "and tap to expand task views. After",
      "offset": 283.36,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "brainstorming the entire app, it",
      "offset": 285.759,
      "duration": 3.841
    },
    {
      "lang": "en",
      "text": "suggested moving forward with a feature",
      "offset": 287.6,
      "duration": 4.319
    },
    {
      "lang": "en",
      "text": "matrix. It generated a road map with",
      "offset": 289.6,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "version one as the MVP and version two",
      "offset": 291.919,
      "duration": 4.481
    },
    {
      "lang": "en",
      "text": "with additional features. I made it",
      "offset": 294.56,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "clear I didn't want voice capture for",
      "offset": 296.4,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "this to-do list style productivity app.",
      "offset": 298.4,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "Then it generated my brainstorm markdown",
      "offset": 300.72,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "file. I moved to the next command PM",
      "offset": 302.96,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "which switched the role to product",
      "offset": 305.36,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "manager. I used the create doc command",
      "offset": 306.8,
      "duration": 4.239
    },
    {
      "lang": "en",
      "text": "which started building the PRD through a",
      "offset": 308.96,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "step-by-step workflow with five stages.",
      "offset": 311.039,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "Each stage provided menus with decisions",
      "offset": 313.44,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "real software teams make when drafting",
      "offset": 315.919,
      "duration": 4.641
    },
    {
      "lang": "en",
      "text": "PRDs. The workflow proved solid. When I",
      "offset": 318,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "accidentally pressed zero, it",
      "offset": 320.56,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "immediately told me that wasn't a valid",
      "offset": 322.32,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "option and provided clear feedback",
      "offset": 324.32,
      "duration": 4.319
    },
    {
      "lang": "en",
      "text": "throughout. I completed the entire PRD",
      "offset": 326.32,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "process and downloaded the final PRD.",
      "offset": 328.639,
      "duration": 4.081
    },
    {
      "lang": "en",
      "text": "Then I switched to architect, which",
      "offset": 331.12,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "builds the app's architecture, including",
      "offset": 332.72,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "text stack and component connections.",
      "offset": 334.72,
      "duration": 4.319
    },
    {
      "lang": "en",
      "text": "The documentation step built out a full",
      "offset": 336.8,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "architecture plan in interactive mode.",
      "offset": 339.039,
      "duration": 4.561
    },
    {
      "lang": "en",
      "text": "With both key files ready, the PRD and",
      "offset": 341.28,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "app architecture, I was ready to move to",
      "offset": 343.6,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "the IDE and start building. You can open",
      "offset": 345.68,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "any ID you want, whether it's claude",
      "offset": 348.32,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "code or cursor. And you'll follow these",
      "offset": 350.4,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "steps. Once you've completed the",
      "offset": 352.4,
      "duration": 3.519
    },
    {
      "lang": "en",
      "text": "installation, which I'll show at the end",
      "offset": 354,
      "duration": 3.759
    },
    {
      "lang": "en",
      "text": "of the video, you'll see these folders",
      "offset": 355.919,
      "duration": 4.081
    },
    {
      "lang": "en",
      "text": "have been created. A cla folder, a",
      "offset": 357.759,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "cursor folder, and inside these",
      "offset": 360,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "predefined roles representing different",
      "offset": 361.919,
      "duration": 4.321
    },
    {
      "lang": "en",
      "text": "roles in a typical software team. After",
      "offset": 364,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "getting your PRD and architecture files,",
      "offset": 366.24,
      "duration": 4.239
    },
    {
      "lang": "en",
      "text": "you'll use these roles in a step-by-step",
      "offset": 368.4,
      "duration": 4.079
    },
    {
      "lang": "en",
      "text": "process to build out your product. This",
      "offset": 370.479,
      "duration": 3.601
    },
    {
      "lang": "en",
      "text": "workflow loops through each RO",
      "offset": 372.479,
      "duration": 3.601
    },
    {
      "lang": "en",
      "text": "methodically. There's one manual step.",
      "offset": 374.08,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "You'll need to create a folder named",
      "offset": 376.08,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "docs and place the architecture.md and",
      "offset": 377.68,
      "duration": 5.28
    },
    {
      "lang": "en",
      "text": "prd.md files inside it. The other",
      "offset": 380.4,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "folders are generated automatically by",
      "offset": 382.96,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "the agents. The first agent is the PO",
      "offset": 384.96,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "agent, which stands for product owner.",
      "offset": 387.28,
      "duration": 3.759
    },
    {
      "lang": "en",
      "text": "This is the agent you'll initialize",
      "offset": 389.36,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "first. In cursor, agents are initialized",
      "offset": 391.039,
      "duration": 4.961
    },
    {
      "lang": "en",
      "text": "using a special command format. You type",
      "offset": 393.68,
      "duration": 4.799
    },
    {
      "lang": "en",
      "text": "PO, it suggests the agent. You select it",
      "offset": 396,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "and start it. In Claude Code, you use a",
      "offset": 398.479,
      "duration": 4.641
    },
    {
      "lang": "en",
      "text": "slash command instead. Even though I'm",
      "offset": 400.96,
      "duration": 4.079
    },
    {
      "lang": "en",
      "text": "using cursor in this walkthrough, you",
      "offset": 403.12,
      "duration": 3.919
    },
    {
      "lang": "en",
      "text": "can follow the same process in whatever",
      "offset": 405.039,
      "duration": 3.921
    },
    {
      "lang": "en",
      "text": "ID you're using. I'll show you the full",
      "offset": 407.039,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "list of supported IDs at the end. Once",
      "offset": 408.96,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "the PO agent is active, you'll use the",
      "offset": 411.199,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "shard doc command and give it the path",
      "offset": 413.28,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "to your documentation files, both the",
      "offset": 415.199,
      "duration": 4.641
    },
    {
      "lang": "en",
      "text": "PRD and the architecture file. The term",
      "offset": 417.28,
      "duration": 5.359
    },
    {
      "lang": "en",
      "text": "shard refers to how it breaks your PRD",
      "offset": 419.84,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "and architecture documents into smaller",
      "offset": 422.639,
      "duration": 4.481
    },
    {
      "lang": "en",
      "text": "index chunks so they can be followed",
      "offset": 424.88,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "step by step organizing everything into",
      "offset": 427.12,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "manageable tasks. This is where the",
      "offset": 429.68,
      "duration": 4.239
    },
    {
      "lang": "en",
      "text": "agiledriven approach kicks in. Instead",
      "offset": 431.68,
      "duration": 4.239
    },
    {
      "lang": "en",
      "text": "of building the whole app at once, you",
      "offset": 433.919,
      "duration": 4.241
    },
    {
      "lang": "en",
      "text": "focus on one piece at a time, designing",
      "offset": 435.919,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "it, building it, testing it, then moving",
      "offset": 438.16,
      "duration": 4.319
    },
    {
      "lang": "en",
      "text": "to the next. Once sharding is done, it",
      "offset": 440.319,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "confirms completion and you're ready to",
      "offset": 442.479,
      "duration": 4.241
    },
    {
      "lang": "en",
      "text": "move to the next agent. Moving to the",
      "offset": 444.319,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "next agent, the scrum master. I",
      "offset": 446.72,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "initialized it using the cursor rule",
      "offset": 448.639,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "file and ran its method called draft. It",
      "offset": 450.4,
      "duration": 3.919
    },
    {
      "lang": "en",
      "text": "checked my PRD and saw that everything",
      "offset": 452.479,
      "duration": 3.921
    },
    {
      "lang": "en",
      "text": "was well defined except that I hadn't",
      "offset": 454.319,
      "duration": 4.241
    },
    {
      "lang": "en",
      "text": "generated any epics. Epics are supposed",
      "offset": 456.4,
      "duration": 4.239
    },
    {
      "lang": "en",
      "text": "to be created using a separate method",
      "offset": 458.56,
      "duration": 3.759
    },
    {
      "lang": "en",
      "text": "called create epic which should have",
      "offset": 460.639,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "been run earlier in chat GPT. This would",
      "offset": 462.319,
      "duration": 4.401
    },
    {
      "lang": "en",
      "text": "have broken down the PRD into multiple",
      "offset": 464.639,
      "duration": 4.241
    },
    {
      "lang": "en",
      "text": "epics, four epics total in this case.",
      "offset": 466.72,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "The workflow is tight. So the agent",
      "offset": 468.88,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "detected this and immediately offered to",
      "offset": 470.8,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "run the epic generation for me. I",
      "offset": 472.96,
      "duration": 4.239
    },
    {
      "lang": "en",
      "text": "selected the option by typing one and it",
      "offset": 474.96,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "automatically created epics based on my",
      "offset": 477.199,
      "duration": 5.041
    },
    {
      "lang": "en",
      "text": "PRD. Epics are big chunks of the PRD",
      "offset": 479.44,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "divided into major steps. Inside each",
      "offset": 482.24,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "epic are stories. For example, epic 1",
      "offset": 484.8,
      "duration": 6.32
    },
    {
      "lang": "en",
      "text": "has stories like 1.1, 1.2, and so on.",
      "offset": 487.44,
      "duration": 6.879
    },
    {
      "lang": "en",
      "text": "Epic 4 has stories going up to 4.4. I",
      "offset": 491.12,
      "duration": 6
    },
    {
      "lang": "en",
      "text": "ended up with 16 stories total, four per",
      "offset": 494.319,
      "duration": 4.641
    },
    {
      "lang": "en",
      "text": "epic. Once the epics were done, the",
      "offset": 497.12,
      "duration": 4.079
    },
    {
      "lang": "en",
      "text": "Scrum Master agent generated all of the",
      "offset": 498.96,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "stories. Story 1.1, for example, is",
      "offset": 501.199,
      "duration": 5.041
    },
    {
      "lang": "en",
      "text": "about basic task creation and storage.",
      "offset": 503.84,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "When these stories are first created,",
      "offset": 506.24,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "their status is set to draft. This needs",
      "offset": 508.24,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "to be manually changed to approved by",
      "offset": 510.639,
      "duration": 4.481
    },
    {
      "lang": "en",
      "text": "typing that into the file and saving it.",
      "offset": 512.8,
      "duration": 4.719
    },
    {
      "lang": "en",
      "text": "That approval signals to the next agent,",
      "offset": 515.12,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "usually the developer, that the story is",
      "offset": 517.519,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "ready to be worked on. Once I change the",
      "offset": 519.68,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "status to approved, I move to the next",
      "offset": 521.599,
      "duration": 4.401
    },
    {
      "lang": "en",
      "text": "agent, which is the dev agent. The dev",
      "offset": 523.76,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "agent is straightforward. It starts up",
      "offset": 526,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "and loads, then asks which story to",
      "offset": 528.24,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "implement. In real world software,",
      "offset": 530.48,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "stories aren't always implemented",
      "offset": 532.64,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "sequentially. Some can be done",
      "offset": 534.56,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "independently. I told it to begin with",
      "offset": 536.32,
      "duration": 4.639
    },
    {
      "lang": "en",
      "text": "story 1.1 and it followed the story",
      "offset": 538.56,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "exactly. The story doesn't just contain",
      "offset": 540.959,
      "duration": 4.721
    },
    {
      "lang": "en",
      "text": "tasks. It breaks those tasks down into",
      "offset": 543.12,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "subtasks. It's incredibly modular,",
      "offset": 545.68,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "tightly controlled, and nothing is left",
      "offset": 548,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "vague for the AI. I started each agent",
      "offset": 550.08,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "in a new chat, which is important. These",
      "offset": 552.399,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "files are large and take up context",
      "offset": 554.48,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "space. Splitting agents into separate",
      "offset": 556.399,
      "duration": 4.161
    },
    {
      "lang": "en",
      "text": "chats helps avoid confusion and keeps",
      "offset": 558.48,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "things clean. Once the story is",
      "offset": 560.56,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "complete, its status changes to ready",
      "offset": 562.16,
      "duration": 3.679
    },
    {
      "lang": "en",
      "text": "for review, not done. This is",
      "offset": 564.16,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "intentional. These stories need to go",
      "offset": 565.839,
      "duration": 3.201
    },
    {
      "lang": "en",
      "text": "through testing before they're",
      "offset": 567.76,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "considered fully complete. Oh, and if",
      "offset": 569.04,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "you're enjoying the content, please hit",
      "offset": 571.36,
      "duration": 3.52
    },
    {
      "lang": "en",
      "text": "that subscribe button. We've also",
      "offset": 573.2,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "launched channel memberships. 93 people",
      "offset": 574.88,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "have already joined our first tier.",
      "offset": 577.36,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "Members get priority replies to",
      "offset": 579.279,
      "duration": 3.841
    },
    {
      "lang": "en",
      "text": "comments, so if you need feedback or",
      "offset": 581.2,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "have questions, that's the best way to",
      "offset": 583.12,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "reach us. We're considering adding more",
      "offset": 584.8,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "tiers based on the incredible support so",
      "offset": 586.72,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "far. Testing has its own agent. I",
      "offset": 589.04,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "initialized it with its rule file called",
      "offset": 591.6,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "the review method and it checked that",
      "offset": 593.76,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "everything in the story was implemented",
      "offset": 595.76,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "correctly. It scans the code base for",
      "offset": 597.68,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "the specific items the story required.",
      "offset": 599.76,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "If it doesn't spot any critical issues",
      "offset": 602,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "or after it autofixes repetitive code",
      "offset": 604.24,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "with active refactoring, it marks the",
      "offset": 606.56,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "story as approved. Once that happens,",
      "offset": 608.72,
      "duration": 4.239
    },
    {
      "lang": "en",
      "text": "the agent flips the story status from",
      "offset": 610.8,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "review to done, completing the full life",
      "offset": 612.959,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "cycle of a story. From there, the",
      "offset": 615.2,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "process moves to the next story in the",
      "offset": 617.279,
      "duration": 4.321
    },
    {
      "lang": "en",
      "text": "epic. This mirrors how real software",
      "offset": 619.2,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "teams operate. Behind the scenes, the",
      "offset": 621.6,
      "duration": 4.239
    },
    {
      "lang": "en",
      "text": "agent locates all epics, checks each",
      "offset": 623.44,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "story status, and only works on those",
      "offset": 625.839,
      "duration": 3.921
    },
    {
      "lang": "en",
      "text": "that are ready. I could have it spin up",
      "offset": 627.839,
      "duration": 4.161
    },
    {
      "lang": "en",
      "text": "five new stories at once. It will still",
      "offset": 629.76,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "verify whether earlier stories are",
      "offset": 632,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "complete before moving forward. That's",
      "offset": 634,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "what makes the workflow so robust.",
      "offset": 635.92,
      "duration": 4.479
    },
    {
      "lang": "en",
      "text": "Starting each agent in a new chat avoids",
      "offset": 638,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "context length issues. In my case, the",
      "offset": 640.399,
      "duration": 4.641
    },
    {
      "lang": "en",
      "text": "agent saw that the next item was task",
      "offset": 642.72,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "list display and basic organization. It",
      "offset": 645.04,
      "duration": 4.239
    },
    {
      "lang": "en",
      "text": "pulled key insights from the previous",
      "offset": 647.36,
      "duration": 4.159
    },
    {
      "lang": "en",
      "text": "story plus architectural context,",
      "offset": 649.279,
      "duration": 4.481
    },
    {
      "lang": "en",
      "text": "bundled that into a single story packet",
      "offset": 651.519,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "and handed it off. At that point, I",
      "offset": 653.76,
      "duration": 3.759
    },
    {
      "lang": "en",
      "text": "opened a fresh chat, started the dev",
      "offset": 655.519,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "agent again, and it immediately began",
      "offset": 657.519,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "work on the next story. Easy,",
      "offset": 659.519,
      "duration": 3.921
    },
    {
      "lang": "en",
      "text": "controlled, and perfectly in line with",
      "offset": 661.519,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "real agile development. That was the",
      "offset": 663.44,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "entire workflow. Before showing the",
      "offset": 665.839,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "installation, I'll explain how I",
      "offset": 667.76,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "understood this system. I opened the",
      "offset": 669.519,
      "duration": 4.081
    },
    {
      "lang": "en",
      "text": "GitHub link for the BMAD method and",
      "offset": 671.36,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "changed the URL by replacing GitHub with",
      "offset": 673.6,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "Git ingest. This tool converts any",
      "offset": 675.92,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "GitHub repo into a format readable for",
      "offset": 678.16,
      "duration": 5.119
    },
    {
      "lang": "en",
      "text": "large language models. I opened Claude,",
      "offset": 680.8,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "pasted the git ingest link, uploaded the",
      "offset": 683.279,
      "duration": 4.401
    },
    {
      "lang": "en",
      "text": "file, and asked questions about the",
      "offset": 685.76,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "workflow. Claude explained everything",
      "offset": 687.68,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "step by step, which is how I understood",
      "offset": 689.6,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "the full workflow before running it",
      "offset": 691.6,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "myself. Now for the installation",
      "offset": 693.44,
      "duration": 4.079
    },
    {
      "lang": "en",
      "text": "process. The installation is actually",
      "offset": 695.36,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "pretty easy. You don't need to copy",
      "offset": 697.519,
      "duration": 3.841
    },
    {
      "lang": "en",
      "text": "paste all the files. Start by heading to",
      "offset": 699.2,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "the GitHub repository and copying the",
      "offset": 701.36,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "npx command provided there. Open the",
      "offset": 703.6,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "terminal in cloud code or cursor and",
      "offset": 705.92,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "paste that command. This setup is",
      "offset": 708.24,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "project specific so it needs to be run",
      "offset": 710.16,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "separately inside each project where the",
      "offset": 712.16,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "BMAD workflow will be used. This keeps",
      "offset": 714.32,
      "duration": 4.079
    },
    {
      "lang": "en",
      "text": "everything self-contained and clean.",
      "offset": 716.64,
      "duration": 3.439
    },
    {
      "lang": "en",
      "text": "Once the command is pasted, the",
      "offset": 718.399,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "installer starts up. First, it asks for",
      "offset": 720.079,
      "duration": 4.561
    },
    {
      "lang": "en",
      "text": "the full path to the project directory.",
      "offset": 722.399,
      "duration": 4.321
    },
    {
      "lang": "en",
      "text": "After providing the path, it asks what",
      "offset": 724.64,
      "duration": 4.319
    },
    {
      "lang": "en",
      "text": "to install. Select the first option,",
      "offset": 726.72,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "install BMAD agile core system. This",
      "offset": 728.959,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "sets up the BMAD core inside the",
      "offset": 731.68,
      "duration": 5.279
    },
    {
      "lang": "en",
      "text": "project. Next, it asks if the PRD should",
      "offset": 734.399,
      "duration": 5.041
    },
    {
      "lang": "en",
      "text": "be split into multiple files. I selected",
      "offset": 736.959,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "yes. Then it asks if the architecture",
      "offset": 739.44,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "documentation should also be sharded. I",
      "offset": 741.519,
      "duration": 4.241
    },
    {
      "lang": "en",
      "text": "selected yes again. The installer then",
      "offset": 743.76,
      "duration": 4.639
    },
    {
      "lang": "en",
      "text": "shows IDE selection options. Multiple",
      "offset": 745.76,
      "duration": 5.36
    },
    {
      "lang": "en",
      "text": "IDEs can be selected at once. I selected",
      "offset": 748.399,
      "duration": 5.281
    },
    {
      "lang": "en",
      "text": "cursor claw code and winds surf. After",
      "offset": 751.12,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "confirming it asks about including",
      "offset": 753.68,
      "duration": 4.159
    },
    {
      "lang": "en",
      "text": "pre-built web bundles. Since I followed",
      "offset": 755.68,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "the method shown earlier, I selected no.",
      "offset": 757.839,
      "duration": 4.161
    },
    {
      "lang": "en",
      "text": "Once installation is complete, all the",
      "offset": 760.16,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "rule files appear inside the project.",
      "offset": 762,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "The IDE might need to be restarted for",
      "offset": 764,
      "duration": 4.079
    },
    {
      "lang": "en",
      "text": "them to show up, but once that's done,",
      "offset": 766.16,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "they're ready to go. For example, if I",
      "offset": 768.079,
      "duration": 5.841
    },
    {
      "lang": "en",
      "text": "type PM, the PMDC file shows up and can",
      "offset": 770.24,
      "duration": 6.48
    },
    {
      "lang": "en",
      "text": "be run to follow the full BMAD workflow.",
      "offset": 773.92,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "That brings us to the end of this video.",
      "offset": 776.72,
      "duration": 3.44
    },
    {
      "lang": "en",
      "text": "If you'd like to support the channel and",
      "offset": 778.48,
      "duration": 3.52
    },
    {
      "lang": "en",
      "text": "help us keep making videos like this,",
      "offset": 780.16,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "you can do so by using the super thanks",
      "offset": 782,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "button below. As always, thank you for",
      "offset": 784,
      "duration": 3.44
    },
    {
      "lang": "en",
      "text": "watching and I'll see you in the next",
      "offset": 786,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "one.",
      "offset": 787.44,
      "duration": 2.72
    }
  ],
  "cleanText": "Ever since AI came around, it has enabled many people to easily create websites and even apps. The problem is most people skip the proper software development process and just go to Cursor asking it to build an app or clone a site. While this quick approach might work for demos, it doesn't create production-ready software. That's why the industry has evolved from simple vibe coding to sophisticated context engineering. Today, I'm going to show you how to take this even further. You can now have an entire software development team working right inside your IDE. Whether it's Cursor AI or Claude Code, this framework can build whatever you want, no matter how big it is.\n\nBefore I tell you about this framework, let me give you some background so you understand how I found this and why it's so important. In one of my previous videos, I introduced a framework that enabled Claude Code to work through command files, assigning different roles to simulate a complete software development team. It essentially supported development across the entire software development life cycle. But the problem was there was no documentation. And even when there was some documentation, there still wasn't a clear proper workflow implemented in that framework. Someone actually commented under that video pointing out that it was based on a workflow I'm about to show you. That led me to discover this new method, which is called the BMAD-METHOD. It's by a contributor named BMAD Code who also has a YouTube channel. And honestly, this workflow is really, really amazing.\n\nThe BMAD-METHOD stands for breakthrough method for Agile AI-driven development, and I'll link its Github repository in the description below. Agile development is the standard approach software engineers use when building real software products. This method involves building software in small chunks, testing those chunks, and shipping them incrementally. The typical workflow starts with a PRD, a product requirement document, which lists the features that need to be built without any technical details. It's just the main list of features that are needed. The development team then breaks this into smaller tasks, works on those chunks one by one, tests them, and gradually ships the final product through iteration. This BMAD workflow enables exactly that same process. What makes it a game-changer is how it brings together everything I've shown you on this channel: tools that make Cursor go step by step and context engineering concepts, combining them into one unified system.\n\nThe method works across all IDEs. So whether you're using Cursor, Windsurf, or Claude Code inside your terminal, this workflow slots right into your setup. I'll walk you through exactly how this method works, and by the end, I'll show you how to install it and get it running inside your own project. Since the Claude Code method I previously showed lacked proper documentation, you might be wondering how you're actually going to learn this new workflow. Well, that's exactly why I'm making this video. The BMAD-METHOD doesn't have that issue. It comes with solid user documentation built right in. It's complete, clear, and everything you need is there. But here's the thing. I'm going to show you the entire workflow step by step in this video. So, you'll only need to dive into the documentation if you want access to extra commands and additional information.\n\nThe method also includes a dedicated agent called orchestrator. When it's loaded, as you can see here, it gets activated and guides you through the entire process. It helps you understand how the system works and keeps everything moving smoothly. Here's the best part. This workflow isn't just for software developers. It's for anyone who wants to build and ship software. And the entire process can be handled by AI agents. I'll also show you a bonus method using AI to dive deeper into this project after you've learned the workflow because there's so much potential here that's seriously worth exploring further.\n\nTo start the workflow, I needed two files: the PRD and the architecture file, which the agents need to make the full app. For that, I went back to the Github repository and navigated to the disc folder, then into Teams and opened the team fullstack.txt file. You can download this file. It contains everything the AI agent needs. I use this for brainstorming with ChatGPT, Claude, or Gemini. They recommend Gemini since it's most cost-effective, but ChatGPT works perfectly fine. I uploaded the file with their recommended instruction where I told the AI that the operating system instructions were attached and it must not break character. I used the brainstorm command in this framework. The asterisk symbol triggers different built-in commands for both commands and agents. The brainstorm command started asking me questions to understand what I wanted to build. I described an iOS productivity app with feature ideas. It set up a brainstorming session and gave me different paths to proceed. I explained what I wanted and didn't want, and it suggested new features like iOS widgets. For UI design, it provided sample interactions, color-coded categories, smart filters, and tap to expand task views. After brainstorming the entire app, it suggested moving forward with a feature matrix. It generated a road map with version one as the MVP and version two with additional features. I made it clear I didn't want voice capture for this to-do list style productivity app. Then it generated my brainstorm markdown file.\n\nI moved to the next command, PM, which switched the role to product manager. I used the create doc command, which started building the PRD through a step-by-step workflow with five stages. Each stage provided menus with decisions real software teams make when drafting PRDs. The workflow proved solid. When I accidentally pressed zero, it immediately told me that wasn't a valid option and provided clear feedback throughout. I completed the entire PRD process and downloaded the final PRD. Then I switched to architect, which builds the app's architecture, including text stack and component connections. The documentation step built out a full architecture plan in interactive mode.\n\nWith both key files ready, the PRD and app architecture, I was ready to move to the IDE and start building. You can open any ID you want, whether it's Claude Code or Cursor. And you'll follow these steps. Once you've completed the installation, which I'll show at the end of the video, you'll see these folders have been created: a cla folder, a cursor folder, and inside these predefined roles representing different roles in a typical software team. After getting your PRD and architecture files, you'll use these roles in a step-by-step process to build out your product. This workflow loops through each methodically. There's one manual step. You'll need to create a folder named docs and place the architecture.md and prd.md files inside it. The other folders are generated automatically by the agents.\n\nThe first agent is the PO agent, which stands for product owner. This is the agent you'll initialize first. In Cursor, agents are initialized using a special command format. You type PO, it suggests the agent. You select it and start it. In Claude Code, you use a slash command instead. Even though I'm using Cursor in this walkthrough, you can follow the same process in whatever ID you're using. I'll show you the full list of supported IDEs at the end. Once the PO agent is active, you'll use the shard doc command and give it the path to your documentation files, both the PRD and the architecture file. The term shard refers to how it breaks your PRD and architecture documents into smaller index chunks so they can be followed step by step, organizing everything into manageable tasks. This is where the Agile-driven approach kicks in. Instead of building the whole app at once, you focus on one piece at a time, designing it, building it, testing it, then moving to the next. Once sharding is done, it confirms completion and you're ready to move to the next agent.\n\nMoving to the next agent, the scrum master. I initialized it using the Cursor rule file and ran its method called draft. It checked my PRD and saw that everything was well defined except that I hadn't generated any epics. Epics are supposed to be created using a separate method called create epic, which should have been run earlier in ChatGPT. This would have broken down the PRD into multiple epics, four epics total in this case. The workflow is tight. So the agent detected this and immediately offered to run the epic generation for me. I selected the option by typing one, and it automatically created epics based on my PRD. Epics are big chunks of the PRD divided into major steps. Inside each epic are stories. For example, epic 1 has stories like 1.1, 1.2, and so on. Epic 4 has stories going up to 4.4. I ended up with 16 stories total, four per epic. Once the epics were done, the Scrum Master agent generated all of the stories. Story 1.1, for example, is about basic task creation and storage. When these stories are first created, their status is set to draft. This needs to be manually changed to approved by typing that into the file and saving it. That approval signals to the next agent, usually the developer, that the story is ready to be worked on.\n\nOnce I change the status to approved, I move to the next agent, which is the dev agent. The dev agent is straightforward. It starts up and loads, then asks which story to implement. In real-world software, stories aren't always implemented sequentially. Some can be done independently. I told it to begin with story 1.1, and it followed the story exactly. The story doesn't just contain tasks. It breaks those tasks down into subtasks. It's incredibly modular, tightly controlled, and nothing is left vague for the AI. I started each agent in a new chat, which is important. These files are large and take up context space. Splitting agents into separate chats helps avoid confusion and keeps things clean. Once the story is complete, its status changes to ready for review, not done. This is intentional. These stories need to go through testing before they're considered fully complete.\n\nOh, and if you're enjoying the content, please hit that subscribe button. We've also launched channel memberships. 93 people have already joined our first tier. Members get priority replies to comments, so if you need feedback or have questions, that's the best way to reach us. We're considering adding more tiers based on the incredible support so far.\n\nTesting has its own agent. I initialized it with its rule file called the review method, and it checked that everything in the story was implemented correctly. It scans the code base for the specific items the story required. If it doesn't spot any critical issues or after it autofixes repetitive code with active refactoring, it marks the story as approved. Once that happens, the agent flips the story status from review to done, completing the full life cycle of a story. From there, the process moves to the next story in the epic. This mirrors how real software teams operate. Behind the scenes, the agent locates all epics, checks each story status, and only works on those that are ready. I could have it spin up five new stories at once. It will still verify whether earlier stories are complete before moving forward. That's what makes the workflow so robust. Starting each agent in a new chat avoids context length issues. In my case, the agent saw that the next item was task list display and basic organization. It pulled key insights from the previous story plus architectural context, bundled that into a single story packet, and handed it off. At that point, I opened a fresh chat, started the dev agent again, and it immediately began work on the next story. Easy, controlled, and perfectly in line with real Agile development.\n\nThat was the entire workflow. Before showing the installation, I'll explain how I understood this system. I opened the Github link for the BMAD-METHOD and changed the URL by replacing Github with Git ingest. This tool converts any Github repo into a format readable for large language models. I opened Claude, pasted the git ingest link, uploaded the file, and asked questions about the workflow. Claude explained everything step by step, which is how I understood the full workflow before running it myself.\n\nNow for the installation process. The installation is actually pretty easy. You don't need to copy and paste all the files. Start by heading to the Github repository and copying the npx command provided there. Open the terminal in Claude Code or Cursor and paste that command. This setup is project specific, so it needs to be run separately inside each project where the BMAD workflow will be used. This keeps everything self-contained and clean. Once the command is pasted, the installer starts up. First, it asks for the full path to the project directory. After providing the path, it asks what to install. Select the first option, install BMAD agile core system. This sets up the BMAD core inside the project. Next, it asks if the PRD should be split into multiple files. I selected yes. Then it asks if the architecture documentation should also be sharded. I selected yes again. The installer then shows IDE selection options. Multiple IDEs can be selected at once. I selected Cursor, Claude Code, and Windsurf. After confirming, it asks about including pre-built web bundles. Since I followed the method shown earlier, I selected no. Once installation is complete, all the rule files appear inside the project. The IDE might need to be restarted for them to show up, but once that's done, they're ready to go. For example, if I type PM, the PMDC file shows up and can be run to follow the full BMAD workflow.\n\nThat brings us to the end of this video. If you'd like to support the channel and help us keep making videos like this, you can do so by using the super thanks button below. As always, thank you for watching, and I'll see you in the next one.\n",
  "dumpedAt": "2025-07-21T18:43:26.483Z"
}