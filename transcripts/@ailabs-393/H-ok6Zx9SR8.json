{
  "episodeId": "H-ok6Zx9SR8",
  "channelSlug": "@ailabs-393",
  "title": "Generate The PERFECT App UI Every Time with this 2-Step Cursor Guide",
  "publishedAt": "2025-06-27T22:08:28.000Z",
  "rawLines": [
    {
      "lang": "en",
      "text": "Making websites and apps look good is",
      "offset": 0.16,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "really hard. The hardest part, coming up",
      "offset": 2.24,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "with cool ideas. Sure, you can copy",
      "offset": 4.08,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "designs from other websites, but guess",
      "offset": 6.08,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "what? Someone else had to think of those",
      "offset": 8,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "designs first. You can find lots of",
      "offset": 10.08,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "design ideas online. You can even grab",
      "offset": 11.92,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "ready-made designs and put them right in",
      "offset": 14.08,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "your app. But what if you want to make",
      "offset": 15.92,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "something that's totally yours? Well, if",
      "offset": 17.68,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "you ask AI to design something new, it",
      "offset": 20,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "will make something really boring,",
      "offset": 22.48,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "something nobody likes, and something",
      "offset": 24.32,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "you definitely don't want to use. But",
      "offset": 26.24,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "here's where it gets crazy. What if you",
      "offset": 28.32,
      "duration": 3.919
    },
    {
      "lang": "en",
      "text": "had the ability to generate multiple",
      "offset": 30.24,
      "duration": 4.479
    },
    {
      "lang": "en",
      "text": "designs iteratively until you got one",
      "offset": 32.239,
      "duration": 4.401
    },
    {
      "lang": "en",
      "text": "that you actually loved? This is where",
      "offset": 34.719,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "this simple cursor two-part method comes",
      "offset": 36.64,
      "duration": 3.919
    },
    {
      "lang": "en",
      "text": "in. Let me give you a little bit of",
      "offset": 38.879,
      "duration": 3.921
    },
    {
      "lang": "en",
      "text": "background before we dive in. So Jason",
      "offset": 40.559,
      "duration": 5.121
    },
    {
      "lang": "en",
      "text": "Zho over on X released something called",
      "offset": 42.8,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "Superdesign Dev. But there was a problem",
      "offset": 45.68,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "with this that led me toward my two-step",
      "offset": 47.68,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "method. It's basically a cursor",
      "offset": 49.92,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "extension that lets you create iterative",
      "offset": 51.76,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "UI designs over and over again. And it's",
      "offset": 53.84,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "really cool. I installed it myself.",
      "offset": 56.32,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "Super easy to set up and honestly it",
      "offset": 58.32,
      "duration": 4.079
    },
    {
      "lang": "en",
      "text": "works great. But here's the problem. It",
      "offset": 60.48,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "runs on API based usage. Right now it's",
      "offset": 62.399,
      "duration": 5.121
    },
    {
      "lang": "en",
      "text": "using Anthropic's clawed API in the",
      "offset": 65.36,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "background and that gets expensive",
      "offset": 67.52,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "really fast. So using this iterative",
      "offset": 69.2,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "design agent becomes costly. And I",
      "offset": 71.52,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "thought, wait, why can't I just use my",
      "offset": 73.68,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "existing $20 cursor subscription to get",
      "offset": 75.76,
      "duration": 4.719
    },
    {
      "lang": "en",
      "text": "the same results? Then I saw another",
      "offset": 78.56,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "video where he used Claude code to build",
      "offset": 80.479,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "an iterative design workflow. But again,",
      "offset": 82.64,
      "duration": 4.479
    },
    {
      "lang": "en",
      "text": "same issue. either you need to subscribe",
      "offset": 85.119,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "to Claude Code for another $20 or use",
      "offset": 87.119,
      "duration": 4.881
    },
    {
      "lang": "en",
      "text": "the API, which adds up. So, here's what",
      "offset": 89.759,
      "duration": 4.561
    },
    {
      "lang": "en",
      "text": "I did instead. I used Cursor's built-in",
      "offset": 92,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "rule system to build this iterative UI",
      "offset": 94.32,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "workflow. Now, if you don't know what",
      "offset": 97.04,
      "duration": 3.52
    },
    {
      "lang": "en",
      "text": "these rules are, they're really easy to",
      "offset": 98.64,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "create. They basically affect how the",
      "offset": 100.56,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "cursor agent behaves. It's really easy",
      "offset": 102.4,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "to create them. You just go into the",
      "offset": 104.56,
      "duration": 3.519
    },
    {
      "lang": "en",
      "text": "settings and click on a button to",
      "offset": 106.64,
      "duration": 3.439
    },
    {
      "lang": "en",
      "text": "initialize them, then select the mode.",
      "offset": 108.079,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "All the rule files I'm about to show you",
      "offset": 110.079,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "today are going to be set to manual and",
      "offset": 112.159,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "you have to call them in the agent",
      "offset": 114.399,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "yourself. Now I can generate as many UI",
      "offset": 116.079,
      "duration": 5.281
    },
    {
      "lang": "en",
      "text": "variations as I want directly in cursor",
      "offset": 118.799,
      "duration": 5.041
    },
    {
      "lang": "en",
      "text": "without paying for extra API usage. I",
      "offset": 121.36,
      "duration": 4.079
    },
    {
      "lang": "en",
      "text": "pick the one I like and continue",
      "offset": 123.84,
      "duration": 3.36
    },
    {
      "lang": "en",
      "text": "designing from there and it's honestly",
      "offset": 125.439,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "really simple to do. If you're using",
      "offset": 127.2,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "cloud code instead of cursor, this still",
      "offset": 129.039,
      "duration": 4.641
    },
    {
      "lang": "en",
      "text": "works. In a previous video, I showed how",
      "offset": 131.36,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "to make custom commands using the",
      "offset": 133.68,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "arguments tag. You plug in a prompt,",
      "offset": 135.52,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "pass in a variable, and it runs exactly",
      "offset": 137.68,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "what you told it to. Cursor rules work",
      "offset": 139.92,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "the same way. So essentially, cursor",
      "offset": 142.16,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "rules can replicate this entire flow.",
      "offset": 144.4,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "The only area where claude code has an",
      "offset": 146.8,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "advantage right now is spinning up",
      "offset": 149.04,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "multiple agents at once. Great for",
      "offset": 151.04,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "managing complex context. But until",
      "offset": 153.2,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "cursor adds that feature, we can get",
      "offset": 155.36,
      "duration": 4.239
    },
    {
      "lang": "en",
      "text": "pretty far just using rule files. You",
      "offset": 157.36,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "can generate endless UI variations, test",
      "offset": 159.599,
      "duration": 4.081
    },
    {
      "lang": "en",
      "text": "them out, and pick the best one to",
      "offset": 162,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "continue with. Okay, so before we get",
      "offset": 163.68,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "into the actual two-step method for",
      "offset": 165.92,
      "duration": 4.319
    },
    {
      "lang": "en",
      "text": "generating these iterative designs using",
      "offset": 168,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "cursor, let me quickly explain how it",
      "offset": 170.239,
      "duration": 4.161
    },
    {
      "lang": "en",
      "text": "works at a basic level. In a previous",
      "offset": 172.4,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "video, I talked about how you can",
      "offset": 174.4,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "generate a design.json file from any",
      "offset": 176.16,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "image and then use that to create",
      "offset": 178.72,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "consistent beautiful designs. So, let me",
      "offset": 180.56,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "walk you through that. In this example,",
      "offset": 182.72,
      "duration": 4.159
    },
    {
      "lang": "en",
      "text": "I started with a simple landing page UI",
      "offset": 184.4,
      "duration": 4.559
    },
    {
      "lang": "en",
      "text": "image. I wanted to build designs that",
      "offset": 186.879,
      "duration": 3.761
    },
    {
      "lang": "en",
      "text": "followed its color scheme and design",
      "offset": 188.959,
      "duration": 4.081
    },
    {
      "lang": "en",
      "text": "language. So I created a custom command",
      "offset": 190.64,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "in claude and the same one in cursor.",
      "offset": 193.04,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "You can see it right here. Both commands",
      "offset": 195.28,
      "duration": 3.679
    },
    {
      "lang": "en",
      "text": "basically do the same thing. They",
      "offset": 197.36,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "generate multiple designs based on a",
      "offset": 198.959,
      "duration": 4.721
    },
    {
      "lang": "en",
      "text": "design.json that gets created using the",
      "offset": 201.04,
      "duration": 5.52
    },
    {
      "lang": "en",
      "text": "extract designd command. It starts with",
      "offset": 203.68,
      "duration": 5.919
    },
    {
      "lang": "en",
      "text": "that extract designd. You give it an",
      "offset": 206.56,
      "duration": 5.44
    },
    {
      "lang": "en",
      "text": "image inside cursor and it uses a rule",
      "offset": 209.599,
      "duration": 4.801
    },
    {
      "lang": "en",
      "text": "file to extract the design details. Once",
      "offset": 212,
      "duration": 5.2
    },
    {
      "lang": "en",
      "text": "that's done, it saves the design.json in",
      "offset": 214.4,
      "duration": 5.28
    },
    {
      "lang": "en",
      "text": "the designs folder. Then I used both",
      "offset": 217.2,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "Claude and cursor to generate UI designs",
      "offset": 219.68,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "from that file. You can see the two",
      "offset": 222,
      "duration": 4.159
    },
    {
      "lang": "en",
      "text": "folders side by side. One from cursor,",
      "offset": 223.68,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "one from Claude. Let me show you what I",
      "offset": 226.159,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "mean. I asked cursor to generate a to-do",
      "offset": 227.92,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "list tracker using the multiple UI rule",
      "offset": 230.159,
      "duration": 4.241
    },
    {
      "lang": "en",
      "text": "file. And since it already had the",
      "offset": 232.56,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "design.json reference, it used that to",
      "offset": 234.4,
      "duration": 4.559
    },
    {
      "lang": "en",
      "text": "create these designs. You can tell they",
      "offset": 236.959,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "all follow the same color palette and",
      "offset": 238.959,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "design language from the original image.",
      "offset": 240.879,
      "duration": 3.841
    },
    {
      "lang": "en",
      "text": "But each one is slightly different in",
      "offset": 242.879,
      "duration": 3.841
    },
    {
      "lang": "en",
      "text": "layout or element styling. I did the",
      "offset": 244.72,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "exact same thing in Claude code. This",
      "offset": 246.72,
      "duration": 4.079
    },
    {
      "lang": "en",
      "text": "time I asked it to create a calculator",
      "offset": 248.72,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "app using the same multiple UI rule.",
      "offset": 250.799,
      "duration": 4.241
    },
    {
      "lang": "en",
      "text": "Claude was also able to generate",
      "offset": 253.28,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "different design variations that stayed",
      "offset": 255.04,
      "duration": 4.159
    },
    {
      "lang": "en",
      "text": "consistent with the design language. Now",
      "offset": 257.12,
      "duration": 4.079
    },
    {
      "lang": "en",
      "text": "the key difference Claude spins up",
      "offset": 259.199,
      "duration": 4.241
    },
    {
      "lang": "en",
      "text": "multiple agents at once so it can",
      "offset": 261.199,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "generate designs much faster if you can",
      "offset": 263.44,
      "duration": 5.199
    },
    {
      "lang": "en",
      "text": "afford the API cost or an extra $20.",
      "offset": 265.759,
      "duration": 5.681
    },
    {
      "lang": "en",
      "text": "Cursor goes one by one but in both cases",
      "offset": 268.639,
      "duration": 5.041
    },
    {
      "lang": "en",
      "text": "the output was surprisingly good and",
      "offset": 271.44,
      "duration": 4.479
    },
    {
      "lang": "en",
      "text": "very consistent. Now let's move on to",
      "offset": 273.68,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "the first step of the two-step method.",
      "offset": 275.919,
      "duration": 4.401
    },
    {
      "lang": "en",
      "text": "Step one is all about creating targeted",
      "offset": 278,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "design variations from your existing",
      "offset": 280.32,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "designs. What I mean is you can generate",
      "offset": 282.24,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "designs tailored for different use cases",
      "offset": 284.4,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "using custom rule files. And for that",
      "offset": 286.56,
      "duration": 3.919
    },
    {
      "lang": "en",
      "text": "you can create generation rules for",
      "offset": 288.72,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "those different use cases. For example,",
      "offset": 290.479,
      "duration": 3.841
    },
    {
      "lang": "en",
      "text": "right now I have this food ordering app",
      "offset": 292.4,
      "duration": 4.079
    },
    {
      "lang": "en",
      "text": "and the design is responsive. So if I",
      "offset": 294.32,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "convert it, you'll see it has a proper",
      "offset": 296.479,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "mobile app UI. But what if I want to",
      "offset": 298.32,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "generate more designs based on different",
      "offset": 300.479,
      "duration": 3.921
    },
    {
      "lang": "en",
      "text": "personas? Well, what I can do is",
      "offset": 302.4,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "reference the original index file and",
      "offset": 304.4,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "then apply the persona rule. This",
      "offset": 306.24,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "generates multiple variations of the",
      "offset": 308.16,
      "duration": 3.759
    },
    {
      "lang": "en",
      "text": "same design, each tailored to a",
      "offset": 310.16,
      "duration": 3.28
    },
    {
      "lang": "en",
      "text": "different persona. Let me show you",
      "offset": 311.919,
      "duration": 3.521
    },
    {
      "lang": "en",
      "text": "exactly what that looks like once it",
      "offset": 313.44,
      "duration": 3.759
    },
    {
      "lang": "en",
      "text": "finishes generating. Based on the",
      "offset": 315.44,
      "duration": 4.319
    },
    {
      "lang": "en",
      "text": "personas, it generated a chef hub for",
      "offset": 317.199,
      "duration": 5.361
    },
    {
      "lang": "en",
      "text": "chefs, a campus eats style UI for",
      "offset": 319.759,
      "duration": 4.481
    },
    {
      "lang": "en",
      "text": "students, and a really corporatel",
      "offset": 322.56,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "looking website for executives. But this",
      "offset": 324.24,
      "duration": 4.239
    },
    {
      "lang": "en",
      "text": "is just one example. I also made other",
      "offset": 326.32,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "targeted generators like one for device",
      "offset": 328.479,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "type and one for geoloccation. This",
      "offset": 330.56,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "means I can experiment with different",
      "offset": 332.639,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "kinds of UIs. For instance, I made one",
      "offset": 334.24,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "specifically for mobile and while it",
      "offset": 336.639,
      "duration": 3.521
    },
    {
      "lang": "en",
      "text": "might not look drastically different,",
      "offset": 338.56,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "the icons are noticeably enlarged. Then",
      "offset": 340.16,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "there's one for desktop and it even came",
      "offset": 342.4,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "up with this version for TV which it",
      "offset": 344.4,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "named food hub for TV. And the",
      "offset": 346.4,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "geoloccation-based one, it generated",
      "offset": 348.24,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "versions for specific regions. It",
      "offset": 350.4,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "changed the languages, tweaked the",
      "offset": 352.4,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "colors, and even adjusted the layout",
      "offset": 354,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "orientation. The point is you can now",
      "offset": 356,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "create infinite targeted variations",
      "offset": 358.24,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "using these rule files. And the best",
      "offset": 360.4,
      "duration": 3.919
    },
    {
      "lang": "en",
      "text": "part is you control exactly how they",
      "offset": 362.32,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "work and they're not even hard to make.",
      "offset": 364.319,
      "duration": 3.681
    },
    {
      "lang": "en",
      "text": "You can just ask Claude to generate them",
      "offset": 366.16,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "for you. There's one specific command",
      "offset": 368,
      "duration": 3.52
    },
    {
      "lang": "en",
      "text": "I'll show you at the end. It helps",
      "offset": 369.84,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "create really solid rule files,",
      "offset": 371.52,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "especially for complex workflows. You'll",
      "offset": 373.52,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "find these targeted rule file in the",
      "offset": 375.68,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "description below as well, so you can",
      "offset": 377.6,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "study them too. But aside from that,",
      "offset": 379.28,
      "duration": 4.639
    },
    {
      "lang": "en",
      "text": "it's super easy to get started. Oh, and",
      "offset": 381.28,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "if you're enjoying the content we're",
      "offset": 383.919,
      "duration": 3.441
    },
    {
      "lang": "en",
      "text": "making, I'd really appreciate it if you",
      "offset": 385.44,
      "duration": 3.759
    },
    {
      "lang": "en",
      "text": "hit that subscribe button. We're also",
      "offset": 387.36,
      "duration": 3.52
    },
    {
      "lang": "en",
      "text": "testing out channel memberships.",
      "offset": 389.199,
      "duration": 4.321
    },
    {
      "lang": "en",
      "text": "Launched the first tier as a test and 79",
      "offset": 390.88,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "people have joined so far. The support's",
      "offset": 393.52,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "been incredible. So, we're thinking",
      "offset": 395.68,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "about launching additional tiers. Right",
      "offset": 397.28,
      "duration": 4.479
    },
    {
      "lang": "en",
      "text": "now, members get priority replies to",
      "offset": 399.44,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "your comments. Perfect. If you need",
      "offset": 401.759,
      "duration": 3.921
    },
    {
      "lang": "en",
      "text": "feedback or have questions. Now, let's",
      "offset": 403.44,
      "duration": 3.759
    },
    {
      "lang": "en",
      "text": "move on to the second part of the",
      "offset": 405.68,
      "duration": 4.239
    },
    {
      "lang": "en",
      "text": "two-step method. Step two is about rapid",
      "offset": 407.199,
      "duration": 5.361
    },
    {
      "lang": "en",
      "text": "iteration on existing designs. So if you",
      "offset": 409.919,
      "duration": 4.801
    },
    {
      "lang": "en",
      "text": "already have a design you like but want",
      "offset": 412.56,
      "duration": 4.479
    },
    {
      "lang": "en",
      "text": "to explore different variations quickly",
      "offset": 414.72,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "or if you want to start fresh with a",
      "offset": 417.039,
      "duration": 4.081
    },
    {
      "lang": "en",
      "text": "simple design and iterate from there",
      "offset": 418.96,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "then we can use this infinite design",
      "offset": 421.12,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "generator. Now if you're thinking why",
      "offset": 422.96,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "not just use this instead of making",
      "offset": 425.12,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "targeted rule files. Well the targeted",
      "offset": 426.96,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "rule files can include examples,",
      "offset": 429.28,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "specific constraints and detailed",
      "offset": 431.28,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "instructions that help create much more",
      "offset": 433.12,
      "duration": 3.919
    },
    {
      "lang": "en",
      "text": "precise variations. It's way more",
      "offset": 435.12,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "powerful than just adding a simple",
      "offset": 437.039,
      "duration": 3.521
    },
    {
      "lang": "en",
      "text": "prompt. But this is specifically",
      "offset": 438.8,
      "duration": 3.839
    },
    {
      "lang": "en",
      "text": "powerful when you have honed in on one",
      "offset": 440.56,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "design and then you just want random",
      "offset": 442.639,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "variations in its design or style. Let",
      "offset": 444.72,
      "duration": 4.319
    },
    {
      "lang": "en",
      "text": "me show you how this works. Here I told",
      "offset": 447.039,
      "duration": 4.321
    },
    {
      "lang": "en",
      "text": "it to create a basic notetaking app",
      "offset": 449.039,
      "duration": 4.641
    },
    {
      "lang": "en",
      "text": "design in HTML and it created this",
      "offset": 451.36,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "really basic design. Now I want more",
      "offset": 453.68,
      "duration": 4.239
    },
    {
      "lang": "en",
      "text": "variations based on this. So I reference",
      "offset": 455.759,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "the original index.html file and apply",
      "offset": 457.919,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "the infinite design rule file. Here's",
      "offset": 460.639,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "what happens. It creates a variations",
      "offset": 462.639,
      "duration": 4.161
    },
    {
      "lang": "en",
      "text": "folder, generates three different design",
      "offset": 464.639,
      "duration": 4.481
    },
    {
      "lang": "en",
      "text": "types, and copies the original design as",
      "offset": 466.8,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "source.html for reference. And check out",
      "offset": 469.12,
      "duration": 4.639
    },
    {
      "lang": "en",
      "text": "what it generated. A dark themed",
      "offset": 471.84,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "version, this rainbow style website. I",
      "offset": 473.759,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "don't love the colors, but the layout is",
      "offset": 476.16,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "solid. And this clean, minimalistic",
      "offset": 477.759,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "design. The cool part is you can keep",
      "offset": 479.84,
      "duration": 3.919
    },
    {
      "lang": "en",
      "text": "iterating endlessly. Here's how the",
      "offset": 481.759,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "workflow works. When you first run the",
      "offset": 483.759,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "rule, it creates the folder structure.",
      "offset": 485.759,
      "duration": 3.921
    },
    {
      "lang": "en",
      "text": "If you want to iterate on a specific",
      "offset": 487.919,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "design later, it takes whichever file",
      "offset": 489.68,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "you reference, sets it as the new",
      "offset": 491.759,
      "duration": 3.521
    },
    {
      "lang": "en",
      "text": "source, and generates three more",
      "offset": 493.52,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "variations in the same folder. Let me",
      "offset": 495.28,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "show you a live example. I like the",
      "offset": 497.28,
      "duration": 3.919
    },
    {
      "lang": "en",
      "text": "structure and animations of this rainbow",
      "offset": 499.12,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "design, but I hate the colors and",
      "offset": 501.199,
      "duration": 4.241
    },
    {
      "lang": "en",
      "text": "styling, so I can iterate on just that",
      "offset": 503.12,
      "duration": 4.639
    },
    {
      "lang": "en",
      "text": "specific design. Now, before generating",
      "offset": 505.44,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "new variations, I always start a fresh",
      "offset": 507.759,
      "duration": 4.561
    },
    {
      "lang": "en",
      "text": "chat so it doesn't carry over previous",
      "offset": 510.16,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "context. This helps it follow the rule",
      "offset": 512.32,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "file instructions precisely and generate",
      "offset": 514.32,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "truly fresh variations. So, I'll",
      "offset": 516.719,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "reference design 2.html with the",
      "offset": 518.88,
      "duration": 4.639
    },
    {
      "lang": "en",
      "text": "infinite design rule and ask for color",
      "offset": 521.279,
      "duration": 4.641
    },
    {
      "lang": "en",
      "text": "and style variations. Once it's done,",
      "offset": 523.519,
      "duration": 4.641
    },
    {
      "lang": "en",
      "text": "you can see the results. Same layout and",
      "offset": 525.92,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "animations, but completely different",
      "offset": 528.16,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "colors and styles. This one's modern.",
      "offset": 530.08,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "This has an ocean theme. And this one's",
      "offset": 532.32,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "eco themed. It kept what worked and",
      "offset": 534.16,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "changed what I wanted. Oh, and you could",
      "offset": 536.16,
      "duration": 4.799
    },
    {
      "lang": "en",
      "text": "use clawed 3.5 sonnet for speed, but the",
      "offset": 538,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "thinking models give you more precise",
      "offset": 540.959,
      "duration": 3.841
    },
    {
      "lang": "en",
      "text": "control since they can better understand",
      "offset": 542.88,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "and execute complex rule instructions.",
      "offset": 544.8,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "And that's the complete two-step method.",
      "offset": 547.6,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "Targeted variations with custom rule",
      "offset": 549.6,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "files, then rapid iteration for endless",
      "offset": 551.68,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "design possibilities, all using your",
      "offset": 554.08,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "existing cursor subscription. No extra",
      "offset": 556.08,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "API costs. I've put all the rule files",
      "offset": 558.32,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "in the description below so you can",
      "offset": 560.72,
      "duration": 3.679
    },
    {
      "lang": "en",
      "text": "start experimenting right away. Give it",
      "offset": 562.48,
      "duration": 3.919
    },
    {
      "lang": "en",
      "text": "a try and let me know what designs you",
      "offset": 564.399,
      "duration": 4.161
    },
    {
      "lang": "en",
      "text": "create with this method. Oh, and I",
      "offset": 566.399,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "mentioned that I tell you how to create",
      "offset": 568.56,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "these rules easily with Claude. So, what",
      "offset": 570.399,
      "duration": 4.241
    },
    {
      "lang": "en",
      "text": "you need to do is describe your workflow",
      "offset": 572.48,
      "duration": 4.479
    },
    {
      "lang": "en",
      "text": "in plain English step by step, then tell",
      "offset": 574.64,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "it to write the rule file and do English",
      "offset": 576.959,
      "duration": 4.401
    },
    {
      "lang": "en",
      "text": "programming. This has generated really",
      "offset": 579.36,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "amazing rule files for me with extensive",
      "offset": 581.36,
      "duration": 4.479
    },
    {
      "lang": "en",
      "text": "workflows, and the AI agents have no",
      "offset": 583.68,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "problems following them because the",
      "offset": 585.839,
      "duration": 3.601
    },
    {
      "lang": "en",
      "text": "rules are so clear and to the point.",
      "offset": 587.36,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "That brings us to the end of this video.",
      "offset": 589.44,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "If you'd like to support the channel and",
      "offset": 591.36,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "help us keep making videos like this,",
      "offset": 593.12,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "you can do so by using the super thanks",
      "offset": 595.2,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "button below. As always, thank you for",
      "offset": 597.2,
      "duration": 3.52
    },
    {
      "lang": "en",
      "text": "watching and I'll see you in the next",
      "offset": 599.2,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "one.",
      "offset": 600.72,
      "duration": 2.48
    }
  ],
  "cleanText": "Making websites and apps look good is really hard. The hardest part is coming up with cool ideas. Sure, you can copy designs from other websites, but guess what? Someone else had to think of those designs first. You can find lots of design ideas online. You can even grab ready-made designs and put them right in your app. But what if you want to make something that's totally yours? Well, if you ask AI to design something new, it will make something really boring, something nobody likes, and something you definitely don't want to use. But here's where it gets crazy. What if you had the ability to generate multiple designs iteratively until you got one that you actually loved? This is where this simple Cursor two-part method comes in. Let me give you a little bit of background before we dive in. So Jason Zho over on X released something called Superdesign Dev. But there was a problem with this that led me toward my two-step method. It's basically a Cursor extension that lets you create iterative UI designs over and over again. And it's really cool. I installed it myself. Super easy to set up and honestly it works great. But here's the problem. It runs on API based usage. Right now it's using Anthropic's clawed API in the background and that gets expensive really fast. So using this iterative design agent becomes costly. And I thought, wait, why can't I just use my existing $20 Cursor subscription to get the same results? Then I saw another video where he used Claude code to build an iterative design workflow. But again, same issue. Either you need to subscribe to Claude Code for another $20 or use the API, which adds up. So, here's what I did instead. I used Cursor's built-in rule system to build this iterative UI workflow. Now, if you don't know what these rules are, they're really easy to create. They basically affect how the Cursor agent behaves. It's really easy to create them. You just go into the settings and click on a button to initialize them, then select the mode. All the rule files I'm about to show you today are going to be set to manual and you have to call them in the agent yourself. Now I can generate as many UI variations as I want directly in Cursor without paying for extra API usage. I pick the one I like and continue designing from there and it's honestly really simple to do. If you're using cloud code instead of Cursor, this still works. In a previous video, I showed how to make custom commands using the arguments tag. You plug in a prompt, pass in a variable, and it runs exactly what you told it to. Cursor rules work the same way. So essentially, Cursor rules can replicate this entire flow. The only area where Claude code has an advantage right now is spinning up multiple agents at once. Great for managing complex context. But until Cursor adds that feature, we can get pretty far just using rule files. You can generate endless UI variations, test them out, and pick the best one to continue with. Okay, so before we get into the actual two-step method for generating these iterative designs using Cursor, let me quickly explain how it works at a basic level. In a previous video, I talked about how you can generate a design.json file from any image and then use that to create consistent beautiful designs. So, let me walk you through that. In this example, I started with a simple landing page UI image. I wanted to build designs that followed its color scheme and design language. So I created a custom command in Claude and the same one in Cursor. You can see it right here. Both commands basically do the same thing. They generate multiple designs based on a design.json that gets created using the extract designd command. It starts with that extract designd. You give it an image inside Cursor and it uses a rule file to extract the design details. Once that's done, it saves the design.json in the designs folder. Then I used both Claude and Cursor to generate UI designs from that file. You can see the two folders side by side. One from Cursor, one from Claude. Let me show you what I mean. I asked Cursor to generate a to-do list tracker using the multiple UI rule file. And since it already had the design.json reference, it used that to create these designs. You can tell they all follow the same color palette and design language from the original image. But each one is slightly different in layout or element styling. I did the exact same thing in Claude code. This time I asked it to create a calculator app using the same multiple UI rule. Claude was also able to generate different design variations that stayed consistent with the design language. Now the key difference Claude spins up multiple agents at once so it can generate designs much faster if you can afford the API cost or an extra $20. Cursor goes one by one but in both cases the output was surprisingly good and very consistent. Now let's move on to the first step of the two-step method. Step one is all about creating targeted design variations from your existing designs. What I mean is you can generate designs tailored for different use cases using custom rule files. And for that you can create generation rules for those different use cases. For example, right now I have this food ordering app and the design is responsive. So if I convert it, you'll see it has a proper mobile app UI. But what if I want to generate more designs based on different personas? Well, what I can do is reference the original index file and then apply the persona rule. This generates multiple variations of the same design, each tailored to a different persona. Let me show you exactly what that looks like once it finishes generating. Based on the personas, it generated a chef hub for chefs, a campus eats style UI for students, and a really corporate looking website for executives. But this is just one example. I also made other targeted generators like one for device type and one for geoloccation. This means I can experiment with different kinds of UIs. For instance, I made one specifically for mobile and while it might not look drastically different, the icons are noticeably enlarged. Then there's one for desktop and it even came up with this version for TV which it named food hub for TV. And the geoloccation-based one, it generated versions for specific regions. It changed the languages, tweaked the colors, and even adjusted the layout orientation. The point is you can now create infinite targeted variations using these rule files. And the best part is you control exactly how they work and they're not even hard to make. You can just ask Claude to generate them for you. There's one specific command I'll show you at the end. It helps create really solid rule files, especially for complex workflows. You'll find these targeted rule file in the description below as well, so you can study them too. But aside from that, it's super easy to get started. Oh, and if you're enjoying the content we're making, I'd really appreciate it if you hit that subscribe button. We're also testing out channel memberships. Launched the first tier as a test and 79 people have joined so far. The support's been incredible. So, we're thinking about launching additional tiers. Right now, members get priority replies to your comments. Perfect. If you need feedback or have questions. Now, let's move on to the second part of the two-step method. Step two is about rapid iteration on existing designs. So if you already have a design you like but want to explore different variations quickly or if you want to start fresh with a simple design and iterate from there then we can use this infinite design generator. Now if you're thinking why not just use this instead of making targeted rule files. Well the targeted rule files can include examples, specific constraints and detailed instructions that help create much more precise variations. It's way more powerful than just adding a simple prompt. But this is specifically powerful when you have honed in on one design and then you just want random variations in its design or style. Let me show you how this works. Here I told it to create a basic notetaking app design in HTML and it created this really basic design. Now I want more variations based on this. So I reference the original index.html file and apply the infinite design rule file. Here's what happens. It creates a variations folder, generates three different design types, and copies the original design as source.html for reference. And check out what it generated. A dark themed version, this rainbow style website. I don't love the colors, but the layout is solid. And this clean, minimalistic design. The cool part is you can keep iterating endlessly. Here's how the workflow works. When you first run the rule, it creates the folder structure. If you want to iterate on a specific design later, it takes whichever file you reference, sets it as the new source, and generates three more variations in the same folder. Let me show you a live example. I like the structure and animations of this rainbow design, but I hate the colors and styling, so I can iterate on just that specific design. Now, before generating new variations, I always start a fresh chat so it doesn't carry over previous context. This helps it follow the rule file instructions precisely and generate truly fresh variations. So, I'll reference design 2.html with the infinite design rule and ask for color and style variations. Once it's done, you can see the results. Same layout and animations, but completely different colors and styles. This one's modern. This has an ocean theme. And this one's eco themed. It kept what worked and changed what I wanted. Oh, and you could use clawed 3.5 sonnet for speed, but the thinking models give you more precise control since they can better understand and execute complex rule instructions. And that's the complete two-step method. Targeted variations with custom rule files, then rapid iteration for endless design possibilities, all using your existing Cursor subscription. No extra API costs. I've put all the rule files in the description below so you can start experimenting right away. Give it a try and let me know what designs you create with this method. Oh, and I mentioned that I tell you how to create these rules easily with Claude. So, what you need to do is describe your workflow in plain English step by step, then tell it to write the rule file and do English programming. This has generated really amazing rule files for me with extensive workflows, and the AI agents have no problems following them because the rules are so clear and to the point. That brings us to the end of this video. If you'd like to support the channel and help us keep making videos like this, you can do so by using the super thanks button below. As always, thank you for watching and I'll see you in the next one.\n",
  "dumpedAt": "2025-07-21T18:43:26.148Z"
}