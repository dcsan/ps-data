{
  "episodeId": "mKXzPVIMFYE",
  "channelSlug": "@ailabs-393",
  "title": "Make them remember everything - works for cursor ai + any ai ide",
  "publishedAt": "2025-06-12T21:07:14.000Z",
  "rawLines": [
    {
      "lang": "en",
      "text": "The most important thing about LLMs is",
      "offset": 0.16,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "memory and context. Think about it.",
      "offset": 2.159,
      "duration": 3.841
    },
    {
      "lang": "en",
      "text": "We're living in a multiplatform world",
      "offset": 4.08,
      "duration": 3.679
    },
    {
      "lang": "en",
      "text": "where we constantly jump between",
      "offset": 6,
      "duration": 3.679
    },
    {
      "lang": "en",
      "text": "different AI tools. You have multiple",
      "offset": 7.759,
      "duration": 3.601
    },
    {
      "lang": "en",
      "text": "tabs open in cursor. You're",
      "offset": 9.679,
      "duration": 3.601
    },
    {
      "lang": "en",
      "text": "brainstorming in Claude or working on",
      "offset": 11.36,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "another project in Windsurf. But here's",
      "offset": 13.28,
      "duration": 3.839
    },
    {
      "lang": "en",
      "text": "the problem. Your memory doesn't persist",
      "offset": 15.2,
      "duration": 3.999
    },
    {
      "lang": "en",
      "text": "across these platforms. Now, what if",
      "offset": 17.119,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "there was a small memory box, a",
      "offset": 19.199,
      "duration": 3.601
    },
    {
      "lang": "en",
      "text": "universal container where you could",
      "offset": 21.039,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "store all your context, preferences, and",
      "offset": 22.8,
      "duration": 4.639
    },
    {
      "lang": "en",
      "text": "project details and carry it with you",
      "offset": 25.279,
      "duration": 5.281
    },
    {
      "lang": "en",
      "text": "across every single AI agent and LLM you",
      "offset": 27.439,
      "duration": 5.521
    },
    {
      "lang": "en",
      "text": "use. This wasn't really possible before,",
      "offset": 30.56,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "but ever since MCPS came around, it's",
      "offset": 32.96,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "become incredibly easy to implement. And",
      "offset": 35.36,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "if you're wondering whether it's hard to",
      "offset": 37.36,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "set up, no, it's actually quite simple.",
      "offset": 39.04,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "So, let's get into the video and I'll",
      "offset": 41.36,
      "duration": 3.44
    },
    {
      "lang": "en",
      "text": "show you the universal memory I'm",
      "offset": 43.04,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "talking about. So, the tool I'm about to",
      "offset": 44.8,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "show you is actually called Super Memory",
      "offset": 47.2,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "MCP, and it's built on top of the Super",
      "offset": 49.2,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "Memory API. I'll explain how it works in",
      "offset": 51.36,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "a bit, but essentially it gives you your",
      "offset": 53.68,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "own personal and universal memory MCP.",
      "offset": 55.6,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "And the problem they're solving is",
      "offset": 58.079,
      "duration": 3.28
    },
    {
      "lang": "en",
      "text": "actually pretty interesting. They point",
      "offset": 59.6,
      "duration": 3.759
    },
    {
      "lang": "en",
      "text": "out that everyone is building their own",
      "offset": 61.359,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "memory layer. So, as I already",
      "offset": 63.359,
      "duration": 3.601
    },
    {
      "lang": "en",
      "text": "mentioned, why not just carry it around",
      "offset": 65.119,
      "duration": 3.841
    },
    {
      "lang": "en",
      "text": "with us? They basically give us this",
      "offset": 66.96,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "MCP. You just install it for whichever",
      "offset": 68.96,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "client you're using. You can see all the",
      "offset": 71.36,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "MCP clients listed here. and then go",
      "offset": 73.36,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "ahead and collect memories from those",
      "offset": 75.6,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "clients. It stores them seamlessly. And",
      "offset": 77.36,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "if a memory exists in one client, it",
      "offset": 79.52,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "will automatically be available in the",
      "offset": 81.759,
      "duration": 4.561
    },
    {
      "lang": "en",
      "text": "others as well. This MCP is essentially",
      "offset": 83.52,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "giving you a memory box where you can",
      "offset": 86.32,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "store all your memories, whether they're",
      "offset": 88.32,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "related to a specific project you're",
      "offset": 90.4,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "working on or just general preferences",
      "offset": 92.4,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "you want to keep. You can store any type",
      "offset": 94.4,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "of memory and use it wherever you want.",
      "offset": 96.32,
      "duration": 3.839
    },
    {
      "lang": "en",
      "text": "Now, you might be thinking, how would",
      "offset": 98.56,
      "duration": 3.519
    },
    {
      "lang": "en",
      "text": "you actually use this in your workflow?",
      "offset": 100.159,
      "duration": 4.161
    },
    {
      "lang": "en",
      "text": "Well, there are two main ways. First, if",
      "offset": 102.079,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "you're working in any IDE and want to",
      "offset": 104.32,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "discuss something about your project",
      "offset": 106.399,
      "duration": 3.841
    },
    {
      "lang": "en",
      "text": "with the claw desktop app, you can have",
      "offset": 108,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "persistent memory there, so your context",
      "offset": 110.24,
      "duration": 4.559
    },
    {
      "lang": "en",
      "text": "stays preserved. Or for example, if you",
      "offset": 112.56,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "have multiple windows of your AI IDE",
      "offset": 114.799,
      "duration": 4.801
    },
    {
      "lang": "en",
      "text": "open and want the context to persist",
      "offset": 117.52,
      "duration": 4.239
    },
    {
      "lang": "en",
      "text": "across them, you can use this tool as",
      "offset": 119.6,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "well. Let me show you an example. I'm in",
      "offset": 121.759,
      "duration": 4.161
    },
    {
      "lang": "en",
      "text": "cursor right now and I just told it that",
      "offset": 124,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "I'd like to build a simple water tracker",
      "offset": 125.92,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "app for plants. The first thing I",
      "offset": 128.08,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "mentioned was that the design of the app",
      "offset": 129.92,
      "duration": 4.319
    },
    {
      "lang": "en",
      "text": "should be a 2D pixelated style. Then I",
      "offset": 131.84,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "gave it a few other specifications like",
      "offset": 134.239,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "using Nex.js and asked it to search for",
      "offset": 136.4,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "React libraries that could help create",
      "offset": 138.879,
      "duration": 4.561
    },
    {
      "lang": "en",
      "text": "pixelated components. I also gave it a",
      "offset": 141.04,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "couple of additional requirements. So it",
      "offset": 143.44,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "went ahead and did its thing, found some",
      "offset": 145.44,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "libraries and gave me a response. I told",
      "offset": 147.28,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "it which specific library I wanted to",
      "offset": 149.44,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "use for generating the pixelated plant",
      "offset": 151.52,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "images and cursor built a small little",
      "offset": 153.68,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "app for me. There were a few errors",
      "offset": 155.92,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "along the way, but I just copy pasted",
      "offset": 157.68,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "them into the chat and cursor fixed them",
      "offset": 159.76,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "right away. This is the water tracker",
      "offset": 161.76,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "app it created. Right now, you can see",
      "offset": 163.68,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "I've clicked on all of the plants. So,",
      "offset": 165.84,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "it says they were last watered 0 days",
      "offset": 167.76,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "ago. They have 100% health and they've",
      "offset": 169.92,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "all been watered. This is the pixelated",
      "offset": 172.4,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "design it came up with. It's a cute",
      "offset": 174.319,
      "duration": 3.761
    },
    {
      "lang": "en",
      "text": "little interface, but for now, it's just",
      "offset": 176.08,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "a basic MVP and still missing a lot of",
      "offset": 178.08,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "features. So, here's what I did next. I",
      "offset": 180.48,
      "duration": 3.839
    },
    {
      "lang": "en",
      "text": "asked cursor to generate a description",
      "offset": 182.4,
      "duration": 3.759
    },
    {
      "lang": "en",
      "text": "of the initial prompt I had given the",
      "offset": 184.319,
      "duration": 3.681
    },
    {
      "lang": "en",
      "text": "tools used to build the app and the",
      "offset": 186.159,
      "duration": 3.921
    },
    {
      "lang": "en",
      "text": "structure and features of the MVP. Then",
      "offset": 188,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "I told it to add all of that to memory.",
      "offset": 190.08,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "It went ahead and created a project",
      "offset": 192,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "summary of everything built so far and",
      "offset": 193.68,
      "duration": 4.639
    },
    {
      "lang": "en",
      "text": "then called the MCP tool. If you scroll",
      "offset": 196,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "down, you'll see the second memory that",
      "offset": 198.319,
      "duration": 4.161
    },
    {
      "lang": "en",
      "text": "was added. It details the development of",
      "offset": 200.4,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "the pixelated plant water tracker, what",
      "offset": 202.48,
      "duration": 4.479
    },
    {
      "lang": "en",
      "text": "the MVP included and the technologies",
      "offset": 204.64,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "used. So whenever I want to revisit or",
      "offset": 206.959,
      "duration": 4.081
    },
    {
      "lang": "en",
      "text": "expand the app, all the context is",
      "offset": 209.12,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "already stored. For example, I went into",
      "offset": 211.04,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "Claude and said, &quot;I've built the plant",
      "offset": 213.2,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "water tracker. Pull the context from the",
      "offset": 215.04,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "MCP because I want to add new features.&quot;",
      "offset": 217.12,
      "duration": 4.479
    },
    {
      "lang": "en",
      "text": "Claude searched super memory, retrieved",
      "offset": 219.44,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "the full project details, and gave me a",
      "offset": 221.599,
      "duration": 4.241
    },
    {
      "lang": "en",
      "text": "list of potential new features. Then I",
      "offset": 223.76,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "told it the specific ones I wanted.",
      "offset": 225.84,
      "duration": 3.759
    },
    {
      "lang": "en",
      "text": "Plant management, a separate page for",
      "offset": 227.68,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "the plant library, and some gamification",
      "offset": 229.599,
      "duration": 4.321
    },
    {
      "lang": "en",
      "text": "features. Claude then organized those",
      "offset": 231.84,
      "duration": 4.319
    },
    {
      "lang": "en",
      "text": "into a categorized list of features we",
      "offset": 233.92,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "could add. But I said the list was too",
      "offset": 236.159,
      "duration": 3.681
    },
    {
      "lang": "en",
      "text": "extensive and asked for just the",
      "offset": 237.92,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "essential features to expand the app",
      "offset": 239.84,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "step by step. So it created a more",
      "offset": 241.84,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "focused feature list. I then told it to",
      "offset": 244,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "add the refined list to memory. And once",
      "offset": 246.239,
      "duration": 4.881
    },
    {
      "lang": "en",
      "text": "again it stored it in super memory. Now",
      "offset": 248.48,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "if you check the first memory, it shows",
      "offset": 251.12,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "a document outlining the planned",
      "offset": 253.12,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "features for the pixelated water tracker",
      "offset": 255.04,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "app categorized into three main areas",
      "offset": 257.28,
      "duration": 4.479
    },
    {
      "lang": "en",
      "text": "with several features under each. And",
      "offset": 259.68,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "finally, back in cursor, I told it to",
      "offset": 261.759,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "search memory again to implement some of",
      "offset": 264,
      "duration": 3.919
    },
    {
      "lang": "en",
      "text": "the new features already logged. As",
      "offset": 265.919,
      "duration": 4.161
    },
    {
      "lang": "en",
      "text": "expected, it called the MCP tool,",
      "offset": 267.919,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "checked the memory directory, and",
      "offset": 270.08,
      "duration": 3.52
    },
    {
      "lang": "en",
      "text": "started planning how to implement those",
      "offset": 271.759,
      "duration": 4.081
    },
    {
      "lang": "en",
      "text": "features. Oh, and if you're enjoying the",
      "offset": 273.6,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "content we're making, I'd really",
      "offset": 275.84,
      "duration": 3.359
    },
    {
      "lang": "en",
      "text": "appreciate it if you hit that subscribe",
      "offset": 277.36,
      "duration": 3.839
    },
    {
      "lang": "en",
      "text": "button. We're also starting to test out",
      "offset": 279.199,
      "duration": 3.921
    },
    {
      "lang": "en",
      "text": "channel memberships to help support what",
      "offset": 281.199,
      "duration": 3.681
    },
    {
      "lang": "en",
      "text": "we're building here. Right now, we've",
      "offset": 283.12,
      "duration": 3.519
    },
    {
      "lang": "en",
      "text": "only launched the first tier, and it",
      "offset": 284.88,
      "duration": 3.599
    },
    {
      "lang": "en",
      "text": "gives you priority replies to your",
      "offset": 286.639,
      "duration": 3.361
    },
    {
      "lang": "en",
      "text": "comments. So, if you ever have a",
      "offset": 288.479,
      "duration": 3.201
    },
    {
      "lang": "en",
      "text": "question or want feedback, you'll get",
      "offset": 290,
      "duration": 3.759
    },
    {
      "lang": "en",
      "text": "bumped to the front of the line. If you",
      "offset": 291.68,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "think that telling cursor or any other",
      "offset": 293.759,
      "duration": 4.481
    },
    {
      "lang": "en",
      "text": "IDE to add your project description into",
      "offset": 295.68,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "memory again and again is going to get",
      "offset": 298.24,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "redundant, there's a fix for that, too.",
      "offset": 300.24,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "Just head into your settings. This might",
      "offset": 302.16,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "vary depending on the IDE, but go ahead",
      "offset": 304.16,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "and add project specific rules. As you",
      "offset": 306.4,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "can see here, I've added a rule. And if",
      "offset": 308.8,
      "duration": 3.36
    },
    {
      "lang": "en",
      "text": "I open it, you'll see that I've",
      "offset": 310.72,
      "duration": 3.36
    },
    {
      "lang": "en",
      "text": "instructed it. If any changes are made",
      "offset": 312.16,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "to the app, even structural changes,",
      "offset": 314.08,
      "duration": 4.559
    },
    {
      "lang": "en",
      "text": "dependency updates, or text tag edits,",
      "offset": 316.24,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "it should automatically upload and",
      "offset": 318.639,
      "duration": 4.081
    },
    {
      "lang": "en",
      "text": "update those changes in memory. You can",
      "offset": 320.4,
      "duration": 4.639
    },
    {
      "lang": "en",
      "text": "also set the rule type to always, so",
      "offset": 322.72,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "it's automatically attached to every",
      "offset": 325.039,
      "duration": 4.241
    },
    {
      "lang": "en",
      "text": "chat within the agent. That way, anytime",
      "offset": 326.88,
      "duration": 4.159
    },
    {
      "lang": "en",
      "text": "changes are made to your app, they're",
      "offset": 329.28,
      "duration": 3.759
    },
    {
      "lang": "en",
      "text": "uploaded to memory without you having to",
      "offset": 331.039,
      "duration": 4.481
    },
    {
      "lang": "en",
      "text": "do it manually each time. Now, if you're",
      "offset": 333.039,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "wondering how this actually works,",
      "offset": 335.52,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "basically the MCP has two tools that you",
      "offset": 337.199,
      "duration": 4.481
    },
    {
      "lang": "en",
      "text": "can see. the add to super memory tool",
      "offset": 339.6,
      "duration": 4.159
    },
    {
      "lang": "en",
      "text": "and the search super memory tool. The",
      "offset": 341.68,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "add to super memory tool simply takes",
      "offset": 343.759,
      "duration": 4.401
    },
    {
      "lang": "en",
      "text": "whatever text you give it and adds it to",
      "offset": 346,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "memory exactly as it is. Then the search",
      "offset": 348.16,
      "duration": 4.879
    },
    {
      "lang": "en",
      "text": "super memory tool takes a keyword based",
      "offset": 350.72,
      "duration": 4.319
    },
    {
      "lang": "en",
      "text": "on what you're looking for, queries your",
      "offset": 353.039,
      "duration": 4.321
    },
    {
      "lang": "en",
      "text": "entire memory and returns any memories",
      "offset": 355.039,
      "duration": 4.241
    },
    {
      "lang": "en",
      "text": "that are related to that keyword. So",
      "offset": 357.36,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "that's how the whole MCP server works.",
      "offset": 359.28,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "On the back end, it uses the super",
      "offset": 361.52,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "memory API which is a memory layer for",
      "offset": 363.52,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "LLMs that you can actually use in your",
      "offset": 365.919,
      "duration": 4.241
    },
    {
      "lang": "en",
      "text": "own code. The creator built the MCP",
      "offset": 367.919,
      "duration": 4.481
    },
    {
      "lang": "en",
      "text": "using this API and it handles both",
      "offset": 370.16,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "storage and querying of the memory base",
      "offset": 372.4,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "through it. It's a solid memory layer,",
      "offset": 374.56,
      "duration": 4.079
    },
    {
      "lang": "en",
      "text": "fast, efficient, and well-built. So, the",
      "offset": 376.56,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "back end it's running on is quite strong",
      "offset": 378.639,
      "duration": 4.321
    },
    {
      "lang": "en",
      "text": "as well. So, at this point, you might be",
      "offset": 380.56,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "wondering, how do you actually install",
      "offset": 382.96,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "the tool? On the tools website, you'll",
      "offset": 384.72,
      "duration": 5.28
    },
    {
      "lang": "en",
      "text": "see a unique MCP URL. This URL is",
      "offset": 386.8,
      "duration": 5.119
    },
    {
      "lang": "en",
      "text": "specific to you and is what's used to",
      "offset": 390,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "store your memories. If you scroll down,",
      "offset": 391.919,
      "duration": 4.081
    },
    {
      "lang": "en",
      "text": "you'll find installation commands for",
      "offset": 394.16,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "different clients like claude, cursor,",
      "offset": 396,
      "duration": 4.319
    },
    {
      "lang": "en",
      "text": "and other generic AI applications that",
      "offset": 398.08,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "support MCPS. I've already installed it",
      "offset": 400.319,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "for Claude and Cursor, and the tools are",
      "offset": 402.72,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "available and working. Now, let's say I",
      "offset": 404.639,
      "duration": 4.241
    },
    {
      "lang": "en",
      "text": "want to install it for Windsurf as well.",
      "offset": 406.72,
      "duration": 4.479
    },
    {
      "lang": "en",
      "text": "All you need to do is copy the command,",
      "offset": 408.88,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "then open your terminal. In the",
      "offset": 411.199,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "terminal, just paste the entire command.",
      "offset": 412.72,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "Now, for some reason, there's an issue",
      "offset": 415.039,
      "duration": 3.681
    },
    {
      "lang": "en",
      "text": "with the default installation command.",
      "offset": 416.72,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "If I run it as is, I get an error and it",
      "offset": 418.72,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "doesn't install. So, here's the fix.",
      "offset": 421.12,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "Just paste the command again, remove the",
      "offset": 422.96,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "extra I, and then run it. Now, it works.",
      "offset": 424.96,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "It'll prompt you for a confirmation.",
      "offset": 427.28,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "Just go ahead and accept it. Once that's",
      "offset": 429.12,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "done, you'll get a confirmation that the",
      "offset": 431.12,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "MCP server has been successfully",
      "offset": 432.96,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "installed in Windinsurf. If you refresh",
      "offset": 434.96,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "Windsurf, you'll see that the MCP server",
      "offset": 436.96,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "has been added. That brings us to the",
      "offset": 439.12,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "end of this video. If you'd like to",
      "offset": 441.12,
      "duration": 3.28
    },
    {
      "lang": "en",
      "text": "support the channel and help us keep",
      "offset": 442.72,
      "duration": 3.759
    },
    {
      "lang": "en",
      "text": "making tutorials like this, you can do",
      "offset": 444.4,
      "duration": 3.919
    },
    {
      "lang": "en",
      "text": "so by using the super thanks button",
      "offset": 446.479,
      "duration": 4.321
    },
    {
      "lang": "en",
      "text": "below. As always, thank you for watching",
      "offset": 448.319,
      "duration": 6.641
    },
    {
      "lang": "en",
      "text": "and I'll see you in the next one.",
      "offset": 450.8,
      "duration": 4.16
    }
  ],
  "cleanText": "The most important thing about LLMs is memory and context. Think about it. We're living in a multiplatform world where we constantly jump between different AI tools. You have multiple tabs open in Cursor. You're brainstorming in Claude or working on another project in Windsurf. But here's the problem. Your memory doesn't persist across these platforms. Now, what if there was a small memory box, a universal container where you could store all your context, preferences, and project details and carry it with you across every single AI agent and LLM you use? This wasn't really possible before, but ever since SuperMemory MCPs came around, it's become incredibly easy to implement. And if you're wondering whether it's hard to set up, no, it's actually quite simple.\n\nSo, let's get into the video and I'll show you the universal memory I'm talking about. So, the tool I'm about to show you is actually called SuperMemory MCP, and it's built on top of the SuperMemory API. I'll explain how it works in a bit, but essentially it gives you your own personal and universal memory MCP. And the problem they're solving is actually pretty interesting. They point out that everyone is building their own memory layer. So, as I already mentioned, why not just carry it around with us? They basically give us this MCP. You just install it for whichever client you're using. You can see all the MCP clients listed here and then go ahead and collect memories from those clients. It stores them seamlessly. And if a memory exists in one client, it will automatically be available in the others as well. This MCP is essentially giving you a memory box where you can store all your memories, whether they're related to a specific project you're working on or just general preferences you want to keep. You can store any type of memory and use it wherever you want.\n\nNow, you might be thinking, how would you actually use this in your workflow? Well, there are two main ways. First, if you're working in any IDE and want to discuss something about your project with the Claude desktop app, you can have persistent memory there, so your context stays preserved. Or for example, if you have multiple windows of your AI IDE open and want the context to persist across them, you can use this tool as well. Let me show you an example. I'm in Cursor right now and I just told it that I'd like to build a simple water tracker app for plants. The first thing I mentioned was that the design of the app should be a 2D pixelated style. Then I gave it a few other specifications like using Nex.js and asked it to search for React libraries that could help create pixelated components. I also gave it a couple of additional requirements. So it went ahead and did its thing, found some libraries and gave me a response. I told it which specific library I wanted to use for generating the pixelated plant images and Cursor built a small little app for me. There were a few errors along the way, but I just copy pasted them into the chat and Cursor fixed them right away. This is the water tracker app it created. Right now, you can see I've clicked on all of the plants. So, it says they were last watered 0 days ago. They have 100% health and they've all been watered. This is the pixelated design it came up with. It's a cute little interface, but for now, it's just a basic MVP and still missing a lot of features. So, here's what I did next. I asked Cursor to generate a description of the initial prompt I had given the tools used to build the app and the structure and features of the MVP. Then I told it to add all of that to memory. It went ahead and created a project summary of everything built so far and then called the MCP tool. If you scroll down, you'll see the second memory that was added. It details the development of the pixelated plant water tracker, what the MVP included and the technologies used. So whenever I want to revisit or expand the app, all the context is already stored. For example, I went into Claude and said, \"I've built the plant water tracker. Pull the context from the MCP because I want to add new features.\" Claude searched super memory, retrieved the full project details, and gave me a list of potential new features. Then I told it the specific ones I wanted: plant management, a separate page for the plant library, and some gamification features. Claude then organized those into a categorized list of features we could add. But I said the list was too extensive and asked for just the essential features to expand the app step by step. So it created a more focused feature list. I then told it to add the refined list to memory. And once again it stored it in super memory. Now if you check the first memory, it shows a document outlining the planned features for the pixelated water tracker app categorized into three main areas with several features under each. And finally, back in Cursor, I told it to search memory again to implement some of the new features already logged. As expected, it called the MCP tool, checked the memory directory, and started planning how to implement those features.\n\nOh, and if you're enjoying the content we're making, I'd really appreciate it if you hit that subscribe button. We're also starting to test out channel memberships to help support what we're building here. Right now, we've only launched the first tier, and it gives you priority replies to your comments. So, if you ever have a question or want feedback, you'll get bumped to the front of the line. If you think that telling Cursor or any other IDE to add your project description into memory again and again is going to get redundant, there's a fix for that, too. Just head into your settings. This might vary depending on the IDE, but go ahead and add project specific rules. As you can see here, I've added a rule. And if I open it, you'll see that I've instructed it. If any changes are made to the app, even structural changes, dependency updates, or text tag edits, it should automatically upload and update those changes in memory. You can also set the rule type to always, so it's automatically attached to every chat within the agent. That way, anytime changes are made to your app, they're uploaded to memory without you having to do it manually each time.\n\nNow, if you're wondering how this actually works, basically the MCP has two tools that you can see: the add to super memory tool and the search super memory tool. The add to super memory tool simply takes whatever text you give it and adds it to memory exactly as it is. Then the search super memory tool takes a keyword based on what you're looking for, queries your entire memory and returns any memories that are related to that keyword. So that's how the whole MCP server works. On the back end, it uses the SuperMemory API which is a memory layer for LLMs that you can actually use in your own code. The creator built the MCP using this API and it handles both storage and querying of the memory base through it. It's a solid memory layer, fast, efficient, and well-built. So, the back end it's running on is quite strong as well.\n\nSo, at this point, you might be wondering, how do you actually install the tool? On the tools website, you'll see a unique MCP URL. This URL is specific to you and is what's used to store your memories. If you scroll down, you'll find installation commands for different clients like Claude, Cursor, and other generic AI applications that support MCPs. I've already installed it for Claude and Cursor, and the tools are available and working. Now, let's say I want to install it for Windsurf as well. All you need to do is copy the command, then open your terminal. In the terminal, just paste the entire command. Now, for some reason, there's an issue with the default installation command. If I run it as is, I get an error and it doesn't install. So, here's the fix. Just paste the command again, remove the extra I, and then run it. Now, it works. It'll prompt you for a confirmation. Just go ahead and accept it. Once that's done, you'll get a confirmation that the MCP server has been successfully installed in Windsurf. If you refresh Windsurf, you'll see that the MCP server has been added. That brings us to the end of this video. If you'd like to support the channel and help us keep making tutorials like this, you can do so by using the super thanks button below. As always, thank you for watching and I'll see you in the next one.\n",
  "dumpedAt": "2025-07-21T18:43:25.749Z"
}