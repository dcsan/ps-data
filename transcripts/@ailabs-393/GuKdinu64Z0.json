{
  "episodeId": "GuKdinu64Z0",
  "channelSlug": "@ailabs-393",
  "title": "NEW METHOD: Cursor AI Now Does 99% of the Work",
  "publishedAt": "2025-05-27T19:00:27.000Z",
  "rawLines": [
    {
      "lang": "en",
      "text": "Let's say you're building a web app in",
      "offset": 0.16,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "cursor. You've got everything set up and",
      "offset": 1.839,
      "duration": 3.601
    },
    {
      "lang": "en",
      "text": "you're deep into development. Now,",
      "offset": 3.84,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "before anything goes live, every part of",
      "offset": 5.44,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "the app needs to be tested properly.",
      "offset": 7.44,
      "duration": 3.52
    },
    {
      "lang": "en",
      "text": "Take something simple like the login",
      "offset": 9.36,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "page. It might seem basic, but it's one",
      "offset": 10.96,
      "duration": 3.839
    },
    {
      "lang": "en",
      "text": "of the most critical parts. You need to",
      "offset": 12.96,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "make sure it handles everything. Invalid",
      "offset": 14.799,
      "duration": 4.081
    },
    {
      "lang": "en",
      "text": "inputs, edge cases, even potential",
      "offset": 16.72,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "attacks. Someone could enter a command",
      "offset": 18.88,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "that tries to delete your entire",
      "offset": 20.88,
      "duration": 3.44
    },
    {
      "lang": "en",
      "text": "database. And if you're not prepared for",
      "offset": 22.48,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "that, things can go very wrong. That's",
      "offset": 24.32,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "why testing every possible use case",
      "offset": 26.32,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "matters, even for something as",
      "offset": 28.4,
      "duration": 3.279
    },
    {
      "lang": "en",
      "text": "straightforward as logging in. Now,",
      "offset": 30.08,
      "duration": 3.36
    },
    {
      "lang": "en",
      "text": "imagine if Cursor could do all that",
      "offset": 31.679,
      "duration": 3.441
    },
    {
      "lang": "en",
      "text": "testing for you. Not just the login",
      "offset": 33.44,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "page, but your entire app from the front",
      "offset": 35.12,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "end to the back end, making sure every",
      "offset": 37.2,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "component works exactly as it should.",
      "offset": 39.28,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "And that's where this agent comes in.",
      "offset": 41.52,
      "duration": 3.4
    },
    {
      "lang": "en",
      "text": "The one I'm talking about is called",
      "offset": 43.04,
      "duration": 3.999
    },
    {
      "lang": "en",
      "text": "operative.sh. And what it does is let",
      "offset": 44.92,
      "duration": 4.76
    },
    {
      "lang": "en",
      "text": "your AI agent debug itself. Cursor can",
      "offset": 47.039,
      "duration": 5.441
    },
    {
      "lang": "en",
      "text": "access this AI agent through MCP. And",
      "offset": 49.68,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "wherever the code is written, it can",
      "offset": 52.48,
      "duration": 3.36
    },
    {
      "lang": "en",
      "text": "test it out for you and carry out the",
      "offset": 54.079,
      "duration": 3.761
    },
    {
      "lang": "en",
      "text": "steps you'd usually handle manually. So",
      "offset": 55.84,
      "duration": 3.359
    },
    {
      "lang": "en",
      "text": "you don't have to go through the trouble",
      "offset": 57.84,
      "duration": 3.12
    },
    {
      "lang": "en",
      "text": "of testing everything on your own. Let's",
      "offset": 59.199,
      "duration": 3.2
    },
    {
      "lang": "en",
      "text": "say you've built a web app. You don't",
      "offset": 60.96,
      "duration": 3.04
    },
    {
      "lang": "en",
      "text": "need to break it down into separate",
      "offset": 62.399,
      "duration": 3.681
    },
    {
      "lang": "en",
      "text": "components. You can just ask it to test",
      "offset": 64,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "the whole app. Cursor already knows how",
      "offset": 66.08,
      "duration": 3.52
    },
    {
      "lang": "en",
      "text": "it wrote the app. So you can give it",
      "offset": 68.08,
      "duration": 3.359
    },
    {
      "lang": "en",
      "text": "instructions in plain English. Just tell",
      "offset": 69.6,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "it what the app does and what needs to",
      "offset": 71.439,
      "duration": 4.081
    },
    {
      "lang": "en",
      "text": "be tested and it takes care of the rest.",
      "offset": 73.36,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "Let me take you through the installation",
      "offset": 75.52,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "first. on their GitHub. They've provided",
      "offset": 77.36,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "a way to install it manually by setting",
      "offset": 79.68,
      "duration": 5.439
    },
    {
      "lang": "en",
      "text": "up each component one by one. Or if you",
      "offset": 82.24,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "prefer a quicker method, you can just",
      "offset": 85.119,
      "duration": 3.841
    },
    {
      "lang": "en",
      "text": "run the installer, which is available",
      "offset": 87.04,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "right here. This is their site. And here",
      "offset": 88.96,
      "duration": 3.839
    },
    {
      "lang": "en",
      "text": "is where the installer can be found.",
      "offset": 90.96,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "Before we install it, we need to get the",
      "offset": 92.799,
      "duration": 4.161
    },
    {
      "lang": "en",
      "text": "API key for this tool. And yes, it's",
      "offset": 94.64,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "free. So, first go ahead and log in.",
      "offset": 96.96,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "Once you're logged in, head over to the",
      "offset": 99.2,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "dashboard. Inside the dashboard, you'll",
      "offset": 101.2,
      "duration": 4.239
    },
    {
      "lang": "en",
      "text": "also find some guides. And if you want,",
      "offset": 103.36,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "you can check those out as well. On the",
      "offset": 105.439,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "sidebar, there's a section for API keys.",
      "offset": 107.36,
      "duration": 5.039
    },
    {
      "lang": "en",
      "text": "You get 100 browser chat completion",
      "offset": 110.079,
      "duration": 4.481
    },
    {
      "lang": "en",
      "text": "requests per month. And once that limit",
      "offset": 112.399,
      "duration": 3.841
    },
    {
      "lang": "en",
      "text": "is reached, you will need to upgrade",
      "offset": 114.56,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "your plan. But for now, let's just",
      "offset": 116.24,
      "duration": 4.159
    },
    {
      "lang": "en",
      "text": "create our key. Go ahead and name it.",
      "offset": 118.32,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "Create the key. And as you can see, it's",
      "offset": 120.399,
      "duration": 3.841
    },
    {
      "lang": "en",
      "text": "already copied and ready to use. Now",
      "offset": 122.24,
      "duration": 4.239
    },
    {
      "lang": "en",
      "text": "that you've copied the API key, the next",
      "offset": 124.24,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "step is to copy the installer command.",
      "offset": 126.479,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "This command will fetch the installation",
      "offset": 128.64,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "script, run it to install everything",
      "offset": 130.479,
      "duration": 3.601
    },
    {
      "lang": "en",
      "text": "automatically, and then delete the",
      "offset": 132.4,
      "duration": 3.44
    },
    {
      "lang": "en",
      "text": "script once it's done. So, let's open",
      "offset": 134.08,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "the terminal, paste the command we just",
      "offset": 135.84,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "copied, and run it. As you can see,",
      "offset": 137.92,
      "duration": 3.2
    },
    {
      "lang": "en",
      "text": "we're getting an interactive",
      "offset": 139.84,
      "duration": 3.28
    },
    {
      "lang": "en",
      "text": "installation process. The first question",
      "offset": 141.12,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "it asks is about the installation type.",
      "offset": 143.12,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "In other words, where do we want to",
      "offset": 145.52,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "install the MCP? Since this is an MCP",
      "offset": 147.12,
      "duration": 5.16
    },
    {
      "lang": "en",
      "text": "installation, it will modify the MCP",
      "offset": 149.76,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "config.json file of whichever tool we",
      "offset": 152.28,
      "duration": 4.36
    },
    {
      "lang": "en",
      "text": "choose. Let's go ahead and select cursor",
      "offset": 154.64,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "here. What it's doing now is setting up",
      "offset": 156.64,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "the directory, checking for any required",
      "offset": 158.56,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "dependencies and downloading the",
      "offset": 160.72,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "additional components needed to get the",
      "offset": 162.56,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "tool running properly. The installation",
      "offset": 164.4,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "has finished and it automatically",
      "offset": 166.4,
      "duration": 3.839
    },
    {
      "lang": "en",
      "text": "integrated itself with cursor. Now we",
      "offset": 168.08,
      "duration": 4.239
    },
    {
      "lang": "en",
      "text": "have the web eval agent along with its",
      "offset": 170.239,
      "duration": 4.321
    },
    {
      "lang": "en",
      "text": "tools which include the web eval agent",
      "offset": 172.319,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "itself and the setup browser state tool.",
      "offset": 174.56,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "We'll take a closer look at what these",
      "offset": 176.879,
      "duration": 3.281
    },
    {
      "lang": "en",
      "text": "do in just a moment. During the",
      "offset": 178.48,
      "duration": 3.839
    },
    {
      "lang": "en",
      "text": "installation, it also asks for your API",
      "offset": 180.16,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "key, so you'll need to paste that in. As",
      "offset": 182.319,
      "duration": 4.081
    },
    {
      "lang": "en",
      "text": "part of the setup, it launches a browser",
      "offset": 184.4,
      "duration": 3.759
    },
    {
      "lang": "en",
      "text": "instance, which means Playright was",
      "offset": 186.4,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "installed as well. One important thing",
      "offset": 188.159,
      "duration": 3.201
    },
    {
      "lang": "en",
      "text": "they mention at the end of the",
      "offset": 190,
      "duration": 3.36
    },
    {
      "lang": "en",
      "text": "installation is that you need to restart",
      "offset": 191.36,
      "duration": 3.599
    },
    {
      "lang": "en",
      "text": "whichever app you're using for",
      "offset": 193.36,
      "duration": 3.44
    },
    {
      "lang": "en",
      "text": "everything to work correctly. If you",
      "offset": 194.959,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "skip this step, it might not appear or",
      "offset": 196.8,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "function as expected. If you open cursor",
      "offset": 198.879,
      "duration": 4.241
    },
    {
      "lang": "en",
      "text": "and it's not working, try hitting the",
      "offset": 201.2,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "refresh button. That usually solves it.",
      "offset": 203.12,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "If it still doesn't show up, just close",
      "offset": 205.2,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "and reopen cursor and that should take",
      "offset": 207.2,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "care of the issue. So, this is a website",
      "offset": 209.44,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "I quickly put together just to test this",
      "offset": 211.599,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "tool. We're going to run some tests on",
      "offset": 213.76,
      "duration": 3.839
    },
    {
      "lang": "en",
      "text": "it. And the main area we'll be focusing",
      "offset": 215.599,
      "duration": 4.481
    },
    {
      "lang": "en",
      "text": "on is the login and signin process. Let",
      "offset": 217.599,
      "duration": 4.321
    },
    {
      "lang": "en",
      "text": "me go ahead and log in. All right. Now",
      "offset": 220.08,
      "duration": 3.519
    },
    {
      "lang": "en",
      "text": "that we're signed in, this is the",
      "offset": 221.92,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "dashboard. It has a really clean look",
      "offset": 223.599,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "because I built it using Aceternity UI,",
      "offset": 225.76,
      "duration": 4.8
    },
    {
      "lang": "en",
      "text": "which is a great UI library. There isn't",
      "offset": 228.319,
      "duration": 4.161
    },
    {
      "lang": "en",
      "text": "much else going on here aside from that,",
      "offset": 230.56,
      "duration": 4.239
    },
    {
      "lang": "en",
      "text": "but our main goal is to test the login",
      "offset": 232.48,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "functionality. So, for now, let's go",
      "offset": 234.799,
      "duration": 3.44
    },
    {
      "lang": "en",
      "text": "ahead and sign out and I'll show you",
      "offset": 236.64,
      "duration": 3.599
    },
    {
      "lang": "en",
      "text": "what you can do next. First, let me give",
      "offset": 238.239,
      "duration": 3.681
    },
    {
      "lang": "en",
      "text": "you a little background on the tool.",
      "offset": 240.239,
      "duration": 3.521
    },
    {
      "lang": "en",
      "text": "Right now, it includes two main",
      "offset": 241.92,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "components. The web eval agent and the",
      "offset": 243.76,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "setup browser state. If we take a step",
      "offset": 246.319,
      "duration": 4.161
    },
    {
      "lang": "en",
      "text": "back, you'll see that each one serves a",
      "offset": 248.4,
      "duration": 3.919
    },
    {
      "lang": "en",
      "text": "different purpose. The web evil agent",
      "offset": 250.48,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "acts as an automatic emulator that uses",
      "offset": 252.319,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "the browser to carry out any task you",
      "offset": 254.56,
      "duration": 3.919
    },
    {
      "lang": "en",
      "text": "describe in natural language. And it",
      "offset": 256.639,
      "duration": 3.761
    },
    {
      "lang": "en",
      "text": "does this using Playright. On the other",
      "offset": 258.479,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "hand, the setup browser state lets you",
      "offset": 260.4,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "sign into your browser once if the site",
      "offset": 262.639,
      "duration": 4.641
    },
    {
      "lang": "en",
      "text": "you're testing requires authentication.",
      "offset": 264.96,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "So you won't have to handle that",
      "offset": 267.28,
      "duration": 3.52
    },
    {
      "lang": "en",
      "text": "manually each time. These are the two",
      "offset": 268.72,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "core tools that come with the setup. Now",
      "offset": 270.8,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "let us talk about what arguments these",
      "offset": 272.88,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "tools actually require. The main tool",
      "offset": 274.72,
      "duration": 3.919
    },
    {
      "lang": "en",
      "text": "which is the web evil agent first",
      "offset": 276.72,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "requires a URL. This is the address",
      "offset": 278.639,
      "duration": 3.761
    },
    {
      "lang": "en",
      "text": "where your app is running. If it is",
      "offset": 280.72,
      "duration": 3.44
    },
    {
      "lang": "en",
      "text": "hosted elsewhere, you can enter the",
      "offset": 282.4,
      "duration": 3.6
    },
    {
      "lang": "en",
      "text": "corresponding URL where your app is",
      "offset": 284.16,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "live. The next argument is the task.",
      "offset": 286,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "This is a natural language description",
      "offset": 288.08,
      "duration": 3.839
    },
    {
      "lang": "en",
      "text": "of what you want the agent to do. You do",
      "offset": 289.84,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "not need to include any technical",
      "offset": 291.919,
      "duration": 3.761
    },
    {
      "lang": "en",
      "text": "details. just describe what a normal",
      "offset": 293.6,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "user would do while interacting with",
      "offset": 295.68,
      "duration": 3.519
    },
    {
      "lang": "en",
      "text": "your app. There is also an argument",
      "offset": 297.52,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "called headless browser. By default, it",
      "offset": 299.199,
      "duration": 4.241
    },
    {
      "lang": "en",
      "text": "is set to false, which means you will",
      "offset": 301.52,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "see the browser window while the agent",
      "offset": 303.44,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "performs the task. If you want to run it",
      "offset": 305.52,
      "duration": 3.679
    },
    {
      "lang": "en",
      "text": "silently in the background without",
      "offset": 307.52,
      "duration": 3.679
    },
    {
      "lang": "en",
      "text": "opening a visible window, you can set",
      "offset": 309.199,
      "duration": 4.481
    },
    {
      "lang": "en",
      "text": "this to true by instructing cursor. Now,",
      "offset": 311.199,
      "duration": 4.481
    },
    {
      "lang": "en",
      "text": "let us look at the setup browser state",
      "offset": 313.68,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "tool. This one does not really require",
      "offset": 315.68,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "anything. The URL is optional. Its main",
      "offset": 317.68,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "function is to let you sign in once and",
      "offset": 320.24,
      "duration": 4.239
    },
    {
      "lang": "en",
      "text": "it will save that browser session so you",
      "offset": 322.4,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "do not need to log in again the next",
      "offset": 324.479,
      "duration": 4.081
    },
    {
      "lang": "en",
      "text": "time you run your tests. So I ran a",
      "offset": 326.32,
      "duration": 4.319
    },
    {
      "lang": "en",
      "text": "login test just to make sure everything",
      "offset": 328.56,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "was working properly. And here is how it",
      "offset": 330.639,
      "duration": 4.241
    },
    {
      "lang": "en",
      "text": "went. First I asked it in simple",
      "offset": 332.88,
      "duration": 4.319
    },
    {
      "lang": "en",
      "text": "language to test the login. If cursor",
      "offset": 334.88,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "understands the task, it automatically",
      "offset": 337.199,
      "duration": 3.761
    },
    {
      "lang": "en",
      "text": "translates that instruction into",
      "offset": 339.28,
      "duration": 3.919
    },
    {
      "lang": "en",
      "text": "step-by-step actions. All you need to do",
      "offset": 340.96,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "is describe it naturally and it fills in",
      "offset": 343.199,
      "duration": 4.321
    },
    {
      "lang": "en",
      "text": "the argument with the required details.",
      "offset": 345.44,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "In my case, the app was running locally",
      "offset": 347.52,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "on port 3000. So I did not have to",
      "offset": 349.52,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "provide any technical arguments. I just",
      "offset": 352,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "told it where the app was running and",
      "offset": 354.08,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "cursor handled everything else. This is",
      "offset": 355.84,
      "duration": 4.639
    },
    {
      "lang": "en",
      "text": "the MCP tool call that was made. You can",
      "offset": 357.84,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "see that we invoked the web eval agent",
      "offset": 360.479,
      "duration": 4.481
    },
    {
      "lang": "en",
      "text": "tool. Both the URL and the task were",
      "offset": 362.72,
      "duration": 4.479
    },
    {
      "lang": "en",
      "text": "filled in automatically. The task itself",
      "offset": 364.96,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "was broken down into step-by-step",
      "offset": 367.199,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "instructions and I did not have to write",
      "offset": 369.12,
      "duration": 3.919
    },
    {
      "lang": "en",
      "text": "any detailed logic for that to happen.",
      "offset": 371.039,
      "duration": 3.761
    },
    {
      "lang": "en",
      "text": "You will also notice that headless",
      "offset": 373.039,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "browser was set to false, which meant I",
      "offset": 374.8,
      "duration": 3.839
    },
    {
      "lang": "en",
      "text": "could actually see the browser",
      "offset": 377.199,
      "duration": 3.681
    },
    {
      "lang": "en",
      "text": "performing the actions live instead of",
      "offset": 378.639,
      "duration": 4.241
    },
    {
      "lang": "en",
      "text": "running quietly in the background. It",
      "offset": 380.88,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "opened a dashboard that acted like a",
      "offset": 382.88,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "control center. On the left side, it",
      "offset": 384.96,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "showed a live preview of what was",
      "offset": 387.12,
      "duration": 3.199
    },
    {
      "lang": "en",
      "text": "happening. Even if you run it in",
      "offset": 388.8,
      "duration": 3.36
    },
    {
      "lang": "en",
      "text": "headless mode, you can still go to the",
      "offset": 390.319,
      "duration": 3.681
    },
    {
      "lang": "en",
      "text": "dashboard and watch the process in real",
      "offset": 392.16,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "time. There was a status tab that showed",
      "offset": 394,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "the current state of the agent, although",
      "offset": 396.08,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "it did not give many details about the",
      "offset": 398,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "actual testing steps. In the console",
      "offset": 400.08,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "tab, however, all the logs were visible.",
      "offset": 402.16,
      "duration": 4.479
    },
    {
      "lang": "en",
      "text": "It also captured and displayed every",
      "offset": 404.56,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "network request and response. This gave",
      "offset": 406.639,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "us full visibility into the test",
      "offset": 408.88,
      "duration": 5.92
    },
    {
      "lang": "en",
      "text": "results. Errors, logs, screenshots, and",
      "offset": 411.039,
      "duration": 5.361
    },
    {
      "lang": "en",
      "text": "everything else were sent back to",
      "offset": 414.8,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "cursor. The results from the login test",
      "offset": 416.4,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "showed that everything was working",
      "offset": 418.8,
      "duration": 3.519
    },
    {
      "lang": "en",
      "text": "correctly. It successfully went through",
      "offset": 420.4,
      "duration": 4.639
    },
    {
      "lang": "en",
      "text": "the entire flow by creating an ID,",
      "offset": 422.319,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "signing up, logging in, and then logging",
      "offset": 425.039,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "out. However, it did not test any edge",
      "offset": 427.039,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "cases. Right now I do not think there is",
      "offset": 429.199,
      "duration": 4.481
    },
    {
      "lang": "en",
      "text": "any protection built in for those kinds",
      "offset": 431.599,
      "duration": 4.241
    },
    {
      "lang": "en",
      "text": "of situations like when a user enters",
      "offset": 433.68,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "something invalid. So the next step is",
      "offset": 435.84,
      "duration": 4.639
    },
    {
      "lang": "en",
      "text": "to ask cursor to generate some edge",
      "offset": 437.84,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "cases for the login test. Run them",
      "offset": 440.479,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "through this agent and make sure those",
      "offset": 442.4,
      "duration": 4.079
    },
    {
      "lang": "en",
      "text": "cases are handled correctly. This is the",
      "offset": 444.319,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "workflow we are trying to set up using",
      "offset": 446.479,
      "duration": 4.641
    },
    {
      "lang": "en",
      "text": "this MCP. If you're enjoying the video,",
      "offset": 448.479,
      "duration": 4.321
    },
    {
      "lang": "en",
      "text": "I'd really appreciate it if you could",
      "offset": 451.12,
      "duration": 3.359
    },
    {
      "lang": "en",
      "text": "subscribe to the channel. We're aiming",
      "offset": 452.8,
      "duration": 4.239
    },
    {
      "lang": "en",
      "text": "to hit 25,000 subscribers by the end of",
      "offset": 454.479,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "this month and your support really",
      "offset": 457.039,
      "duration": 3.681
    },
    {
      "lang": "en",
      "text": "helps. We share videos like this three",
      "offset": 458.639,
      "duration": 3.521
    },
    {
      "lang": "en",
      "text": "times a week, so there's always",
      "offset": 460.72,
      "duration": 3.12
    },
    {
      "lang": "en",
      "text": "something new and useful for you to",
      "offset": 462.16,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "check out. Okay, so here is how I",
      "offset": 463.84,
      "duration": 3.919
    },
    {
      "lang": "en",
      "text": "extensively tested the login",
      "offset": 466,
      "duration": 3.599
    },
    {
      "lang": "en",
      "text": "functionality. The tests are still",
      "offset": 467.759,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "running, and as you can see, it is still",
      "offset": 469.599,
      "duration": 4.241
    },
    {
      "lang": "en",
      "text": "generating results. If I go into the",
      "offset": 471.759,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "dashboard and open the control center,",
      "offset": 473.84,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "you can see the tests in progress right",
      "offset": 475.919,
      "duration": 4.241
    },
    {
      "lang": "en",
      "text": "here. There is a live preview on one",
      "offset": 478.16,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "side, the agent status on the other,",
      "offset": 480.16,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "along with the console logs and network",
      "offset": 482.24,
      "duration": 3.92
    },
    {
      "lang": "en",
      "text": "requests. Everything is clearly",
      "offset": 484.24,
      "duration": 4.079
    },
    {
      "lang": "en",
      "text": "displayed and the tests are running in",
      "offset": 486.16,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "the background. Here is essentially what",
      "offset": 488.319,
      "duration": 3.841
    },
    {
      "lang": "en",
      "text": "I did. I asked it to write test cases",
      "offset": 490,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "for the login functionality including",
      "offset": 492.16,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "edge cases. I created a file called",
      "offset": 494.4,
      "duration": 4.799
    },
    {
      "lang": "en",
      "text": "login test cases and it generated all",
      "offset": 496.8,
      "duration": 4.799
    },
    {
      "lang": "en",
      "text": "the test cases inside that file. You can",
      "offset": 499.199,
      "duration": 4.241
    },
    {
      "lang": "en",
      "text": "see there is a section for the actual",
      "offset": 501.599,
      "duration": 3.841
    },
    {
      "lang": "en",
      "text": "result and the test cases are being",
      "offset": 503.44,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "parsed one at a time. The first test",
      "offset": 505.44,
      "duration": 4.319
    },
    {
      "lang": "en",
      "text": "case was parsed then the second and so",
      "offset": 507.44,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "on. Right now I think it is on test case",
      "offset": 509.759,
      "duration": 4.881
    },
    {
      "lang": "en",
      "text": "5 because that section has not updated",
      "offset": 512.32,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "yet. What happens is that the agent",
      "offset": 514.64,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "performs a test case then comes back and",
      "offset": 516.64,
      "duration": 4.879
    },
    {
      "lang": "en",
      "text": "edits the result directly into the file.",
      "offset": 519.12,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "At this point cursor has generated",
      "offset": 521.519,
      "duration": 4.641
    },
    {
      "lang": "en",
      "text": "around 28 test cases all of them very",
      "offset": 523.519,
      "duration": 4.801
    },
    {
      "lang": "en",
      "text": "granular. Every small detail is checked",
      "offset": 526.16,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "to make sure nothing is overlooked. This",
      "offset": 528.32,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "is how real software development works.",
      "offset": 530.24,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "Every edge case is accounted for because",
      "offset": 532.56,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "as the app grows the likelihood of bugs",
      "offset": 534.64,
      "duration": 4.319
    },
    {
      "lang": "en",
      "text": "increases a lot. This is how you can",
      "offset": 537.04,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "make sure everything works correctly",
      "offset": 538.959,
      "duration": 3.44
    },
    {
      "lang": "en",
      "text": "while you are still building. You are",
      "offset": 540.8,
      "duration": 3.599
    },
    {
      "lang": "en",
      "text": "not missing anything and every possible",
      "offset": 542.399,
      "duration": 3.921
    },
    {
      "lang": "en",
      "text": "scenario is covered. You just write the",
      "offset": 544.399,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "test cases and Playright handles the",
      "offset": 546.32,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "actual testing. Right now the browser is",
      "offset": 548.399,
      "duration": 4.161
    },
    {
      "lang": "en",
      "text": "not visible because I ran the tests in",
      "offset": 550.48,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "headless mode. After writing the file, I",
      "offset": 552.56,
      "duration": 4.48
    },
    {
      "lang": "en",
      "text": "told the agent to go ahead and test each",
      "offset": 555.04,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "use case and then returned to mark each",
      "offset": 557.04,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "one as passed or failed. I set the app",
      "offset": 559.2,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "location to localhost on port 3000,",
      "offset": 561.36,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "provided the URL and enabled headless",
      "offset": 564.08,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "mode. You can see that the tests have",
      "offset": 566.32,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "started running and right now let me",
      "offset": 568.24,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "check. Yes, it is currently on test case",
      "offset": 570,
      "duration": 4.72
    },
    {
      "lang": "en",
      "text": "10. It has been about 7 minutes since",
      "offset": 572.64,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "the test started and it has already",
      "offset": 574.72,
      "duration": 4.239
    },
    {
      "lang": "en",
      "text": "worked through 10 use cases. Now I do",
      "offset": 576.72,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "want to mention something important.",
      "offset": 578.959,
      "duration": 4.081
    },
    {
      "lang": "en",
      "text": "Using AI for testing is a slow process.",
      "offset": 580.48,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "It does take time but the advantage is",
      "offset": 583.04,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "that I do not have to write any scripts.",
      "offset": 585.04,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "This is a simple example but it can be",
      "offset": 587.2,
      "duration": 4.319
    },
    {
      "lang": "en",
      "text": "applied in any situation. The AI looks",
      "offset": 589.2,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "at the tags, writes the code and runs",
      "offset": 591.519,
      "duration": 4.561
    },
    {
      "lang": "en",
      "text": "the tests automatically. All you have to",
      "offset": 593.76,
      "duration": 5.04
    },
    {
      "lang": "en",
      "text": "do is provide the use cases and it tests",
      "offset": 596.08,
      "duration": 4.879
    },
    {
      "lang": "en",
      "text": "them, reports back and updates the",
      "offset": 598.8,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "results. This may be a small",
      "offset": 600.959,
      "duration": 3.681
    },
    {
      "lang": "en",
      "text": "implementation, but it could easily grow",
      "offset": 602.56,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "into a complete system that tracks which",
      "offset": 604.64,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "test cases were parsed, which ones were",
      "offset": 606.8,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "missed and automatically handles the",
      "offset": 609.04,
      "duration": 3.919
    },
    {
      "lang": "en",
      "text": "rest. And finally, I wanted to mention",
      "offset": 610.88,
      "duration": 4.56
    },
    {
      "lang": "en",
      "text": "Claude 4. It was released just 2 or 3",
      "offset": 612.959,
      "duration": 4.641
    },
    {
      "lang": "en",
      "text": "days ago at the time of this recording.",
      "offset": 615.44,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "And I have to say the model is really",
      "offset": 617.6,
      "duration": 4.479
    },
    {
      "lang": "en",
      "text": "impressive. So far, I have genuinely",
      "offset": 619.76,
      "duration": 4.4
    },
    {
      "lang": "en",
      "text": "enjoyed using it. It does not have the",
      "offset": 622.079,
      "duration": 4.081
    },
    {
      "lang": "en",
      "text": "same frustrating issues that earlier",
      "offset": 624.16,
      "duration": 4.32
    },
    {
      "lang": "en",
      "text": "models did and overall it has been a",
      "offset": 626.16,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "great experience working with clawed",
      "offset": 628.48,
      "duration": 3.919
    },
    {
      "lang": "en",
      "text": "force on it. And here are the final",
      "offset": 630.16,
      "duration": 4.96
    },
    {
      "lang": "en",
      "text": "results. A total of nine tests were not",
      "offset": 632.399,
      "duration": 4.88
    },
    {
      "lang": "en",
      "text": "executed. This was either because they",
      "offset": 635.12,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "required specific tools that were not",
      "offset": 637.279,
      "duration": 3.841
    },
    {
      "lang": "en",
      "text": "available, needed some manual",
      "offset": 639.36,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "configuration inside the browser, or",
      "offset": 641.12,
      "duration": 4.399
    },
    {
      "lang": "en",
      "text": "were skipped due to other limitations in",
      "offset": 643.2,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "the environment. Regardless of the",
      "offset": 645.519,
      "duration": 3.601
    },
    {
      "lang": "en",
      "text": "reason, those nine tests did not run.",
      "offset": 647.2,
      "duration": 4.639
    },
    {
      "lang": "en",
      "text": "Out of the remaining tests, 60% passed",
      "offset": 649.12,
      "duration": 4.64
    },
    {
      "lang": "en",
      "text": "successfully. And this is exactly the",
      "offset": 651.839,
      "duration": 3.921
    },
    {
      "lang": "en",
      "text": "kind of process you want in place during",
      "offset": 653.76,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "development. If any of the tests had",
      "offset": 655.76,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "failed or if the outcome had not matched",
      "offset": 657.76,
      "duration": 4.24
    },
    {
      "lang": "en",
      "text": "the expected results, that information",
      "offset": 659.76,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "would have been sent back to cursor.",
      "offset": 662,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "From there, we could have identified the",
      "offset": 663.92,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "issue and fixed it right away. This",
      "offset": 665.76,
      "duration": 4.079
    },
    {
      "lang": "en",
      "text": "entire workflow can now be reused.",
      "offset": 667.68,
      "duration": 4.08
    },
    {
      "lang": "en",
      "text": "Whether you are building a new feature,",
      "offset": 669.839,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "working on a specific component, or",
      "offset": 671.76,
      "duration": 4.16
    },
    {
      "lang": "en",
      "text": "testing your full application, this same",
      "offset": 673.839,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "process applies and helps ensure",
      "offset": 675.92,
      "duration": 3.84
    },
    {
      "lang": "en",
      "text": "everything is functioning as expected.",
      "offset": 677.839,
      "duration": 3.68
    },
    {
      "lang": "en",
      "text": "That brings us to the end of this video.",
      "offset": 679.76,
      "duration": 3.44
    },
    {
      "lang": "en",
      "text": "If you'd like to support the channel and",
      "offset": 681.519,
      "duration": 3.76
    },
    {
      "lang": "en",
      "text": "help us keep making tutorials like this,",
      "offset": 683.2,
      "duration": 4
    },
    {
      "lang": "en",
      "text": "you can do so by using the super thanks",
      "offset": 685.279,
      "duration": 3.921
    },
    {
      "lang": "en",
      "text": "button below. As always, thank you for",
      "offset": 687.2,
      "duration": 3.44
    },
    {
      "lang": "en",
      "text": "watching and I'll see you in the next",
      "offset": 689.2,
      "duration": 4.44
    },
    {
      "lang": "en",
      "text": "one.",
      "offset": 690.64,
      "duration": 3
    }
  ],
  "cleanText": "Let's say you're building a web app in Cursor. You've got everything set up and you're deep into development. Now, before anything goes live, every part of the app needs to be tested properly. Take something simple like the login page. It might seem basic, but it's one of the most critical parts. You need to make sure it handles everything: invalid inputs, edge cases, even potential attacks. Someone could enter a command that tries to delete your entire database. And if you're not prepared for that, things can go very wrong. That's why testing every possible use case matters, even for something as straightforward as logging in. Now, imagine if Cursor could do all that testing for you. Not just the login page, but your entire app from the front end to the back end, making sure every component works exactly as it should. And that's where this agent comes in. The one I'm talking about is called Operative.sh. And what it does is let your AI agent debug itself. Cursor can access this AI agent through MCP. And wherever the code is written, it can test it out for you and carry out the steps you'd usually handle manually. So you don't have to go through the trouble of testing everything on your own. Let's say you've built a web app. You don't need to break it down into separate components. You can just ask it to test the whole app. Cursor already knows how it wrote the app. So you can give it instructions in plain English. Just tell it what the app does and what needs to be tested and it takes care of the rest. Let me take you through the installation first. On their GitHub, they've provided a way to install it manually by setting up each component one by one. Or if you prefer a quicker method, you can just run the installer, which is available right here. This is their site. And here is where the installer can be found. Before we install it, we need to get the API key for this tool. And yes, it's free. So, first go ahead and log in. Once you're logged in, head over to the dashboard. Inside the dashboard, you'll also find some guides. And if you want, you can check those out as well. On the sidebar, there's a section for API keys. You get 100 browser chat completion requests per month. And once that limit is reached, you will need to upgrade your plan. But for now, let's just create our key. Go ahead and name it. Create the key. And as you can see, it's already copied and ready to use. Now that you've copied the API key, the next step is to copy the installer command. This command will fetch the installation script, run it to install everything automatically, and then delete the script once it's done. So, let's open the terminal, paste the command we just copied, and run it. As you can see, we're getting an interactive installation process. The first question it asks is about the installation type. In other words, where do we want to install the MCP? Since this is an MCP installation, it will modify the MCP config.json file of whichever tool we choose. Let's go ahead and select Cursor here. What it's doing now is setting up the directory, checking for any required dependencies and downloading the additional components needed to get the tool running properly. The installation has finished and it automatically integrated itself with Cursor. Now we have the WebEvalAgent along with its tools which include the WebEvalAgent itself and the setup browser state tool. We'll take a closer look at what these do in just a moment. During the installation, it also asks for your API key, so you'll need to paste that in. As part of the setup, it launches a browser instance, which means Playright was installed as well. One important thing they mention at the end of the installation is that you need to restart whichever app you're using for everything to work correctly. If you skip this step, it might not appear or function as expected. If you open Cursor and it's not working, try hitting the refresh button. That usually solves it. If it still doesn't show up, just close and reopen Cursor and that should take care of the issue. So, this is a website I quickly put together just to test this tool. We're going to run some tests on it. And the main area we'll be focusing on is the login and signin process. Let me go ahead and log in. All right. Now that we're signed in, this is the dashboard. It has a really clean look because I built it using Aceternity UI, which is a great UI library. There isn't much else going on here aside from that, but our main goal is to test the login functionality. So, for now, let's go ahead and sign out and I'll show you what you can do next. First, let me give you a little background on the tool. Right now, it includes two main components: the WebEvalAgent and the setup browser state. If we take a step back, you'll see that each one serves a different purpose. The WebEvalAgent acts as an automatic emulator that uses the browser to carry out any task you describe in natural language. And it does this using Playright. On the other hand, the setup browser state lets you sign into your browser once if the site you're testing requires authentication. So you won't have to handle that manually each time. These are the two core tools that come with the setup. Now let us talk about what arguments these tools actually require. The main tool, which is the WebEvalAgent, first requires a URL. This is the address where your app is running. If it is hosted elsewhere, you can enter the corresponding URL where your app is live. The next argument is the task. This is a natural language description of what you want the agent to do. You do not need to include any technical details. Just describe what a normal user would do while interacting with your app. There is also an argument called headless browser. By default, it is set to false, which means you will see the browser window while the agent performs the task. If you want to run it silently in the background without opening a visible window, you can set this to true by instructing Cursor. Now, let us look at the setup browser state tool. This one does not really require anything. The URL is optional. Its main function is to let you sign in once and it will save that browser session so you do not need to log in again the next time you run your tests. So I ran a login test just to make sure everything was working properly. And here is how it went. First I asked it in simple language to test the login. If Cursor understands the task, it automatically translates that instruction into step-by-step actions. All you need to do is describe it naturally and it fills in the argument with the required details. In my case, the app was running locally on port 3000. So I did not have to provide any technical arguments. I just told it where the app was running and Cursor handled everything else. This is the MCP tool call that was made. You can see that we invoked the WebEvalAgent tool. Both the URL and the task were filled in automatically. The task itself was broken down into step-by-step instructions and I did not have to write any detailed logic for that to happen. You will also notice that headless browser was set to false, which meant I could actually see the browser performing the actions live instead of running quietly in the background. It opened a dashboard that acted like a control center. On the left side, it showed a live preview of what was happening. Even if you run it in headless mode, you can still go to the dashboard and watch the process in real time. There was a status tab that showed the current state of the agent, although it did not give many details about the actual testing steps. In the console tab, however, all the logs were visible. It also captured and displayed every network request and response. This gave us full visibility into the test results. Errors, logs, screenshots, and everything else were sent back to Cursor. The results from the login test showed that everything was working correctly. It successfully went through the entire flow by creating an ID, signing up, logging in, and then logging out. However, it did not test any edge cases. Right now I do not think there is any protection built in for those kinds of situations like when a user enters something invalid. So the next step is to ask Cursor to generate some edge cases for the login test. Run them through this agent and make sure those cases are handled correctly. This is the workflow we are trying to set up using this MCP. If you're enjoying the video, I'd really appreciate it if you could subscribe to the channel. We're aiming to hit 25,000 subscribers by the end of this month and your support really helps. We share videos like this three times a week, so there's always something new and useful for you to check out. Okay, so here is how I extensively tested the login functionality. The tests are still running, and as you can see, it is still generating results. If I go into the dashboard and open the control center, you can see the tests in progress right here. There is a live preview on one side, the agent status on the other, along with the console logs and network requests. Everything is clearly displayed and the tests are running in the background. Here is essentially what I did. I asked it to write test cases for the login functionality including edge cases. I created a file called login test cases and it generated all the test cases inside that file. You can see there is a section for the actual result and the test cases are being parsed one at a time. The first test case was parsed then the second and so on. Right now I think it is on test case 5 because that section has not updated yet. What happens is that the agent performs a test case then comes back and edits the result directly into the file. At this point Cursor has generated around 28 test cases all of them very granular. Every small detail is checked to make sure nothing is overlooked. This is how real software development works. Every edge case is accounted for because as the app grows the likelihood of bugs increases a lot. This is how you can make sure everything works correctly while you are still building. You are not missing anything and every possible scenario is covered. You just write the test cases and Playright handles the actual testing. Right now the browser is not visible because I ran the tests in headless mode. After writing the file, I told the agent to go ahead and test each use case and then returned to mark each one as passed or failed. I set the app location to localhost on port 3000, provided the URL and enabled headless mode. You can see that the tests have started running and right now let me check. Yes, it is currently on test case 10. It has been about 7 minutes since the test started and it has already worked through 10 use cases. Now I do want to mention something important. Using AI for testing is a slow process. It does take time but the advantage is that I do not have to write any scripts. This is a simple example but it can be applied in any situation. The AI looks at the tags, writes the code and runs the tests automatically. All you have to do is provide the use cases and it tests them, reports back and updates the results. This may be a small implementation, but it could easily grow into a complete system that tracks which test cases were parsed, which ones were missed and automatically handles the rest. And finally, I wanted to mention Claude 4. It was released just 2 or 3 days ago at the time of this recording. And I have to say the model is really impressive. So far, I have genuinely enjoyed using it. It does not have the same frustrating issues that earlier models did and overall it has been a great experience working with clawed force on it. And here are the final results. A total of nine tests were not executed. This was either because they required specific tools that were not available, needed some manual configuration inside the browser, or were skipped due to other limitations in the environment. Regardless of the reason, those nine tests did not run. Out of the remaining tests, 60% passed successfully. And this is exactly the kind of process you want in place during development. If any of the tests had failed or if the outcome had not matched the expected results, that information would have been sent back to Cursor. From there, we could have identified the issue and fixed it right away. This entire workflow can now be reused. Whether you are building a new feature, working on a specific component, or testing your full application, this same process applies and helps ensure everything is functioning as expected. That brings us to the end of this video. If you'd like to support the channel and help us keep making tutorials like this, you can do so by using the super thanks button below. As always, thank you for watching and I'll see you in the next one.\n",
  "dumpedAt": "2025-07-21T18:43:25.426Z"
}